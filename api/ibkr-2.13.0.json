{
    "openapi": "3.0.0",
    "info": {
        "title": "IB REST API",
        "description": "The IB REST API reference documentation",
        "contact": {
            "name": "API support",
            "email": "api@interactivebrokers.com"
        },
        "version": "2.13.0"
    },
    "externalDocs": {
        "description": "Find out more about IB's public API offerings.",
        "url": "https://ibkrcampus.com/ibkr-api-page/ibkr-api-home/"
    },
    "servers": [
        {
            "url": "https://api.ibkr.com",
            "description": "Production"
        },
        {
            "url": "https://qa.interactivebrokers.com",
            "description": "Sandbox"
        }
    ],
    "tags": [
        {
            "name": "Account Management Accounts",
            "x-displayName": "Accounts",
            "x-ib-tag-group-name": "Account Management"
        },
        {
            "name": "Account Management Banking",
            "x-displayName": "Banking",
            "x-ib-tag-group-name": "Account Management"
        },
        {
            "name": "Account Management Reports",
            "x-displayName": "Reports",
            "x-ib-tag-group-name": "Account Management"
        },
        {
            "name": "Account Management Utilities",
            "x-displayName": "Utilities",
            "x-ib-tag-group-name": "Account Management"
        },
        {
            "name": "Authorization SSO Sessions",
            "x-displayName": "SSO Sessions",
            "x-ib-tag-group-name": "Authorization"
        },
        {
            "name": "Authorization Token",
            "x-displayName": "Token",
            "x-ib-tag-group-name": "Authorization"
        },
        {
            "name": "Trading Accounts",
            "x-displayName": "Accounts",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Alerts",
            "x-displayName": "Alerts",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Contracts",
            "x-displayName": "Contracts",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading FA Allocation Management",
            "x-displayName": "FA Allocation Management",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading FYIs and Notifications",
            "x-displayName": "FYIs and Notifications",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Market Data",
            "x-displayName": "Market Data",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading OAuth 1.0a",
            "x-displayName": "OAuth 1.0a",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Orders",
            "x-displayName": "Orders",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Portfolio",
            "x-displayName": "Portfolio",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Portfolio Analyst",
            "x-displayName": "Portfolio Analyst",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Scanner",
            "x-displayName": "Scanner",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Session",
            "x-displayName": "Session",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Watchlists",
            "x-displayName": "Watchlists",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Trading Websocket",
            "x-displayName": "Websocket",
            "x-ib-tag-group-name": "Trading"
        },
        {
            "name": "Utilities Echo",
            "x-displayName": "Echo",
            "x-ib-tag-group-name": "Utilities"
        }
    ],
    "paths": {
        "/acesws/{accountId}/signatures-and-owners": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Signatures And Owners",
                "description": "Receive a list of all applicant names on the account and for which account and entity is represented.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "The account identifier to receive information for"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/signatureAndOwners"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "accountId": "U1234567",
                                            "users": [
                                                {
                                                    "roleId": "OWNER",
                                                    "hasRightCodeInd": true,
                                                    "entity": {
                                                        "entityType": "INDIVIDUAL",
                                                        "entityName": "John Smith",
                                                        "firstName": "John",
                                                        "lastName": "Smith"
                                                    }
                                                }
                                            ],
                                            "applicant": {
                                                "signatures": [
                                                    "John Smith"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request; accountId is empty",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorResponse"
                                },
                                "examples": {
                                    "accountId-is-empty": {
                                        "value": {
                                            "error": "Bad Request: accountId needed",
                                            "statusCode": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/deliveryoptions": {
            "get": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Get Delivery OptionsCopy Location",
                "description": "Options for sending fyis to email and other devices.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieve preset details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deliveryOptions"
                                },
                                "examples": {
                                    "delivery-options": {
                                        "value": {
                                            "E": [
                                                {
                                                    "NM": "iPhone",
                                                    "I": "apn://mtws@SDFSDFDSFS123123DSFSDF",
                                                    "UI": "apn://mtws@SDFSDFDSFS123123DSFSDF",
                                                    "A": 1
                                                }
                                            ],
                                            "M": 1
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/deliveryoptions/device": {
            "post": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Enable/Disable Device Option",
                "description": "Choose whether a particular device is enabled or disabled.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/fyiEnableDeviceOption"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieve preset details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fyiVT"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/deliveryoptions/email": {
            "put": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Enable/Disable Email Option",
                "description": "Enable or disable your account’s primary email to receive notifications.",
                "parameters": [
                    {
                        "name": "enabled",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Enable or disable your email. Value format: true: Enable; false: Disable\n"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully enabled or disabled your email notifications.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fyiVT"
                                },
                                "examples": {
                                    "successEdited": {
                                        "value": {
                                            "V": 1,
                                            "T": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/deliveryoptions/{deviceId}": {
            "delete": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Delete A Device",
                "description": "Delete a specific device from our saved list of notification devices.",
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "description": "Display the device identifier to delete from IB’s saved list. Can be retrieved from /fyi/deliveryoptions.\n"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response message is returned. Instead, you will only receive an empty string with a 200 OK status code indicating a successfully deleted account."
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/disclaimer/{typecode}": {
            "get": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Get Disclaimer For A Certain Kind Of Fyi",
                "description": "Receive additional disclaimers based on the specified typecode.",
                "parameters": [
                    {
                        "name": "typecode",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/typecodes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully disclaimer details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/disclaimerInfo"
                                },
                                "examples": {
                                    "ba-disclaimer": {
                                        "value": {
                                            "DT": "This communication is provided for information purposes only and is not a recommendation or a solicitation to buy, sell or hold any investment product. Selling securities short involves significant risk and you may lose more than you invest.",
                                            "FC": "BA"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            },
            "put": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Mark Disclaimer Read",
                "description": "Mark a specific disclaimer message as read.",
                "parameters": [
                    {
                        "name": "typecode",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/typecodes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fyiVT"
                                },
                                "examples": {
                                    "marked": {
                                        "value": {
                                            "V": 1,
                                            "T": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/notifications": {
            "get": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Get A List Of Notifications",
                "description": "Get a list of available notifications.",
                "parameters": [
                    {
                        "name": "max",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify the maximum number of notifications to receive. Can request a maximum of 10 notifications.\n",
                            "format": "int32",
                            "example": "10"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "include"
                        }
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "exclude"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "if more required, notifcationId of last notification should be used to define next batch border"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully enabled or disabled your email notifications.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/notifications"
                                },
                                "examples": {
                                    "all-notifications": {
                                        "value": [
                                            {
                                                "R": 0,
                                                "D": "1710847062.0",
                                                "MS": "FYI: Changes in Analyst Ratings",
                                                "MD": "<html>Some investors use analysts ratings to stay informed about their investments. Analysts have changed their ratings for one or more companies in which you hold positions.    <br />The following summary displays the affected companies, the current number of analysts by rating category and, in parentheses, the recent change in the number of analysts rating the company within each rating category.  <br /> - JWN@NYSE: Buy: 1(0), Outperform: 1(0), Hold: 12(-1), Underperform: 5(0), Sell: 0(0). Held in: D****000 <br /> - RF@NYSE: Buy: 4(+1), Outperform: 5(0), Hold: 17(-1), Underperform: 1(0), Sell: 0(0). Held in: D****000 <br /> <br />   Note: Current ratings are from Reuters and may not reflect all rating changes from other sources such as Street Insider and Briefing.</html>",
                                                "ID": "2024031947509444",
                                                "HT": 0,
                                                "FC": "PF"
                                            },
                                            {
                                                "R": 1,
                                                "D": "1710761985.0",
                                                "MS": "FYI: Changes in Analyst Ratings",
                                                "MD": "<html>Some investors use analysts ratings to stay informed about their investments. Analysts have changed their ratings for one or more companies in which you hold positions.    <br />The following summary displays the affected companies, the current number of analysts by rating category and, in parentheses, the recent change in the number of analysts rating the company within each rating category.  <br /> - F@NYSE: Buy: 4(0), Outperform: 4(0), Hold: 15(+1), Underperform: 3(-1), Sell: 1(0). Held in: D****000 <br /> - RF@NYSE: Buy: 4(+1), Outperform: 5(0), Hold: 17(-1), Underperform: 1(0), Sell: 0(0). Held in: D****000 <br /> - TSLA@NASDAQ: Buy: 5(0), Outperform: 12(0), Hold: 21(0), Underperform: 7(+1), Sell: 4(0). Held in: D****000 <br /> - UAA@NYSE: Buy: 6(0), Outperform: 2(-1), Hold: 17(+1), Underperform: 2(0), Sell: 0(0). Held in: D****000 <br /> <br />   Note: Current ratings are from Reuters and may not reflect all rating changes from other sources such as Street Insider and Briefing.</html>",
                                                "ID": "2024031843829868",
                                                "HT": 0,
                                                "FC": "PF"
                                            },
                                            {
                                                "R": 1,
                                                "D": "1710501829.0",
                                                "MS": "FYI: Changes in Analyst Ratings",
                                                "MD": "<html>Some investors use analysts ratings to stay informed about their investments. Analysts have changed their ratings for one or more companies in which you hold positions.    <br />The following summary displays the affected companies, the current number of analysts by rating category and, in parentheses, the recent change in the number of analysts rating the company within each rating category.  <br /> - F@NYSE: Buy: 4(0), Outperform: 4(0), Hold: 14(+1), Underperform: 4(0), Sell: 1(0). Held in: D****000 <br /> - UAA@NYSE: Buy: 6(0), Outperform: 3(-1), Hold: 16(-1), Underperform: 2(+1), Sell: 0(0). Held in: D****000 <br /> <br />   Note: Current ratings are from Reuters and may not reflect all rating changes from other sources such as Street Insider and Briefing.</html>",
                                                "ID": "2024031537589663",
                                                "HT": 0,
                                                "FC": "PF"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/notifications/{notificationID}": {
            "put": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Mark Notification Read",
                "description": "Mark a particular notification message as read or unread.",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "description": "Code used to signify a specific notification to mark. Value received from /fyi/notifications"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully enabled or disabled your email notifications.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/notificationReadAcknowledge"
                                },
                                "examples": {
                                    "acknowledged": {
                                        "value": {
                                            "V": 1,
                                            "T": 5,
                                            "P": {
                                                "R": 1,
                                                "ID": "2024031947509444"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/settings": {
            "get": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Get Notification Settings",
                "description": "Return the current choices of subscriptions for notifications.",
                "responses": {
                    "200": {
                        "description": "Indicates data is being returned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fyiSettings"
                                },
                                "examples": {
                                    "settings": {
                                        "value": [
                                            {
                                                "FC": "PF",
                                                "H": 0,
                                                "A": 1,
                                                "FD": "Notify me of recent activity affecting my portfolio holdings.",
                                                "FN": "Portfolio FYIs"
                                            },
                                            {
                                                "FC": "PT",
                                                "H": 0,
                                                "A": 1,
                                                "FD": "Notify me of potential account configuration changes needed and useful features based on my position transfers.",
                                                "FN": "Position Transfer"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/settings/{typecode}": {
            "post": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Modify FYI Notifications",
                "description": "Enable or disable group of notifications by the specific typecode.",
                "parameters": [
                    {
                        "name": "typecode",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/typecodes"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enabled": {
                                        "type": "boolean",
                                        "description": "the notification should be enabled or disabled."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieve preset details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fyiVT"
                                },
                                "examples": {
                                    "successEdited": {
                                        "value": {
                                            "V": 1,
                                            "T": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/fyi/unreadnumber": {
            "get": {
                "tags": [
                    "Trading FYIs and Notifications"
                ],
                "summary": "Unread Bulletins",
                "description": "Returns the total number of unread notifications",
                "responses": {
                    "200": {
                        "description": "Indicates data is being returned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "BN": {
                                            "type": "integer",
                                            "description": "Returns the number of unread bulletins.",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "examples": {
                                    "unreadnumber": {
                                        "value": {
                                            "BN": 4
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "423": {
                        "description": "Return if called too frequently. Should not be called more than 1 time in 5 minutes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/gw/api/v1/accounts": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Retrieve Processed Application",
                "description": "Retrieve the application request and IBKR response data based on IBKR accountId or externalId. Only available for accounts that originate via API<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Retrieve the application request and IBKR response data based on IBKR accountId or externalId. Only available for accounts that originate via API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/FileDetailsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/ResponseFileResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            },
            "post": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Create Account",
                "description": "Submit account application. This will create brokerage account for the end user.<br><br>**Scope**: `accounts.write`<br>**Security Policy**: `Signed JWT`",
                "requestBody": {
                    "content": {
                        "application/jwt": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Submit account application. This will create brokerage account for the end user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Submit account application. This will initiate creation of brokerage account for the end user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestInfoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.write"
                ]
            },
            "patch": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Update Account",
                "description": "Update information for an existing accountId<br><br>**Scope**: `accounts.write`<br>**Security Policy**: `Signed JWT`",
                "requestBody": {
                    "content": {
                        "application/jwt": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountManagementRequestsPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Update information for an existing accountId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Initiate update information for an existing accountId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestInfoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.write"
                ]
            }
        },
        "/gw/api/v1/accounts/close": {
            "post": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Close Account",
                "description": "Submit request to close account that is opened.<br><br>**Scope**: `accounts.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "ACCOUNT_CLOSE"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/AccountCloseInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Close Account - with withdrawal Information": {
                                    "value": {
                                        "instructionType": "ACCOUNT_CLOSE",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "accountId": "U46377",
                                            "closeReason": "Input your reason of closure here",
                                            "withdrawalInfo": {
                                                "bankInstructionName": "test instruction",
                                                "bankInstructionMethod": "WIRE"
                                            }
                                        }
                                    }
                                },
                                "Close Account - without withdrawal Information": {
                                    "value": {
                                        "instructionType": "ACCOUNT_CLOSE",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "accountId": "U46377",
                                            "closeReason": "Input your reason of closure here"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "example": {
                                    "instructionResult": {
                                        "clientInstructionId": 1013031,
                                        "instructionType": "ACCOUNT_CLOSE",
                                        "instructionStatus": "PENDING",
                                        "instructionId": 43091814
                                    },
                                    "instructionSetId": 1703,
                                    "status": 202
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "bankInstructionName",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2847",
                                    "instructionResult": {
                                        "clientInstructionId": 12001117,
                                        "instructionType": "ACCOUNT_CLOSE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092765,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.AccountClose"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "1701",
                                    "instructionResult": {
                                        "clientInstructionId": 1013030,
                                        "instructionType": "ACCOUNT_CLOSE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092465,
                                        "error": {
                                            "errorCode": "CORRUPT_DATA_INVALID_ACCT",
                                            "errorMessage": "Account L46377 does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.write"
                ]
            }
        },
        "/gw/api/v1/accounts/documents": {
            "post": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Submit General Agreements And Disclosures",
                "description": "Provides mechanism to submit Agreements and Disclosures to IBKR once a day instead of with each application. We store these documents on the servers and will use them for new application requests submitted that day.<ul><li>Documents will need to be submitted once a day (before the Applications are submitted). PDFs will be displayed and submitted as is- no changes/edits will be made to the actual PDF files.</li><li>This end-point will not process any Tax Form Documents. Tax Form document should be submitted with every application</li><li>If submitted in the morning, you only need to include the Tax Form attachment for each applicant. Otherwise, you will need to include PDFs with each application (Create Account).</li></ul><br><br>**Scope**: `accounts.write`<br>**Security Policy**: `Signed JWT`",
                "requestBody": {
                    "content": {
                        "application/jwt": {
                            "schema": {
                                "$ref": "#/components/schemas/ProcessDocuments"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Submit standard agreements and disclosures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.write"
                ]
            }
        },
        "/gw/api/v1/accounts/login-messages": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Get Login Messages",
                "description": "Query all accounts associated with ‘Client ID’ that have incomplete login message<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "loginMessageRequest",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/LoginMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Query all accounts associated with ‘Client ID’ that have incomplete login message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginMessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/accounts/status": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Get Status Of Accounts",
                "description": "Query status of all accounts associated with ‘Client ID'<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountStatusRequest",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/AccountStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Query status of all accounts associated with ‘Client ID'",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountStatusBulkResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/accounts/{accountId}/details": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Get Account Information",
                "description": "<br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "View information associated with account including contact data, financial information and trading configuration.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetailsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/accounts/{accountId}/kyc": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Retrieve Au10Tix URL",
                "description": "Generate URL address to complete real-time KYC verification using Au10Tix<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Generate URL address to complete real-time KYC verification using Au10Tix",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Au10TixDetailResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/accounts/{accountId}/login-messages": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Get Login Message By Account",
                "description": "Query login messages assigned by accountId<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Query login messages assigned by accountId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginMessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/accounts/{accountId}/status": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Get Status By Account",
                "description": "Query status of account by accountId<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Query status of account by accountId.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountStatusResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/accounts/{accountId}/tasks": {
            "get": {
                "tags": [
                    "Account Management Accounts"
                ],
                "summary": "Get Registration Tasks",
                "description": "Query registration tasks assigned to account and pending tasks that are required for account approval<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "default": "registration",
                            "enum": [
                                "pending",
                                "registration"
                            ]
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Query registration tasks assigned to account and pending tasks that are required for account approval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/RegistrationTasksResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PendingTasksResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/bank-instructions": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Manage Bank Instructions",
                "description": "Create or delete bank instructions by accountId. Only ACH and EDDA are supported for 'Create'.<br><br>**Scope**: `bank-instructions.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "ACH_INSTRUCTION",
                                            "TRADITIONAL_BANK_INSTRUCTION_VERIFICATION",
                                            "DELETE_BANK_INSTRUCTION",
                                            "PREDEFINED_DESTINATION_INSTRUCTION",
                                            "EDDA_INSTRUCTION"
                                        ]
                                    },
                                    "instruction": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/TraditionalBankInstructionVerification"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AchInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DeleteBankInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/PredefinedDestinationInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/EddaInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "ACH Instruction": {
                                    "value": {
                                        "instructionType": "ACH_INSTRUCTION",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "bankInstructionCode": "USACH",
                                            "achType": "DEBIT_CREDIT",
                                            "bankInstructionName": "TestInstr",
                                            "currency": "USD",
                                            "accountId": "U223454",
                                            "clientAccountInfo": {
                                                "bankRoutingNumber": "202012983",
                                                "bankAccountNumber": "101267576983",
                                                "bankName": "JPM Chase",
                                                "bankAccountTypeCode": 0
                                            }
                                        }
                                    }
                                },
                                "Traditional Bank Instruction Verification": {
                                    "value": {
                                        "instructionType": "TRADITIONAL_BANK_INSTRUCTION_VERIFICATION",
                                        "instruction": {
                                            "clientInstructionId": 7013057,
                                            "bankInstructionCode": "USACH",
                                            "bankInstructionName": "ACH-Tst1Random172",
                                            "accountId": "U117717",
                                            "pendingInstructionId": 43086786,
                                            "creditAmount1": 0.32,
                                            "creditAmount2": 0.46
                                        }
                                    }
                                },
                                "Delete Bank Instruction": {
                                    "value": {
                                        "instructionType": "DELETE_BANK_INSTRUCTION",
                                        "instruction": {
                                            "clientInstructionId": 7013055,
                                            "accountId": "U46377",
                                            "bankInstructionName": "Test Delete",
                                            "bankInstructionMethod": "WIRE",
                                            "currency": "USD"
                                        }
                                    }
                                },
                                "Predefined Destination Instruction": {
                                    "value": {
                                        "instructionType": "PREDEFINED_DESTINATION_INSTRUCTION",
                                        "instruction": {
                                            "clientInstructionId": 7013053,
                                            "bankInstructionName": "Test-ACH-Instr",
                                            "bankInstructionMethod": "ACH",
                                            "accountId": "U399192",
                                            "currency": "USD",
                                            "financialInstitution": {
                                                "name": "SBI Bank",
                                                "branchCode": "",
                                                "branchCodeType": "BSB_AUD",
                                                "identifier": "SBIN001000",
                                                "identifierType": "IFSC",
                                                "clientAccountId": "132456789"
                                            }
                                        }
                                    }
                                },
                                "eDDA Instruction": {
                                    "value": {
                                        "instructionType": "EDDA_INSTRUCTION",
                                        "instruction": {
                                            "clientInstructionId": 7012743,
                                            "bankInstructionName": "{instrution-name}",
                                            "currency": "CNH",
                                            "accountId": "U8072517",
                                            "bankBranchCode": "003",
                                            "bankAccountNumber": "132456",
                                            "bankClearingCode": "003",
                                            "debtorIdentificationDocumentType": "hkId"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "examples": {
                                    "ACH Instruction": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 80009,
                                                "instructionType": "ACH_INSTRUCTION",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43092478
                                            },
                                            "instructionSetId": 2487,
                                            "status": 202
                                        }
                                    },
                                    "Traditional Bank Instruction Verification": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 7008152,
                                                "instructionType": "TRADITIONAL_BANK_INSTRUCTION_VERIFICATION",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43092590
                                            },
                                            "instructionSetId": 2614,
                                            "status": 202
                                        }
                                    },
                                    "Delete Bank Instruction": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 80009,
                                                "instructionType": "delete_bank_instruction",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43092478
                                            },
                                            "instructionSetId": 2487,
                                            "status": 202
                                        }
                                    },
                                    "Predefined Destination Instruction": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 7008152,
                                                "instructionType": "PREDEFINED_DESTINATION_INSTRUCTION",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43092590
                                            },
                                            "instructionSetId": 2614,
                                            "status": 202
                                        }
                                    },
                                    "eDDA Instruction": {
                                        "value": {
                                            "status": 202,
                                            "instructionSetId": 6401,
                                            "instructionResult": {
                                                "clientInstructionId": 7012743,
                                                "instructionType": "EDDA_INSTRUCTION",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43098698
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "accountId",
                                            "description": "Missing required parameter"
                                        },
                                        {
                                            "field": "instructionCode",
                                            "description": "Missing required parameter"
                                        },
                                        {
                                            "field": "achType",
                                            "description": "Missing required parameter"
                                        },
                                        {
                                            "field": "bankInstructionName",
                                            "description": "Missing required parameter"
                                        },
                                        {
                                            "field": "clientAccountInfo",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2603",
                                    "instructionResult": {
                                        "clientInstructionId": 80140,
                                        "instructionType": "ACH_INSTRUCTION",
                                        "status": "REJECTED",
                                        "instructionId": 43092579,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.AchInstruction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2602",
                                    "instructionResult": {
                                        "clientInstructionId": 80139,
                                        "instructionType": "ACH_INSTRUCTION",
                                        "status": "REJECTED",
                                        "instructionId": 43092578,
                                        "error": {
                                            "errorCode": "ERROR_ACCOUNT_CP_NOT_RELATED",
                                            "errorMessage": "Account U223454 not related to counterparty qatester"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "bank-instructions.write"
                ]
            }
        },
        "/gw/api/v1/bank-instructions/query": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "View Bank Instructions",
                "description": "View active bank instructions for an accountId.<br><br>**Scope**: `bank-instructions.read`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "description": "Create get instruction name request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "QUERY_BANK_INSTRUCTION",
                                            "QUERY_RECENT_RECURRING_EVENTS",
                                            "QUERY_RECURRING_INSTRUCTIONS"
                                        ]
                                    },
                                    "instruction": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/QueryBankInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/QueryRecentRecurringEvents"
                                            },
                                            {
                                                "$ref": "#/components/schemas/QueryRecurringInstructions"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Query Bank Instruction - Wire": {
                                    "value": {
                                        "instructionType": "QUERY_BANK_INSTRUCTION",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "accountId": "U46377",
                                            "bankInstructionMethod": "WIRE"
                                        }
                                    }
                                },
                                "Query Bank Instruction - ACH Instruction": {
                                    "value": {
                                        "instructionType": "QUERY_BANK_INSTRUCTION",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "accountId": "U46377",
                                            "bankInstructionMethod": "ACH"
                                        }
                                    }
                                },
                                "Query Recent Recurring Event": {
                                    "value": {
                                        "instructionType": "QUERY_RECENT_RECURRING_EVENTS",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "ibReferenceId": 206603050,
                                            "numberOfTransactions": 100
                                        }
                                    }
                                },
                                "Query Recurring Instructions - using Account ID": {
                                    "value": {
                                        "instructionType": "QUERY_RECURRING_INSTRUCTIONS",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "accountId": "U399192"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Instruction successfully created and processed synchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/QueryRecentRecurringEventResult"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryBankInstructionResult"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryRecurringInstructionsResult"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Query Bank Instruction - WIRE": {
                                        "value": {
                                            "instructionResult": {
                                                "accountId": "U46377",
                                                "bankInstructionMethod": "WIRE",
                                                "instructionDetails": [
                                                    {
                                                        "bankInstructionName": "testCitadele",
                                                        "type": "FOREIGN_BANK",
                                                        "currency": "USD"
                                                    },
                                                    {
                                                        "bankInstructionName": "testChase1",
                                                        "type": "LOCAL_BANK",
                                                        "currency": "USD"
                                                    },
                                                    {
                                                        "bankInstructionName": "testee",
                                                        "type": "FOREIGN_BANK",
                                                        "currency": "USD"
                                                    },
                                                    {
                                                        "bankInstructionName": "test multiple",
                                                        "type": "FOREIGN_BANK",
                                                        "currency": "CHF"
                                                    },
                                                    {
                                                        "bankInstructionName": "farawayBroker",
                                                        "type": "FOREIGN_BROKER",
                                                        "currency": "CHF"
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 12001819,
                                                "instructionType": "QUERY_BANK_INSTRUCTION",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43094187
                                            },
                                            "instructionSetId": 3771,
                                            "status": 201
                                        }
                                    },
                                    "Query Bank Instruction - ACH": {
                                        "value": {
                                            "instructionResult": {
                                                "accountId": "U46377",
                                                "bankInstructionMethod": "ACH",
                                                "instructionDetails": [
                                                    {
                                                        "bankInstructionName": "testCitadele",
                                                        "type": "FOREIGN_BANK",
                                                        "currency": "USD"
                                                    },
                                                    {
                                                        "bankInstructionName": "testChase1",
                                                        "type": "LOCAL_BANK",
                                                        "currency": "USD"
                                                    },
                                                    {
                                                        "bankInstructionName": "testee",
                                                        "type": "FOREIGN_BANK",
                                                        "currency": "USD"
                                                    },
                                                    {
                                                        "bankInstructionName": "test multiple",
                                                        "type": "FOREIGN_BANK",
                                                        "currency": "CHF"
                                                    },
                                                    {
                                                        "bankInstructionName": "farawayBroker",
                                                        "type": "FOREIGN_BROKER",
                                                        "currency": "CHF"
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 12001819,
                                                "instructionType": "QUERY_BANK_INSTRUCTION",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43094187
                                            },
                                            "instructionSetId": 3771,
                                            "status": 201
                                        }
                                    },
                                    "Query Recent Recurring Events": {
                                        "value": {
                                            "status": 201,
                                            "instructionSetId": 14132,
                                            "instructionResult": {
                                                "recurringInstructionName": "test",
                                                "recurringTransactionType": "DEPOSIT",
                                                "recurringTransactionStatus": "NOTACTIVATED",
                                                "amount": 1,
                                                "currency": "CNH",
                                                "method": "206603051",
                                                "transactionHistory": {
                                                    "maxNumberOfTransactions": 100,
                                                    "result": [
                                                        {
                                                            "ibRequestId": 206586288,
                                                            "status": "ACKNOWLEDGED"
                                                        },
                                                        {
                                                            "ibRequestId": 206582418,
                                                            "status": "CANCELED"
                                                        }
                                                    ]
                                                },
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 12007909,
                                                "instructionType": "QUERY_RECENT_RECURRING_EVENTS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43104464
                                            }
                                        }
                                    },
                                    "Query Recurring Instructions - using Account ID": {
                                        "value": {
                                            "status": 201,
                                            "instructionSetId": 14258,
                                            "instructionResult": {
                                                "accountId": "U399192",
                                                "recurringInstructions": [
                                                    {
                                                        "requestId": 206611807,
                                                        "bankInstructionName": "Recurring Test- cpereira",
                                                        "transactionType": "DEPOSIT",
                                                        "bankInstructionMethod": "ACH",
                                                        "amount": 1.0,
                                                        "currency": "USD",
                                                        "frequency": "MONTHLY",
                                                        "startDate": "2024-06-12 00:00:00.0",
                                                        "endDate": "2024-12-12 00:00:00.0"
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 12008027,
                                                "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43104628
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "ibReferenceId",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2445",
                                    "instructionResult": {
                                        "clientInstructionId": 12000610,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092429,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092592,
                                        "error": {
                                            "errorCode": "CORRUPT_DATA_INVALID_ACCT",
                                            "errorMessage": "Account U463756 does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "bank-instructions.read"
                ]
            }
        },
        "/gw/api/v1/client-instructions/{clientInstructionId}": {
            "get": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Get Status For ClientInstructionId",
                "description": "Retrieve status of request by clientInstructionId.<br><br>**Scope**: `instructions.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    },
                    {
                        "$ref": "#/components/parameters/clientInstructionIdPathParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the status of an instruction.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InstructionPollingResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/InstructionResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryRecentInstructionResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DepositFundsPollingResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryIRAContributionsResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Polling Status Pending": {
                                        "value": {
                                            "status": 200,
                                            "instructionResult": {
                                                "clientInstructionId": 7008156,
                                                "instructionType": "INTERNAL_CASH_TRANSFER",
                                                "status": "PENDING",
                                                "instructionId": 43092595
                                            },
                                            "instructionSetId": 2650
                                        }
                                    },
                                    "Polling Status Processed": {
                                        "value": {
                                            "status": 200,
                                            "instructionResult": {
                                                "clientInstructionId": 7008157,
                                                "instructionType": "INTERNAL_CASH_TRANSFER",
                                                "status": "PROCESSED",
                                                "instructionId": 43092596
                                            },
                                            "instructionSetId": 2651
                                        }
                                    },
                                    "Polling Status Query Recent Instruction": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 4206,
                                            "instructionResult": {
                                                "instructionHistory": {
                                                    "historyMaxDepthNumberOfDays": 30,
                                                    "historyMaxDepthNumberOfInstruction": 100000,
                                                    "result": [
                                                        {
                                                            "clientInstructionId": 0,
                                                            "ibInstructionId": 11383366,
                                                            "instructionType": "ACH_INSTRUCTION",
                                                            "requestDate": "2024-02-06T07:35:36-05",
                                                            "status": "PENDING_VERIFICATION",
                                                            "instructionSetId": 0
                                                        },
                                                        {
                                                            "clientInstructionId": 0,
                                                            "ibInstructionId": 11383356,
                                                            "instructionType": "ACH_INSTRUCTION",
                                                            "requestDate": "2024-02-06T07:00:34-05",
                                                            "status": "REJECTED",
                                                            "instructionSetId": 0
                                                        },
                                                        {
                                                            "clientInstructionId": 0,
                                                            "ibInstructionId": 11383355,
                                                            "instructionType": "ACH_INSTRUCTION",
                                                            "requestDate": "2024-02-06T06:58:22-05",
                                                            "status": "PENDING",
                                                            "instructionSetId": 0
                                                        }
                                                    ]
                                                },
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 12003152,
                                                "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 11383402
                                            }
                                        }
                                    },
                                    "Polling Status - Deposit Instruction": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 3673,
                                            "instructionResult": {
                                                "ibReferenceId": 166903389,
                                                "clientInstructionId": 1091115677,
                                                "instructionType": "DEPOSIT",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 11177823
                                            }
                                        }
                                    },
                                    "Polling Status - Query IRA Contributions": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 18642,
                                            "instructionResult": {
                                                "accountId": "U68903",
                                                "year": "2003",
                                                "iraType": "ROTH NEW",
                                                "contributions": [
                                                    {
                                                        "maximumContributionLimit": 4000,
                                                        "yearToDateContribution": 3500,
                                                        "allowedContributionLimit": 500
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013308,
                                                "instructionType": "QUERY_IRA_CONTRIBUTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43134476
                                            }
                                        }
                                    },
                                    "Polling Status - Query IRA Contributions (SEP Accounts)": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 18640,
                                            "instructionResult": {
                                                "accountId": "U1032333",
                                                "year": "2022",
                                                "iraType": "SEP",
                                                "contributions": [
                                                    {
                                                        "type": "EMPLOYEE",
                                                        "maximumContributionLimit": 7000,
                                                        "yearToDateContribution": 0
                                                    },
                                                    {
                                                        "type": "EMPLOYER",
                                                        "maximumContributionLimit": 58000,
                                                        "yearToDateContribution": 0
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013306,
                                                "instructionType": "QUERY_IRA_CONTRIBUTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43134474
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "208": {
                        "description": "Client tried to reuse the same instructionId for more than one transaction. Returning the status for the first registered transaction under given instructionId (when there were no duplicates yet). Reconsile based on instructionSetId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstructionResponse"
                                },
                                "example": {
                                    "status": 208,
                                    "instructionResult": {
                                        "clientInstructionId": 1013025,
                                        "instructionType": "INTERNAL_CASH_TRANSFER",
                                        "status": "REJECTED",
                                        "instructionId": 43091799,
                                        "code": "CORRUPT_DATA_INVALID_ACCT",
                                        "description": "Account U345 does not exist"
                                    },
                                    "instructionSetId": 1686
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns a Problem detail instance representing a not found request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoSuchInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Not found",
                                    "status": 404,
                                    "detail": "Funds & Banking: Could not get status for clientId: qatester, transactionId : 72308156"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to process request due to an Internal Error. Please try again later.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "instructions.read"
                ]
            }
        },
        "/gw/api/v1/echo/https": {
            "get": {
                "tags": [
                    "Utilities Echo"
                ],
                "summary": "Echo A Request With HTTPS Security Policy Back After Validation.",
                "description": "<br>**Scope**: `echo.read`<br>**Security Policy**: `HTTPS`",
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing the request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EchoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "self",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "echo.read"
                ]
            }
        },
        "/gw/api/v1/echo/signed-jwt": {
            "post": {
                "tags": [
                    "Utilities Echo"
                ],
                "summary": "Echo A Request With Signed JWT Security Policy Back After Validation.",
                "description": "<br>**Scope**: `echo.write`<br>**Security Policy**: `Signed JWT`",
                "requestBody": {
                    "$ref": "#/components/requestBodies/SignedJwtEchoRequestBody"
                },
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing the request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EchoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "self",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "echo.write"
                ]
            }
        },
        "/gw/api/v1/enumerations/complex-asset-transfer": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Get A List Of Participating Brokers For The Given Asset Type",
                "description": "Get list of brokers supported for given asset transfer type<br><br>**Scope**: `enumerations.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    },
                    {
                        "name": "instructionType",
                        "in": "query",
                        "description": "Asset transfer type to get the list of supported brokers",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {},
                        "example": "COMPLEX_ASSET_TRANSFER"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of brokers supported for given asset type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetBrokerListResponse"
                                },
                                "example": {
                                    "instructionType": "COMPLEX_ASSET_TRANSFER",
                                    "brokers": [
                                        "DONNER & REUSCHEL",
                                        "IBROKER GLOBAL MARKETS SOCIEDAD DE VALORES, S.A",
                                        "EQUATEX 4500",
                                        "IMAGI  BROKERAGE LIMITED",
                                        "V-BANK",
                                        "ADMIRAL MARKETS UK LTD",
                                        "ALFA BANK",
                                        "YICKO SECURITIES LIMITED",
                                        "BLACKWELL GLOBAL SECURITIES LIMITED",
                                        "EQUINITI",
                                        "KAISA FINANCIAL GROUP COMPANY LIMITED"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a not found request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoSuchInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Request path does not contain all expected fields, please consult provided documentation, escalate to IB contact if issue persists"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to process request due to an Internal Error. Please try again later.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "enumerations.read"
                ]
            }
        },
        "/gw/api/v1/enumerations/{enumerationType}": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Get Enumerations For Trading Permission, Employment Detail, Affiliation Detail, Financial Range Information, ACATS And So On",
                "description": "Get enumerations<br><br>**Scope**: `accounts.read` OR `enumerations.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ibEntity",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mdStatusNonPro",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "form-number",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "en",
                                "ar",
                                "de",
                                "es",
                                "fr",
                                "he",
                                "hu",
                                "it",
                                "ja",
                                "nl",
                                "pt",
                                "ru",
                                "zh_CN",
                                "zh_TW"
                            ]
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Get enumerations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnumerationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read",
                    "enumerations.read"
                ]
            }
        },
        "/gw/api/v1/external-asset-transfers": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Transfer Positions Externally (ACATS, ATON, FOP, DWAC, Complex Asset Transfer)",
                "description": "Initiate request to submit external position transfer. Methods- ACATS, ATON, Basic FOP, FOP, DWAC. More information on transfer methods can be found here - https://www.interactivebrokers.com/campus/trading-lessons/cash-and-position-transfers/<br><br>**Scope**: `transfers.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "DWAC",
                                            "FOP",
                                            "COMPLEX_ASSET_TRANSFER",
                                            "EXTERNAL_POSITION_TRANSFER"
                                        ]
                                    },
                                    "instruction": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/FopInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/DwacInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ComplexAssetTransferInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/ExternalPositionTransfer"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "FOP - transfer using contractID (conid)": {
                                    "value": {
                                        "instructionType": "FOP",
                                        "instruction": {
                                            "clientInstructionId": 7013038,
                                            "direction": "IN",
                                            "accountId": "U46377",
                                            "contraBrokerAccountId": "12345678A",
                                            "contraBrokerDtcCode": "534",
                                            "quantity": 1000,
                                            "tradingInstrument": {
                                                "conid": 12123,
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "FOP - transfer using tradingInstrument.detail": {
                                    "value": {
                                        "instructionType": "FOP",
                                        "instruction": {
                                            "clientInstructionId": 7013039,
                                            "direction": "IN",
                                            "accountId": "U46377",
                                            "contraBrokerAccountId": "12345678A",
                                            "contraBrokerDtcCode": "534",
                                            "quantity": 1000,
                                            "tradingInstrument": {
                                                "tradingInstrumentDescription": {
                                                    "securityIdType": "ISIN",
                                                    "securityId": "459200101",
                                                    "assetType": "STK"
                                                },
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "DWAC - transfer using contractID (conid)": {
                                    "value": {
                                        "instructionType": "DWAC",
                                        "instruction": {
                                            "clientInstructionId": 7013036,
                                            "direction": "IN",
                                            "accountId": "U1001095",
                                            "contraBrokerAccountId": "12345678A",
                                            "contraBrokerTaxId": "123456789",
                                            "quantity": 1000,
                                            "accountTitle": "Special Company Holding LLC",
                                            "referenceId": "refId",
                                            "tradingInstrument": {
                                                "conid": 12123,
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "DWAC - transfer using tradingInstrument.detail": {
                                    "value": {
                                        "instructionType": "DWAC",
                                        "instruction": {
                                            "clientInstructionId": 7013037,
                                            "direction": "IN",
                                            "accountId": "U1001095",
                                            "contraBrokerAccountId": "12345678A",
                                            "contraBrokerTaxId": "123456789",
                                            "quantity": 1000,
                                            "accountTitle": "Special Company Holding LLC",
                                            "referenceId": "refId",
                                            "tradingInstrument": {
                                                "tradingInstrumentDescription": {
                                                    "securityIdType": "ISIN",
                                                    "securityId": "459200101",
                                                    "assetType": "STK"
                                                },
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "Complex Asset Transfer - using contractID (conid)": {
                                    "value": {
                                        "instructionType": "COMPLEX_ASSET_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013040,
                                            "direction": "IN",
                                            "accountId": "U399192",
                                            "quantity": 10,
                                            "contraBrokerInfo": {
                                                "accountType": "ORG",
                                                "brokerName": "JP MORGAN",
                                                "depositoryId": "1234",
                                                "brokerAccountId": "as3456567678578N",
                                                "country": "United States",
                                                "contactName": "as",
                                                "contactEmail": "a@gmail.com",
                                                "contactPhone": "2039126155"
                                            },
                                            "tradingInstrument": {
                                                "conid": 12123,
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "Complex Asset Transfer - using tradingInstrument.detail": {
                                    "value": {
                                        "instructionType": "COMPLEX_ASSET_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013042,
                                            "direction": "IN",
                                            "accountId": "U399192",
                                            "quantity": 10,
                                            "contraBrokerInfo": {
                                                "accountType": "ORG",
                                                "brokerName": "JP MORGAN",
                                                "depositoryId": "1234",
                                                "brokerAccountId": "as3456567678578N",
                                                "country": "United States",
                                                "contactName": "as",
                                                "contactEmail": "a@gmail.com",
                                                "contactPhone": "2039126155"
                                            },
                                            "tradingInstrument": {
                                                "tradingInstrumentDescription": {
                                                    "securityIdType": "ISIN",
                                                    "securityId": "459200101",
                                                    "assetType": "STK"
                                                },
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "Complex Asset Transfer - where user is nonDisclosed type": {
                                    "value": {
                                        "instructionType": "COMPLEX_ASSET_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013041,
                                            "direction": "IN",
                                            "accountId": "U399192",
                                            "quantity": 10,
                                            "contraBrokerInfo": {
                                                "accountType": "ORG",
                                                "brokerName": "JP MORGAN",
                                                "depositoryId": "1234",
                                                "brokerAccountId": "as3456567678578N",
                                                "country": "United States",
                                                "contactName": "as",
                                                "contactEmail": "a@gmail.com",
                                                "contactPhone": "2039126155"
                                            },
                                            "tradingInstrument": {
                                                "tradingInstrumentDescription": {
                                                    "securityIdType": "ISIN",
                                                    "securityId": "459200101",
                                                    "assetType": "STK"
                                                },
                                                "currency": "USD"
                                            },
                                            "nonDisclosedDetail": {
                                                "tradeDate": "2018-03-20T09:12:13Z",
                                                "settleDate": "2018-03-20T09:12:13Z",
                                                "psetBic": "",
                                                "reagDeagBic": "",
                                                "buyerSellBic": "",
                                                "memberAccountId": "",
                                                "safeKeepingAccountId": ""
                                            }
                                        }
                                    }
                                },
                                "External Position Transfer - ACATS": {
                                    "value": {
                                        "instructionType": "EXTERNAL_POSITION_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013060,
                                            "type": "FULL",
                                            "subType": "ACATS",
                                            "brokerId": "0226",
                                            "brokerName": "Wall Street Financial Group",
                                            "accountAtBroker": "SOL12345",
                                            "sourceIRAType": "RO",
                                            "accountId": "U1225448",
                                            "signature": "sample signature"
                                        }
                                    }
                                },
                                "External Position Transfer - ATON": {
                                    "value": {
                                        "instructionType": "EXTERNAL_POSITION_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013060,
                                            "type": "FULL",
                                            "subType": "ATON",
                                            "brokerId": "3265",
                                            "brokerName": "Wall Street Financial Group",
                                            "accountAtBroker": "SOL12345",
                                            "accountId": "U1225448",
                                            "signature": "Marko Barr"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "examples": {
                                    "FOP": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 1013031,
                                                "instructionType": "FOP",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43091814
                                            },
                                            "instructionSetId": 1703,
                                            "status": 202
                                        }
                                    },
                                    "DWAC": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 1013031,
                                                "instructionType": "DWAC",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43091814
                                            },
                                            "instructionSetId": 1703,
                                            "status": 202
                                        }
                                    },
                                    "Complex Asset Transfer": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 80188,
                                                "instructionType": "COMPLEX_ASSET_TRANSFER",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43093833
                                            },
                                            "instructionSetId": 3549,
                                            "status": 202
                                        }
                                    },
                                    "External Position Transfer": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 7008998,
                                                "instructionType": "EXTERNAL_POSITION_TRANSFER",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43094000,
                                                "code": "",
                                                "description": ""
                                            },
                                            "instructionSetId": 3700,
                                            "status": 202
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "assetType",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2615",
                                    "instructionResult": {
                                        "clientInstructionId": 2611,
                                        "instructionType": "FOP",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 12000763,
                                        "code": "ERROR_PERMISSION_DENIED",
                                        "description": "Permission denied for ibgroup.ibcust.fbfb.instructions.FOP"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "FOP",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092592,
                                        "code": "CORRUPT_DATA_INVALID_ACCT",
                                        "description": "Account U463756 does not exist"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "transfers.write"
                ]
            }
        },
        "/gw/api/v1/external-cash-transfers": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Transfer Cash Externally",
                "description": "Initiate request to deposit or withdrawal between IBKR account and bank account. More information on transfer methods can be found here - https://www.interactivebrokers.com/campus/trading-lessons/cash-and-position-transfers<br><br>**Scope**: `transfers.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "DEPOSIT",
                                            "WITHDRAWAL"
                                        ]
                                    },
                                    "instruction": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/DepositFundsInstruction"
                                            },
                                            {
                                                "$ref": "#/components/schemas/WithdrawFundsInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Deposit Funds": {
                                    "value": {
                                        "instructionType": "DEPOSIT",
                                        "instruction": {
                                            "clientInstructionId": 7013045,
                                            "accountId": "U46377",
                                            "currency": "USD",
                                            "amount": 100,
                                            "bankInstructionMethod": "WIRE",
                                            "sendingInstitution": "Sending Institution name",
                                            "identifier": "indentifier",
                                            "specialInstruction": "U46377",
                                            "bankInstructionName": "Instruction",
                                            "fromAccountNumber": "U46377",
                                            "senderInstitutionName": "Senders Institution name"
                                        }
                                    }
                                },
                                "Deposit Funds - IRA": {
                                    "value": {
                                        "instructionType": "DEPOSIT",
                                        "instruction": {
                                            "clientInstructionId": 7013046,
                                            "accountId": "U399192",
                                            "currency": "USD",
                                            "amount": 1,
                                            "bankInstructionMethod": "WIRE",
                                            "sendingInstitution": "Sending Institution name",
                                            "identifier": "indentifier",
                                            "specialInstruction": "U399192",
                                            "bankInstructionName": "Instruction",
                                            "fromAccountNumber": "U399192",
                                            "senderInstitutionName": "Senders Institution name",
                                            "iraDepositDetail": {
                                                "iraContributionType": "ROLLOVER",
                                                "iraTaxYearType": "CURRENT",
                                                "fromIraType": "TRADITIONAL"
                                            }
                                        }
                                    }
                                },
                                "Deposit Funds - Recurring": {
                                    "value": {
                                        "instructionType": "DEPOSIT",
                                        "instruction": {
                                            "clientInstructionId": 7013047,
                                            "accountId": "U46377",
                                            "currency": "USD",
                                            "amount": 100,
                                            "bankInstructionMethod": "WIRE",
                                            "isIRA": "false",
                                            "sendingInstitution": "Sending Institution name",
                                            "identifier": "indentifier",
                                            "specialInstruction": "U46377",
                                            "bankInstructionName": "Instruction",
                                            "initiatedByIb": "true",
                                            "fromAccountNumber": "U46377",
                                            "senderInstitutionName": "Senders Institution name",
                                            "recurringInstructionDetail": {
                                                "instructionName": "Arkansas-Test-Instr",
                                                "startDate": "2023-10-16",
                                                "frequency": "MONTHLY"
                                            }
                                        }
                                    }
                                },
                                "Withdraw Funds": {
                                    "value": {
                                        "instructionType": "WITHDRAWAL",
                                        "instruction": {
                                            "clientInstructionId": 7013048,
                                            "accountId": "U46377",
                                            "bankInstructionName": "Test Withdrawal",
                                            "bankInstructionMethod": "WIRE",
                                            "amount": "123.45",
                                            "currency": "GBP",
                                            "dateTimeToOccur": "2023-11-20T09:12:13Z"
                                        }
                                    }
                                },
                                "Withdraw Funds - IRA": {
                                    "value": {
                                        "instructionType": "WITHDRAWAL",
                                        "instruction": {
                                            "clientInstructionId": 7013049,
                                            "accountId": "U399192",
                                            "bankInstructionName": "Test Withdrawal",
                                            "bankInstructionMethod": "WIRE",
                                            "amount": "123.45",
                                            "currency": "GBP",
                                            "dateTimeToOccur": "2023-11-20T09:12:13Z",
                                            "iraWithdrawalDetail": {
                                                "fedIncomeTaxPercentage": 10,
                                                "stateIncomeTaxPercentage": 12,
                                                "stateCd": "TE",
                                                "iraWithholdType": "NORMAL"
                                            }
                                        }
                                    }
                                },
                                "Withdraw Funds - Recurring": {
                                    "value": {
                                        "instructionType": "WITHDRAWAL",
                                        "instruction": {
                                            "clientInstructionId": 7013050,
                                            "accountId": "U46377",
                                            "bankInstructionName": "Test Withdrawal",
                                            "bankInstructionMethod": "WIRE",
                                            "amount": "123.45",
                                            "currency": "GBP",
                                            "dateTimeToOccur": "2023-11-20T09:12:13Z",
                                            "iraWithdrawalDetail": {
                                                "fedIncomeTaxPercentage": 10,
                                                "stateIncomeTaxPercentage": 12,
                                                "stateCd": "TE",
                                                "iraWithholdType": "NORMAL"
                                            },
                                            "recurringInstructionDetail": {
                                                "instructionName": "Arkansas-Test-Instr",
                                                "startDate": "2023-10-16",
                                                "frequency": "MONTHLY"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "examples": {
                                    "Deposit Funds": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 7008143,
                                                "instructionType": "DEPOSIT",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43092468
                                            },
                                            "instructionSetId": 2480,
                                            "status": 202
                                        }
                                    },
                                    "Withdraw Funds": {
                                        "value": {
                                            "instructionResult": {
                                                "clientInstructionId": 12000862,
                                                "instructionType": "WITHDRAWAL",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43092641,
                                                "ibReferenceId": 132123
                                            },
                                            "instructionSetId": 2719,
                                            "status": 202
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "iraContributionType",
                                            "description": "Invalid or Missing required parameter"
                                        },
                                        {
                                            "field": "iraTaxYearType",
                                            "description": "Invalid or Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2452",
                                    "instructionResult": {
                                        "clientInstructionId": 7008120,
                                        "instructionType": "DEPOSIT",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092438,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.DepositFunds"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2591",
                                    "instructionResult": {
                                        "clientInstructionId": 7008150,
                                        "instructionType": "DEPOSIT",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092565,
                                        "error": {
                                            "errorCode": "NOT_IRA_ACCOUNT",
                                            "errorMessage": "Account U46377 is not IRA"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "transfers.write"
                ]
            }
        },
        "/gw/api/v1/external-cash-transfers/query": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "View Cash Balances",
                "description": "View available cash for withdrawal with and without margin loan by accountId<br><br>**Scope**: `transfers.read`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "description": "Create an external cash transfer query request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "QUERY_WITHDAWABLE_FUNDS",
                                            "QUERY_IRA_CONTRIBUTIONS"
                                        ]
                                    },
                                    "instruction": {
                                        "oneOf": [
                                            {
                                                "$ref": "#/components/schemas/QueryWithdrawableFunds"
                                            },
                                            {
                                                "$ref": "#/components/schemas/QueryWithdrawableWithoutOriginHoldFunds"
                                            },
                                            {
                                                "$ref": "#/components/schemas/QueryIRAContributions"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Query Withdrawable Funds": {
                                    "value": {
                                        "instructionType": "QUERY_WITHDAWABLE_FUNDS",
                                        "instruction": {
                                            "clientInstructionId": "7009005",
                                            "accountId": "U87440",
                                            "currency": "USD"
                                        }
                                    }
                                },
                                "Query Withdrawable Funds Without Origination Hold": {
                                    "value": {
                                        "instructionType": "QUERY_WITHDAWABLE_FUNDS",
                                        "instruction": {
                                            "clientInstructionId": "7009006",
                                            "accountId": "U139838",
                                            "currency": "USD",
                                            "bankRoutingNumber": "122199983",
                                            "bankAccountNumber": "9876543210"
                                        }
                                    }
                                },
                                "Query IRA Contributions": {
                                    "value": {
                                        "instructionType": "QUERY_IRA_CONTRIBUTIONS",
                                        "instruction": {
                                            "clientInstructionId": "7009007",
                                            "accountId": "U68903",
                                            "year": "2003"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Instruction successfully created and processed synchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/QueryWithdrawableAmountsResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryWithdrawableAmountsWithoutOriginHoldResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Query Withdrawable Funds": {
                                        "value": {
                                            "status": 201,
                                            "instructionSetId": 17791,
                                            "instructionResult": {
                                                "accountId": "U46377",
                                                "currency": "EUR",
                                                "withdrawableAmount": 0,
                                                "withdrawableAmountNoBorrow": 0,
                                                "allowedTransferAmountToMaster": 0,
                                                "withdrawableAmountWithoutOriginationHoldNoBorrow": 0,
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013230,
                                                "instructionType": "QUERY_WITHDRAWABLE_FUNDS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43133309
                                            }
                                        }
                                    },
                                    "Query Withdrawable Funds Without Origination Hold": {
                                        "value": {
                                            "status": 201,
                                            "instructionSetId": 17791,
                                            "instructionResult": {
                                                "accountId": "U46377",
                                                "currency": "EUR",
                                                "withdrawableAmountWithoutOriginationHold": 0,
                                                "withdrawableAmountWithoutOriginationHoldNoBorrow": 0,
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013230,
                                                "instructionType": "QUERY_WITHDRAWABLE_FUNDS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43133309
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Query IRA Contributions": {
                                        "value": {
                                            "status": 202,
                                            "instructionSetId": 18640,
                                            "instructionResult": {
                                                "accountId": "U1032333",
                                                "year": "2022",
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013306,
                                                "instructionType": "QUERY_IRA_CONTRIBUTIONS",
                                                "instructionStatus": "PENDING",
                                                "instructionId": 43134474,
                                                "description": "Query is being processed. Please poll for status 1 minutes later using FB status endpoint. No new queries will be allowed before this one is processed "
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "templateName",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2445",
                                    "instructionResult": {
                                        "clientInstructionId": 12000610,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "status": "REJECTED",
                                        "instructionId": 43092429,
                                        "code": "ERROR_PERMISSION_DENIED",
                                        "description": "Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "status": "REJECTED",
                                        "instructionId": 43092592,
                                        "code": "CORRUPT_DATA_INVALID_ACCT",
                                        "description": "Account U463756 does not exist"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "transfers.read"
                ]
            }
        },
        "/gw/api/v1/fee-templates": {
            "post": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Set Fees For Account",
                "description": "Apply predefined fee template to existing account.<br><br>**Scope**: `fee-templates.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "APPLY_FEE_TEMPLATE"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/ApplyFeeTemplateInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "example": {
                                "instructionType": "APPLY_FEE_TEMPLATE",
                                "instruction": {
                                    "clientInstructionId": "1012983",
                                    "accountId": "U46377",
                                    "templateName": "Test template"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "example": {
                                    "instructionResult": {
                                        "clientInstructionId": 1013031,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "PENDING",
                                        "instructionId": 43091814
                                    },
                                    "instructionSetId": 1703,
                                    "status": 202
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "templateName",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2445",
                                    "instructionResult": {
                                        "clientInstructionId": 12000610,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092429,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092592,
                                        "error": {
                                            "errorCode": "CORRUPT_DATA_INVALID_ACCT",
                                            "errorMessage": "Account U463756 does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "fee-templates.write"
                ]
            }
        },
        "/gw/api/v1/fee-templates/query": {
            "post": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "View Fee Template For Account",
                "description": "View fee template applied to an existing account.<br><br>**Scope**: `fee-templates.read`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "description": "Create fee template request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "QUERY_FEE_TEMPLATE"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/QueryFeeTemplate"
                                            }
                                        ]
                                    }
                                }
                            },
                            "example": {
                                "instructionType": "QUERY_FEE_TEMPLATE",
                                "instruction": {
                                    "clientInstructionId": "1012983",
                                    "accountId": "U46377"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Instruction successfully created and processed synchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryFeeTemplateResult"
                                },
                                "example": {
                                    "instructionResult": {
                                        "templateDetails": {
                                            "accountId": "U46377",
                                            "templateName": ""
                                        },
                                        "ibReferenceId": 0,
                                        "clientInstructionId": 12001818,
                                        "instructionType": "QUERY_FEE_TEMPLATE",
                                        "instructionStatus": "PROCESSED",
                                        "instructionId": 43094186,
                                        "error": {
                                            "errorCode": "FEE_TEMPLATE_NOT_FOUND",
                                            "errorMessage": "Fee template not found for client account U46377"
                                        }
                                    },
                                    "instructionSetId": 3770,
                                    "status": 201
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "templateName",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2445",
                                    "instructionResult": {
                                        "clientInstructionId": 12000610,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092429,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092592,
                                        "error": {
                                            "errorCode": "CORRUPT_DATA_INVALID_ACCT",
                                            "errorMessage": "Account U463756 does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "fee-templates.read"
                ]
            }
        },
        "/gw/api/v1/forms": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Get Forms",
                "description": "Get forms<br><br>**Scope**: `accounts.read` OR `forms.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "formNo",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    {
                        "name": "getDocs",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projection",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "default": "NONE",
                            "enum": [
                                "PAYLOAD",
                                "DOCS",
                                "NONE"
                            ]
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Get forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormFileResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read",
                    "forms.read"
                ]
            }
        },
        "/gw/api/v1/instruction-sets/{instructionSetId}": {
            "get": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Get Status For InstructionSetId",
                "description": "Retrieve status of all requests associated with instructionSetId.<br><br>**Scope**: `instructions.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    },
                    {
                        "$ref": "#/components/parameters/instructionSetIdPathParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the status multiple instructions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstructionSetResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns a Problem detail instance representing a not found request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoSuchInstructionSetResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to process request due to an Internal Error. Please try again later.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "instructions.read"
                ]
            }
        },
        "/gw/api/v1/instructions/cancel": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Cancel Request",
                "description": "Cancel request by instructionId.<br><br>**Scope**: `instructions.read`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "CANCEL_INSTRUCTION"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/CancelInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "example": {
                                "intructionType": "CANCEL_INSTRUCTION",
                                "instruction": {
                                    "clientInstructionId": "12001810",
                                    "instructionId": 43085477,
                                    "reason": "Testing"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Instruction successfully created and processed synchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SynchronousInstructionResponse"
                                },
                                "example": {
                                    "instructionResult": {
                                        "clientInstructionId": 12001810,
                                        "instructionType": "CANCEL_INSTRUCTION",
                                        "instructionStatus": "PROCESSED",
                                        "instructionId": 43094179
                                    },
                                    "instructionSetId": 3763,
                                    "status": 201
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "instructionId",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "3766",
                                    "instructionResult": {
                                        "clientInstructionId": 12001813,
                                        "instructionType": "CANCEL_INSTRUCTION",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43094182,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for ibgroup.ibcust.fbfb.instructions.CancelTransaction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "3765",
                                    "instructionResult": {
                                        "clientInstructionId": 12001812,
                                        "instructionType": "CANCEL_INSTRUCTION",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 43092592,
                                        "error": {
                                            "errorCode": "ERROR_INSTR_ID_AND_CP_NOT_RELATED",
                                            "errorMessage": "Instruction Id: 43092775 not related to counterparty qatester"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "instructions.read"
                ]
            }
        },
        "/gw/api/v1/instructions/query": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Get Transaction History",
                "description": "Query list of recent transactions (up to 30 days) based on accountId.<br><br>**Scope**: `instructions.read`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "description": "Create recent instructions request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "QUERY_RECENT_INSTRUCTIONS"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/QueryRecentInstructions"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Query Recent Instructions": {
                                    "value": {
                                        "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                        "instruction": {
                                            "clientInstructionId": "7009001",
                                            "accountId": "U139838",
                                            "transactionHistory": {
                                                "daysToGoBack": 3,
                                                "transactionType": "ACH_INSTRUCTION"
                                            }
                                        }
                                    }
                                },
                                "Query Recent Instructions - Transaction Type not specified": {
                                    "value": {
                                        "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                        "instruction": {
                                            "clientInstructionId": "7009001",
                                            "accountId": "U139838",
                                            "transactionHistory": {
                                                "daysToGoBack": 3
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "examples": {
                                    "Query Recent Instructions": {
                                        "value": {
                                            "instructionResult": {
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7009001,
                                                "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                                "status": "PENDING",
                                                "instructionId": 43094002,
                                                "code": "PENDING",
                                                "description": "Query is being processed. Please poll for status 1 minutes later using FB status endpoint. No new queries will be allowed before this one is processed"
                                            },
                                            "instructionSetId": 3702,
                                            "status": 202
                                        }
                                    },
                                    "Query Recent Instructions - Transaction Type not specified": {
                                        "value": {
                                            "instructionResult": {
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7009001,
                                                "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                                "status": "PENDING",
                                                "instructionId": 43094002,
                                                "code": "PENDING",
                                                "description": "Query is being processed. Please poll for status 1 minutes later using FB status endpoint. No new queries will be allowed before this one is processed"
                                            },
                                            "instructionSetId": 3702,
                                            "status": 202
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "templateName",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2445",
                                    "instructionResult": {
                                        "clientInstructionId": 12000610,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "status": "REJECTED",
                                        "instructionId": 43092429,
                                        "code": "ERROR_PERMISSION_DENIED",
                                        "description": "Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "APPLY_FEE_TEMPLATE",
                                        "status": "REJECTED",
                                        "instructionId": 43092592,
                                        "code": "CORRUPT_DATA_INVALID_ACCT",
                                        "description": "Account U463756 does not exist"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "instructions.read"
                ]
            }
        },
        "/gw/api/v1/instructions/{instructionId}": {
            "get": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Get Status For InstructionId",
                "description": "Retrieve status of request by instructionId<br><br>**Scope**: `instructions.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    },
                    {
                        "$ref": "#/components/parameters/instructionIdPathParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the status of an instruction.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/InstructionPollingResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/InstructionResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryRecentInstructionResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/DepositFundsPollingResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/QueryIRAContributionsResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Polling Status Pending": {
                                        "value": {
                                            "status": 200,
                                            "instructionResult": {
                                                "clientInstructionId": 7008156,
                                                "instructionType": "INTERNAL_CASH_TRANSFER",
                                                "status": "PENDING",
                                                "instructionId": 43092595
                                            },
                                            "instructionSetId": 2650
                                        }
                                    },
                                    "Polling Status Processed": {
                                        "value": {
                                            "status": 200,
                                            "instructionResult": {
                                                "clientInstructionId": 7008157,
                                                "instructionType": "INTERNAL_CASH_TRANSFER",
                                                "status": "PROCESSED",
                                                "instructionId": 43092596
                                            },
                                            "instructionSetId": 2651
                                        }
                                    },
                                    "Polling Status Query Recent Instruction": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 4206,
                                            "instructionResult": {
                                                "instructionHistory": {
                                                    "historyMaxDepthNumberOfDays": 30,
                                                    "historyMaxDepthNumberOfInstruction": 100000,
                                                    "result": [
                                                        {
                                                            "clientInstructionId": 0,
                                                            "ibInstructionId": 11383366,
                                                            "instructionType": "ACH_INSTRUCTION",
                                                            "requestDate": "2024-02-06T07:35:36-05",
                                                            "status": "PENDING_VERIFICATION",
                                                            "instructionSetId": 0
                                                        },
                                                        {
                                                            "clientInstructionId": 0,
                                                            "ibInstructionId": 11383356,
                                                            "instructionType": "ACH_INSTRUCTION",
                                                            "requestDate": "2024-02-06T07:00:34-05",
                                                            "status": "REJECTED",
                                                            "instructionSetId": 0
                                                        },
                                                        {
                                                            "clientInstructionId": 0,
                                                            "ibInstructionId": 11383355,
                                                            "instructionType": "ACH_INSTRUCTION",
                                                            "requestDate": "2024-02-06T06:58:22-05",
                                                            "status": "PENDING",
                                                            "instructionSetId": 0
                                                        }
                                                    ]
                                                },
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 12003152,
                                                "instructionType": "QUERY_RECENT_INSTRUCTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 11383402
                                            }
                                        }
                                    },
                                    "Polling Status - Deposit Instruction": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 3673,
                                            "instructionResult": {
                                                "ibReferenceId": 166903389,
                                                "clientInstructionId": 1091115677,
                                                "instructionType": "DEPOSIT",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 11177823
                                            }
                                        }
                                    },
                                    "Polling Status - Query IRA Contributions": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 18642,
                                            "instructionResult": {
                                                "accountId": "U68903",
                                                "year": "2003",
                                                "iraType": "ROTH NEW",
                                                "contributions": [
                                                    {
                                                        "maximumContributionLimit": 4000,
                                                        "yearToDateContribution": 3500,
                                                        "allowedContributionLimit": 500
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013308,
                                                "instructionType": "QUERY_IRA_CONTRIBUTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43134476
                                            }
                                        }
                                    },
                                    "Polling Status - Query IRA Contributions (SEP Accounts)": {
                                        "value": {
                                            "status": 200,
                                            "instructionSetId": 18640,
                                            "instructionResult": {
                                                "accountId": "U1032333",
                                                "year": "2022",
                                                "iraType": "SEP",
                                                "contributions": [
                                                    {
                                                        "type": "EMPLOYEE",
                                                        "maximumContributionLimit": 7000,
                                                        "yearToDateContribution": 0
                                                    },
                                                    {
                                                        "type": "EMPLOYER",
                                                        "maximumContributionLimit": 58000,
                                                        "yearToDateContribution": 0
                                                    }
                                                ],
                                                "ibReferenceId": 0,
                                                "clientInstructionId": 7013306,
                                                "instructionType": "QUERY_IRA_CONTRIBUTIONS",
                                                "instructionStatus": "PROCESSED",
                                                "instructionId": 43134474
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "208": {
                        "description": "Client tried to reuse the same instructionId for more than one transaction. Returning the status for the first registered transaction under given instructionId (when there were no duplicates yet). Reconsile based on instructionSetId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstructionResponse"
                                },
                                "example": {
                                    "status": 208,
                                    "instructionResult": {
                                        "clientInstructionId": 1013025,
                                        "instructionType": "INTERNAL_CASH_TRANSFER",
                                        "status": "REJECTED",
                                        "instructionId": 43091799,
                                        "code": "CORRUPT_DATA_INVALID_ACCT",
                                        "description": "Account U345 does not exist"
                                    },
                                    "instructionSetId": 1686
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returns a Problem detail instance representing a not found request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoSuchInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Not found",
                                    "status": 404,
                                    "detail": "Funds & Banking: Could not get status for clientId: qatester, transactionId : 72308156"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to process request due to an Internal Error. Please try again later.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "instructions.read"
                ]
            }
        },
        "/gw/api/v1/internal-asset-transfers": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Transfer Positions Internally",
                "description": "Transfer positions internally between two accounts with Interactive Brokers<br><br>**Scope**: `transfers.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "INTERNAL_POSITION_TRANSFER"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/InternalPositionTransferInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Internal Position Transfer - using Trading Instrument": {
                                    "value": {
                                        "instructionType": "INTERNAL_POSITION_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013044,
                                            "sourceAccountId": "U399192",
                                            "targetAccountId": "U87440",
                                            "transferQuantity": 6,
                                            "tradingInstrument": {
                                                "tradingInstrumentDescription": {
                                                    "securityIdType": "ISIN",
                                                    "securityId": "459200101",
                                                    "assetType": "STK"
                                                },
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                },
                                "Internal Position Transfer - using contractID (conid)": {
                                    "value": {
                                        "instructionType": "INTERNAL_POSITION_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": 7013043,
                                            "sourceAccountId": "U399192",
                                            "targetAccountId": "U87440",
                                            "transferQuantity": 6,
                                            "tradingInstrument": {
                                                "conid": 21323,
                                                "currency": "USD"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "example": {
                                    "instructionResult": {
                                        "clientInstructionId": 7008152,
                                        "instructionType": "INTERNAL_POSITION_TRANSFER",
                                        "status": "PENDING",
                                        "instructionId": 43092590
                                    },
                                    "instructionSetId": 2614,
                                    "status": 202
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "conid/tradingInstrumentDescription",
                                            "description": "For internal position transfer either con_id or trading_product must be present"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "2615",
                                    "instructionResult": {
                                        "clientInstructionId": 7008154,
                                        "instructionType": "INTERNAL_POSITION_TRANSFER",
                                        "status": "REJECTED",
                                        "instructionId": 43092591,
                                        "code": "ERROR_PERMISSION_DENIED",
                                        "description": "Permission denied for ibgroup.ibcust.fbfb.instructions.IntPositionTransfer"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "2616",
                                    "instructionResult": {
                                        "clientInstructionId": 7008155,
                                        "instructionType": "INTERNAL_POSITION_TRANSFER",
                                        "status": "REJECTED",
                                        "instructionId": 43092592,
                                        "code": "CORRUPT_DATA_INVALID_ACCT",
                                        "description": "Account U463756 does not exist"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "transfers.write"
                ]
            }
        },
        "/gw/api/v1/internal-cash-transfers": {
            "post": {
                "tags": [
                    "Account Management Banking"
                ],
                "summary": "Transfer Cash Internally",
                "description": "Transfer cash internally between two accounts with Interactive Brokers.<br><br>**Scope**: `transfers.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "instruction",
                                    "instructionType"
                                ],
                                "properties": {
                                    "instructionType": {
                                        "type": "string",
                                        "enum": [
                                            "INTERNAL_CASH_TRANSFER"
                                        ]
                                    },
                                    "instruction": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/InternalCashTransferInstruction"
                                            }
                                        ]
                                    }
                                }
                            },
                            "examples": {
                                "Internal Cash Transfer": {
                                    "value": {
                                        "intructionType": "INTERNAL_CASH_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "sourceAccountId": "U46377",
                                            "targetAccountId": "U15667",
                                            "amount": 123.45,
                                            "currency": "GBP",
                                            "dateTimeToOccur": "2018-03-20T09:12:13Z"
                                        }
                                    }
                                },
                                "Internal Cash Transfer (2)": {
                                    "value": {
                                        "intructionType": "INTERNAL_CASH_TRANSFER",
                                        "instruction": {
                                            "clientInstructionId": "1012983",
                                            "sourceAccountId": "U46377",
                                            "targetAccountId": "U15667",
                                            "amount": 123.45,
                                            "currency": "GBP"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Creates a new instruction synchronously, e.g., for Internal Cash Transfer w/o dateTimeToOccur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SynchronousInstructionResponse"
                                },
                                "example": {
                                    "instructionResult": {
                                        "clientInstructionId": 1013032,
                                        "instructionType": "INTERNAL_CASH_TRANSFER",
                                        "instructionStatus": "PROCESSED",
                                        "instructionId": 43091814,
                                        "ibReferenceId": 132123
                                    },
                                    "instructionSetId": 1703,
                                    "status": 201
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Accepts request to create a new instruction asynchronously",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsynchronousInstructionResponse"
                                },
                                "example": {
                                    "instructionResult": {
                                        "clientInstructionId": 1013031,
                                        "instructionType": "INTERNAL_CASH_TRANSFER",
                                        "instructionStatus": "PENDING",
                                        "instructionId": 43091814
                                    },
                                    "instructionSetId": 1703,
                                    "status": 202
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                },
                                "example": {
                                    "type": "/invalid-argument",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Input is not a JSON Object or doesn't contain all expected fields",
                                    "invalidArguments": [
                                        {
                                            "field": "sourceAccountId",
                                            "description": "Missing required parameter"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Forbidden",
                                    "status": 403,
                                    "detail": "Permission denied- Insufficient rights for using resource",
                                    "instructionSetId": "1401",
                                    "instructionResult": {
                                        "clientInstructionId": 1013326,
                                        "instructionType": "INTERNAL_CASH_TRANSFER",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 11132096,
                                        "error": {
                                            "errorCode": "ERROR_PERMISSION_DENIED",
                                            "errorMessage": "Permission denied for InternalCashTransfer Instruction"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Returns a Problem detail instance representing a business error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BusinessRejectResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Business Error",
                                    "status": 422,
                                    "detail": "Funds and Banking server cannot process your request because it contains invalid data",
                                    "instructionSetId": "1402",
                                    "instructionResult": {
                                        "clientInstructionId": 1013328,
                                        "instructionType": "INTERNAL_CASH_TRANSFER",
                                        "instructionStatus": "REJECTED",
                                        "instructionId": 11132098,
                                        "error": {
                                            "errorCode": "CORRUPT_DATA_INVALID_ACCT",
                                            "errorMessage": "Account U39 does not exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Internal Server Error",
                                    "status": 500,
                                    "detail": "Internal Server Error"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "transfers.write"
                ]
            }
        },
        "/gw/api/v1/participating-banks": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Get Participating Banks",
                "description": "Get list of banks which support banking connection with Interactive Brokers.<br><br>**Scope**: `enumerations.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/clientIdPathParam"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Parameter for which the list of participating banks is fetched",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "eDDA"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the list of participating banks.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetParticipatingListResponse"
                                },
                                "example": {
                                    "type": "eDDA",
                                    "participatingBanks": [
                                        {
                                            "institutionName": "WELAB BANK LIMITED",
                                            "clearingCode": "390",
                                            "BIC": "WEDIHKHHXXX"
                                        },
                                        {
                                            "institutionName": "INDUSTRIAL AND COMMERCIAL BANK OF CHINA (ASIA) LIMITED",
                                            "clearingCode": "072",
                                            "BIC": "UBHKHKHHXXX"
                                        },
                                        {
                                            "institutionName": "FUSION BANK LIMITED",
                                            "clearingCode": "391",
                                            "BIC": "IFFUHKHHXXX"
                                        },
                                        {
                                            "institutionName": "CITIBANK (HONG KONG) LIMITED",
                                            "clearingCode": "250",
                                            "BIC": "CITIHKAXXXX"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a not found request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoSuchInstructionResponse"
                                },
                                "example": {
                                    "type": "/simple",
                                    "title": "Bad Request",
                                    "status": 400,
                                    "detail": "Request path does not contain all expected fields, please consult provided documentation, escalate to IB contact if issue persists"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to process request due to an Internal Error. Please try again later.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "fb",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "enumerations.read"
                ]
            }
        },
        "/gw/api/v1/requests": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Get Requests' Details By Timeframe",
                "description": "Fetch Requests' Details By Timeframe<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "requestDetails",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/RequestDetailsRequest"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Fetch Requests' Details By Timeframe",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequestDetailsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/requests/{requestId}/status": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Get Status Of A Request",
                "description": "Returns status for account management request<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "requestId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "response",
                                "update"
                            ]
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns status for account management request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/AmRequestStatusResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/StatusResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read"
                ]
            }
        },
        "/gw/api/v1/sso-browser-sessions": {
            "post": {
                "tags": [
                    "Authorization SSO Sessions"
                ],
                "summary": "Create SSO Browser Session.",
                "description": "<br>**Scope**: `sso-browser-sessions.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeaderParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateBrowserSessionRequestBody"
                },
                "responses": {
                    "200": {
                        "description": "Create a Single Sign On (SSO) to access the IBKR hosted portal (White Branded).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBrowserSessionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "sso",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "sso-browser-sessions.write"
                ]
            }
        },
        "/gw/api/v1/sso-sessions": {
            "post": {
                "tags": [
                    "Authorization SSO Sessions"
                ],
                "summary": "Create A New SSO Session On Behalf Of An End-user.",
                "description": "<br>**Scope**: `sso-sessions.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeaderParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateSessionRequestBody"
                },
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing a reference to the newly created SSO session.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateSessionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "sso",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "sso-sessions.write"
                ]
            }
        },
        "/gw/api/v1/statements": {
            "post": {
                "tags": [
                    "Account Management Reports"
                ],
                "summary": "Generates Statements In Supported Formats Based On Request Parameters.",
                "description": "<br>**Scope**: `statements.read` OR `statements.write` OR `reports.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeaderParam"
                    }
                ],
                "requestBody": {
                    "description": "Report request object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StmtRequest"
                            },
                            "examples": {
                                "Daily html": {
                                    "$ref": "#/components/examples/DailyHTML"
                                },
                                "Monthly pdf": {
                                    "$ref": "#/components/examples/MonthlyPDF"
                                },
                                "Daily html gzip": {
                                    "$ref": "#/components/examples/DailyHTMLGZip"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing the relevant statement.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetStatementsResponse"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "statements",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "statements.read",
                    "statements.write",
                    "reports.write"
                ]
            }
        },
        "/gw/api/v1/statements/available": {
            "get": {
                "tags": [
                    "Account Management Reports"
                ],
                "summary": "Fetch Available Daily, Monthly, And Annual Report Dates For An Account Id",
                "description": "<br>**Scope**: `statements.read` OR `reports.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeaderParam"
                    },
                    {
                        "$ref": "#/components/parameters/AccountIdRequestParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing the available report dates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAvailableStmtDatesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "statements",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "statements.read",
                    "reports.read"
                ]
            }
        },
        "/gw/api/v1/tax-documents": {
            "post": {
                "tags": [
                    "Account Management Reports"
                ],
                "summary": "Fetch Tax Forms In Supported Formats Based On Request Parameters.",
                "description": "<br>**Scope**: `statements.write` OR `reports.write`<br>**Security Policy**: `Signed JWT`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeaderParam"
                    }
                ],
                "requestBody": {
                    "description": "Tax Form request object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxFormRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing the relevant Tax Form.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxFormResponse"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "statements",
                "x-ib-gateway-security-policy": "SIGNED_JWT",
                "x-ib-gateway-allowed-scopes": [
                    "statements.write",
                    "reports.write"
                ]
            }
        },
        "/gw/api/v1/tax-documents/available": {
            "get": {
                "tags": [
                    "Account Management Reports"
                ],
                "summary": "Fetch List Of Available Tax Reports/forms/documents For A Specified Account And Tax Year",
                "description": "<br>**Scope**: `statements.read` OR `reports.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeaderParam"
                    },
                    {
                        "$ref": "#/components/parameters/AccountIdRequestParam"
                    },
                    {
                        "$ref": "#/components/parameters/TaxYearRequestParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON object containing the available report dates.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAvailableTaxFormsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a Problem detail instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MissingRequiredParameterResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvalidAccessTokenResponse"
                                }
                            }
                        }
                    },
                    "402": {
                        "description": "Returns a Problem detail instance representing an unauthorized request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedAccessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Returns a Problem detail instance representing a forbidden request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InsufficientScopeResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a Problem detail instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "statements",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "statements.read",
                    "reports.read"
                ]
            }
        },
        "/gw/api/v1/validations/usernames/{username}": {
            "get": {
                "tags": [
                    "Account Management Utilities"
                ],
                "summary": "Verify User Availability",
                "description": "Verify whether user is valid and available<br><br>**Scope**: `accounts.read` OR `validations.read`<br>**Security Policy**: `HTTPS`",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns error description representing internal server error",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns error description representing bad request",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Verify whether user is valid and available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNameAvailableResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Returns error description representing access issue",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                }
                            }
                        }
                    }
                },
                "x-ib-gateway-provider-name": "eca",
                "x-ib-gateway-security-policy": "HTTPS",
                "x-ib-gateway-allowed-scopes": [
                    "accounts.read",
                    "validations.read"
                ]
            }
        },
        "/hmds/history": {
            "get": {
                "tags": [
                    "Trading Market Data"
                ],
                "summary": "Request Historical Data For An Instrument In The Form Of OHLC Bars.",
                "description": "Request historical data for an instrument in the form of OHLC bars.",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "query",
                        "description": "IB contract ID of the requested instrument.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "265598"
                        }
                    },
                    {
                        "name": "barType",
                        "in": "query",
                        "description": "The requested historical data type. If omitted, Last Trade data is queried.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "Bid",
                            "enum": [
                                "Last",
                                "Bid",
                                "Ask",
                                "Midpoint",
                                "FeeRate",
                                "Inventory"
                            ]
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "A fixed UTC date-time reference point for the historical data request, from which the specified period extends, as governed by the direction parameter. Format is YYYYMMDD-hh:mm:ss. If omitted, the current time is used, and direction must be omitted or 1.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/utcDateTime"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "A time duration away from startTime, as governed by the direction parameter, to be divided into bars of the specified width.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "6d"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "The requested period's direction in time away from the startTime. -1 queries bars from startTime forward into the future for the span of the requested period, 1 queries bars from startTime backward into the past for the span of the request period. Default behavior is 1, from startTime backward.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "-1"
                        }
                    },
                    {
                        "name": "bar",
                        "in": "query",
                        "description": "The width of the bars into which the interval determined by period and startTime will be divided. It is not required that bar evenly divide period; partial bars can be returned.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "5mins"
                        }
                    },
                    {
                        "name": "outsideRth",
                        "in": "query",
                        "description": "Indicates whether data outside of regular trading hours should be included in response.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical data query successfully returned data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hmdsHistoryResponse"
                                },
                                "examples": {
                                    "hmdsHistorySuccessExample": {
                                        "value": {
                                            "startTime": "20231211-04:00:00",
                                            "startTimeVal": 1702285200000,
                                            "endTime": "20231211-17:51:20",
                                            "endTimeVal": 1702335080000,
                                            "data": [
                                                {
                                                    "t": 1702285200000,
                                                    "o": 195.01,
                                                    "c": 194.8,
                                                    "h": 195.01,
                                                    "l": 194.8,
                                                    "v": 1723.0
                                                }
                                            ],
                                            "points": 1,
                                            "mktDataDelay": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/hmds/scanner/params": {
            "get": {
                "tags": [
                    "Trading Scanner"
                ],
                "summary": "HMDS Scanner Parameters",
                "description": "Query the parameter list for the HMDS market scanner.",
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hmdsScannerParams"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "instrument_list": [
                                                {
                                                    "display_name": "display_name",
                                                    "type": "type",
                                                    "filters": []
                                                }
                                            ],
                                            "scan_type_list": [
                                                {
                                                    "display_name": "display_name",
                                                    "code": "code",
                                                    "instruments": []
                                                }
                                            ],
                                            "location_tree": [
                                                {
                                                    "display_name": "display_name",
                                                    "type": "type",
                                                    "locations": [
                                                        {
                                                            "display_name": "display_name",
                                                            "locationCode": "locationCode",
                                                            "locations": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/hmds/scanner/run": {
            "post": {
                "tags": [
                    "Trading Scanner"
                ],
                "summary": "HMDS Market Scanner",
                "description": "Request a market scanner from our HMDS service. Can return a maximum of 250 contracts.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hmdsScannerRunRequest"
                            },
                            "example": {
                                "value": {
                                    "instrument": "BOND",
                                    "locations": "BOND.US",
                                    "scanCode": "HIGH_BOND_ASK_YIELD_ALL",
                                    "secType": "BOND",
                                    "delayedLocations": "SMART",
                                    "maxItems": 25,
                                    "filters": [
                                        {
                                            "bondAskYieldBelow": 15.819
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "description": "Returns the total number of bonds that match the indicated search.",
                                            "format": "int32"
                                        },
                                        "size": {
                                            "type": "integer",
                                            "description": "Returns the total size of the return.",
                                            "format": "int32"
                                        },
                                        "offset": {
                                            "type": "integer",
                                            "description": "Returns the distance displaced from the starting 0 value.",
                                            "format": "int32"
                                        },
                                        "scanTime": {
                                            "type": "string",
                                            "description": "Returns the UTC datetime value of when the request took place."
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Returns the market scanner name. Automatically generates an incremental scanner name for each request formatted as \"scanner{ N }\""
                                        },
                                        "position": {
                                            "type": "string",
                                            "description": "(Internal use only)"
                                        },
                                        "warningText": {
                                            "type": "string",
                                            "description": "Returns the number of contracts returned out of total contracts that match."
                                        },
                                        "Contracts": {
                                            "type": "object",
                                            "properties": {
                                                "Contract": {
                                                    "type": "array",
                                                    "properties": {
                                                        "inScanTime": {
                                                            "type": "string",
                                                            "description": "Returns the UTC datetime when the contract was retrieved."
                                                        },
                                                        "contractID": {
                                                            "type": "integer",
                                                            "description": "Returns a contract identifier that matches the market scanner parameters.",
                                                            "format": "int32"
                                                        }
                                                    },
                                                    "description": "Contains all contracts matching the market scanner."
                                                }
                                            },
                                            "description": "Contains a Contract array which appears to hold all contracts."
                                        }
                                    }
                                },
                                "examples": {
                                    "success_bond": {
                                        "value": {
                                            "total": 17616,
                                            "size": 250,
                                            "offset": 0,
                                            "scanTime": "20240403-20:31:48",
                                            "id": "scanner20",
                                            "position": "v1:AAAAAQABG3gAAAAAAAAA+g==",
                                            "Contracts": {
                                                "Contract": [
                                                    {
                                                        "inScanTime": "20240403-20:31:48",
                                                        "contractID": 403154854
                                                    },
                                                    {
                                                        "inScanTime": "20240403-20:31:48",
                                                        "contractID": 460655952
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "success_stock": {
                                        "value": {
                                            "scanTime": "20240403-20:31:23",
                                            "id": "scanner19",
                                            "warningText": "250 out of 6111 items retrieved",
                                            "Contracts": {
                                                "Contract": [
                                                    {
                                                        "inScanTime": "20240403-20:31:23",
                                                        "contractID": 536918667
                                                    },
                                                    {
                                                        "inScanTime": "20240403-20:31:23",
                                                        "contractID": 359788451
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "description": "Returned on the first successful request. Used as a preflight message.",
                        "content": {
                            "text/html": {
                                "example": {
                                    "success": "<html><body><h1>Resource not found</h1></body></html>"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account": {
            "post": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Switch Account",
                "description": "Switch the active account for how you request data. Only available for financial advisors and multi-account structures.\n",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "acctId": {
                                        "type": "string",
                                        "description": "Identifier for the unique account to retrieve information from.",
                                        "example": "U1234567"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Validates the account swapped to.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/setAccountResponse"
                                },
                                "examples": {
                                    "successfully-set-account": {
                                        "value": {
                                            "set": true,
                                            "acctId": "U2234567"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error. Unable to process request if incoming values are not valid. For example accountId is not correct\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorOnlyResponse"
                                },
                                "examples": {
                                    "invalid-account-id": {
                                        "value": {
                                            "error": "Invalid account ID"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/alert/{alertId}": {
            "get": {
                "tags": [
                    "Trading Alerts"
                ],
                "summary": "Get Details Of A Specific Alert",
                "description": "Request details of a specific alert by providing the assigned alertId Id.",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "alert identifier, internally referenced as order id",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "queryType",
                            "enum": [
                                "Q"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An object containing all unique details of the specified alert.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alertDetails"
                                },
                                "examples": {
                                    "found-alert": {
                                        "value": {
                                            "account": "U1234567",
                                            "order_id": 833967258,
                                            "alert_name": "IBM",
                                            "tif": "GTC",
                                            "expire_time": null,
                                            "alert_active": 1,
                                            "alert_repeatable": 0,
                                            "alert_email": "john.smith@example.com",
                                            "alert_send_message": 1,
                                            "alert_message": "alert message",
                                            "alert_show_popup": 1,
                                            "alert_play_audio": null,
                                            "order_status": "Submitted",
                                            "alert_triggered": false,
                                            "fg_color": "#FFFFFF",
                                            "bg_color": "#0000CC",
                                            "order_not_editable": false,
                                            "itws_orders_only": 0,
                                            "alert_mta_currency": null,
                                            "alert_mta_defaults": null,
                                            "tool_id": null,
                                            "time_zone": null,
                                            "alert_default_type": null,
                                            "condition_size": 1,
                                            "condition_outside_rth": 1,
                                            "conditions": [
                                                {
                                                    "condition_type": 1,
                                                    "conidex": "8314@NYSE",
                                                    "contract_description_1": "IBM",
                                                    "condition_operator": ">=",
                                                    "condition_trigger_method": "0",
                                                    "condition_value": "500.00",
                                                    "condition_logic_bind": "n",
                                                    "condition_time_zone": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request if orderId is empty or type is invalid",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorResponse"
                                },
                                "examples": {
                                    "bad-request": {
                                        "value": {
                                            "error": "Bad Request: orderId and type are required",
                                            "statusCode": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "description": "orderId is not parsable; unable to process request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorResponse"
                                }
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/allocation/accounts": {
            "get": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Allocatable Sub-Accounts",
                "description": "Retrieves a list of all sub-accounts and returns their net liquidity and available equity for advisors to make decisions on what accounts should be allocated and how.",
                "responses": {
                    "200": {
                        "description": "Indicates data is being returned successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/subAccounts"
                                },
                                "examples": {
                                    "2-sub-accounts": {
                                        "value": {
                                            "accounts": [
                                                {
                                                    "data": [
                                                        {
                                                            "value": "230013224.04",
                                                            "key": "NetLiquidation"
                                                        },
                                                        {
                                                            "value": "229617260.41",
                                                            "key": "AvailableEquity"
                                                        }
                                                    ],
                                                    "name": "U1234567"
                                                },
                                                {
                                                    "data": [
                                                        {
                                                            "value": "229453917.57",
                                                            "key": "NetLiquidation"
                                                        },
                                                        {
                                                            "value": "229153196.12",
                                                            "key": "AvailableEquity"
                                                        }
                                                    ],
                                                    "name": "U1234568"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/allocation/group": {
            "get": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "List All Allocation Groups",
                "description": "Retrieves a list of all of the advisor’s allocation groups. This describes the name of the allocation group, number of subaccounts within the group, and the method in use for the group.",
                "responses": {
                    "200": {
                        "description": "Returns the \"data\" array, which contains all allocation groups under the advisor account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/allocationGroups"
                                },
                                "examples": {
                                    "groups": {
                                        "value": {
                                            "data": [
                                                {
                                                    "allocation_method": "E",
                                                    "size": 16,
                                                    "name": "group_1"
                                                },
                                                {
                                                    "allocation_method": "N",
                                                    "size": 3,
                                                    "name": "group_2"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            },
            "put": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Modify Allocation Group",
                "description": "Modify an existing allocation group.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accounts",
                                    "default_method",
                                    "name"
                                ],
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name used to refer to your allocation group. If prev_name is specified, this will become the new name of the group.",
                                        "example": "Group_1_NetLiq"
                                    },
                                    "prev_name": {
                                        "type": "string",
                                        "description": "Can be used to rename a group. Using this field will recognize the previous name, while the \"name\" filed will mark the updated name.",
                                        "example": "Group_0_NetLiq"
                                    },
                                    "accounts": {
                                        "type": "array",
                                        "description": "An array of accounts that should be held in the allocation group and, if using a User-specified allocaiton method, the value correlated to the allocation."
                                    },
                                    "default_method": {
                                        "$ref": "#/components/schemas/allocationMethod"
                                    }
                                }
                            },
                            "examples": {
                                "Shares": {
                                    "value": {
                                        "name": "Group_1_Shares",
                                        "previous_name": "Group_0_Shares",
                                        "amount": 15,
                                        "default_method": "S",
                                        "accounts": {
                                            "name": "U456789",
                                            "amount": 3
                                        }
                                    }
                                },
                                "NetLiq": {
                                    "value": {
                                        "name": "Group_1_NetLiq",
                                        "default_method": "N"
                                    }
                                },
                                "EqualQty": {
                                    "value": {
                                        "name": "Group_1_Equal",
                                        "default_method": "E"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns a confirmation that the modification was successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            },
            "post": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Add Allocation Group",
                "description": "Add a new allocation group. This group can be used to trade in place of the {accountId} for the /iserver/account/{accountId}/orders endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accounts",
                                    "default_method",
                                    "name"
                                ],
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name used to refer to your allocation group. If prev_name is specified, this will become the new name of the group.",
                                        "example": "Group_1_NetLiq"
                                    },
                                    "accounts": {
                                        "type": "array",
                                        "description": "An array of accounts that should be held in the allocation group and, if using a User-specified allocaiton method, the value correlated to the allocation."
                                    },
                                    "default_method": {
                                        "$ref": "#/components/schemas/allocationMethod"
                                    }
                                }
                            },
                            "examples": {
                                "Shares": {
                                    "value": {
                                        "name": "Group_1_Shares",
                                        "default_method": "S",
                                        "accounts": [
                                            {
                                                "name": "U456789",
                                                "amount": 4
                                            },
                                            {
                                                "name": "U123456",
                                                "amount": 1
                                            }
                                        ]
                                    }
                                },
                                "NetLiq": {
                                    "value": {
                                        "name": "Group_1_NetLiq",
                                        "default_method": "N",
                                        "accounts": [
                                            {
                                                "name": "U456789"
                                            },
                                            {
                                                "name": "U123456"
                                            }
                                        ]
                                    }
                                },
                                "EqualQty": {
                                    "value": {
                                        "name": "Group_1_Equal",
                                        "default_method": "E",
                                        "accounts": [
                                            {
                                                "name": "U456789"
                                            },
                                            {
                                                "name": "U123456"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns a confirmation that the modification was successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/allocation/group/delete": {
            "post": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Remove Allocation Group",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of an existing allocation group.",
                                        "example": "Group_1_NetLiq"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns a confirmation that the modification was successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/allocation/group/single": {
            "post": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Retrieve Single Allocation Group",
                "description": "Retrieves the configuration of a single account group. This describes the name of the allocation group, the specific accounts contained in the group, and the allocation method in use along with any relevant quantities.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "Name of an existing allocation group.",
                                        "example": "Group_1_NetLiq"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns details of the allocation group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/allocationGroup"
                                },
                                "examples": {
                                    "single-group": {
                                        "value": {
                                            "name": "group1",
                                            "accounts": [
                                                {
                                                    "name": "U1234567"
                                                },
                                                {
                                                    "name": "U1234568"
                                                }
                                            ],
                                            "default_method": "E"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/allocation/presets": {
            "get": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Retrieve Allocation Presets",
                "description": "Retrieve the preset behavior for allocation groups for specific events.",
                "responses": {
                    "200": {
                        "description": "Successfully retrieve preset details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/presets"
                                },
                                "examples": {
                                    "presents": {
                                        "value": {
                                            "group_auto_close_positions": false,
                                            "default_method_for_all": "AvailableEquity",
                                            "profiles_auto_close_positions": false,
                                            "strict_credit_check": false,
                                            "group_proportional_allocation": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            },
            "post": {
                "tags": [
                    "Trading FA Allocation Management"
                ],
                "summary": "Set The Allocation Presets",
                "description": "Set the preset behavior for new allocation groups for specific events.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/presets"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully retrieve preset details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "description": "Signifies that the request was successfully submitted."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/mta": {
            "get": {
                "tags": [
                    "Trading Alerts"
                ],
                "summary": "Get MTA Alert",
                "description": "Retrieve information about your MTA alert. Each login user only has one mobile trading assistant (MTA) alert with it’s own unique tool id that cannot be changed. MTA alerts can not be created or deleted, only modified. When modified a new order Id is generated.\n",
                "externalDocs": {
                    "description": "See our here for more information on MTA alerts",
                    "url": "https://www.ibkrguides.com/iphone/alerts.htm"
                },
                "responses": {
                    "200": {
                        "description": "The alert description for the unique MTA alert on the account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alertDetails"
                                },
                                "examples": {
                                    "mta-details": {
                                        "value": {
                                            "account": "U1234567",
                                            "order_id": 167426254,
                                            "alert_name": "MTA (AutoAlert)",
                                            "tif": "GTC",
                                            "expire_time": null,
                                            "alert_active": 1,
                                            "alert_repeatable": 1,
                                            "alert_email": "jonh.smith@example.com",
                                            "alert_send_message": 1,
                                            "alert_message": null,
                                            "alert_show_popup": 0,
                                            "alert_play_audio": null,
                                            "order_status": "Submitted",
                                            "alert_triggered": false,
                                            "fg_color": "#FFFFFF",
                                            "bg_color": "#0000CC",
                                            "order_not_editable": false,
                                            "itws_orders_only": 0,
                                            "alert_mta_currency": "USD",
                                            "alert_mta_defaults": "9:STATE=1,MIN=-260000,MAX=260000,STEP=500,DEF_MIN=-26000,DEF_MAX=26000|8:STATE=0,MIN=-15,MAX=15,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|7:STATE=1,MIN=-5,MAX=5,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|4:STATE=1,MIN=1,MAX=50,STEP=1,DEF_VAL=10|5:STATE=0",
                                            "tool_id": 55834574848,
                                            "time_zone": "all timezones can be here",
                                            "alert_default_type": null,
                                            "condition_size": 1,
                                            "condition_outside_rth": 0,
                                            "conditions": [
                                                {
                                                    "condition_type": 5,
                                                    "conidex": "*@*",
                                                    "contract_description_1": "Unknown",
                                                    "condition_operator": null,
                                                    "condition_trigger_method": null,
                                                    "condition_value": "*",
                                                    "condition_logic_bind": "n",
                                                    "condition_time_zone": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/order/status/{orderId}": {
            "get": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Retrieve The Status Of A Single Order.",
                "description": "Retrieve the status of a single order.",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "The IB-assigned order ID of the desired order ticket.",
                            "format": "int32",
                            "example": "1799796559"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "order status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/orderStatus"
                                        }
                                    ]
                                },
                                "examples": {
                                    "orderStatusExample": {
                                        "value": {
                                            "sub_type": null,
                                            "request_id": "209",
                                            "server_id": "0",
                                            "order_id": 1799796559,
                                            "conidex": "265598",
                                            "conid": 265598,
                                            "symbol": "AAPL",
                                            "side": "S",
                                            "contract_description_1": "AAPL",
                                            "listing_exchange": "NASDAQ.NMS",
                                            "option_acct": "c",
                                            "company_name": "APPLE INC",
                                            "size": "0.0",
                                            "total_size": "5.0",
                                            "currency": "USD",
                                            "account": "U1234567",
                                            "order_type": "MARKET",
                                            "cum_fill": "5.0",
                                            "order_status": "Filled",
                                            "order_ccp_status": "2",
                                            "order_status_description": "Order Filled",
                                            "tif": "DAY",
                                            "fg_color": "#FFFFFF",
                                            "bg_color": "#000000",
                                            "order_not_editable": true,
                                            "editable_fields": "",
                                            "cannot_cancel_order": true,
                                            "deactivate_order": false,
                                            "sec_type": "STK",
                                            "available_chart_periods": "#R|1",
                                            "order_description": "Sold 5 Market, Day",
                                            "order_description_with_contract": "Sold 5 AAPL Market, Day",
                                            "alert_active": 1,
                                            "child_order_type": "0",
                                            "order_clearing_account": "U1234567",
                                            "size_and_fills": "5",
                                            "exit_strategy_display_price": "193.12",
                                            "exit_strategy_chart_description": "Sold 5 @ 192.26",
                                            "average_price": "192.26",
                                            "exit_strategy_tool_availability": "1",
                                            "allowed_duplicate_opposite": true,
                                            "order_time": "231211180049"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/orders": {
            "get": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Retrieves Open Orders And Filled Or Cancelled Orders Submitted During The Current Brokerage Session.",
                "description": "Retrieves open orders and filled or cancelled orders submitted during the current brokerage session.",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filter results using a comma-separated list of Order Status values. Also accepts a value to sort results by time.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "Filled,SortByTime",
                            "enum": [
                                "Inactive",
                                "PendingSubmit",
                                "PreSubmitted",
                                "Submitted",
                                "Filled",
                                "PendingCancel",
                                "Cancelled",
                                "WarnState",
                                "SortByTime"
                            ]
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "Instructs IB to clear cache of orders and obtain updated view from brokerage backend. Response will be an empty array.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Retrieve orders for a specific account in the structure.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "DU123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders for a specific account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/liveOrdersResponse"
                                },
                                "examples": {
                                    "orders": {
                                        "value": {
                                            "orders": [
                                                {
                                                    "acct": "U1234567",
                                                    "exchange": "IDEALPRO",
                                                    "conidex": "15016138@IDEALPRO",
                                                    "conid": 15016138,
                                                    "account": "DU4355398",
                                                    "orderId": 1370093238,
                                                    "cashCcy": "CAD",
                                                    "sizeAndFills": "2.4K CAD",
                                                    "orderDesc": "Bought 2806.46 Limit 0.90000, Day",
                                                    "description1": "AUD.CAD",
                                                    "ticker": "AUD",
                                                    "secType": "CASH",
                                                    "listingExchange": "FXCONV",
                                                    "remainingQuantity": 0.0,
                                                    "filledQuantity": 2499.99,
                                                    "totalSize": 2806.46,
                                                    "totalCashSize": 2500.0,
                                                    "companyName": "Australian dollar",
                                                    "status": "Filled",
                                                    "order_ccp_status": "Filled",
                                                    "origOrderType": "LIMIT",
                                                    "supportsTaxOpt": "0",
                                                    "lastExecutionTime": "240425160326",
                                                    "orderType": "Limit",
                                                    "bgColor": "#FFFFFF",
                                                    "fgColor": "#000000",
                                                    "isEventTrading": "0",
                                                    "price": "0.90000",
                                                    "timeInForce": "CLOSE",
                                                    "lastExecutionTime_r": 1714061006000,
                                                    "side": "BUY",
                                                    "avgPrice": "0.8908"
                                                }
                                            ],
                                            "snapshot": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/pnl/partitioned": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Account Profit And Loss",
                "responses": {
                    "200": {
                        "description": "Refers to “updated PnL”. Holds a json object of key-value paired pnl details.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pnlPartitionedResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "upnl": {
                                                "U1234567.Core": {
                                                    "rowType": 1,
                                                    "dpl": -12510.0,
                                                    "nl": 1290000.0,
                                                    "upl": 256000.0,
                                                    "el": 824600.0,
                                                    "mv": 1700000.0
                                                }
                                            }
                                        }
                                    },
                                    "can-be-empty-for-initial-reques": {
                                        "value": {
                                            "upnl": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/IServerAccountBadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/search/{searchPattern}": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Search Dynamic Account",
                "description": "Returns a list of accounts matching a query pattern set in the request. Broker accounts configured with the DYNACCT property will not receive account information at login. Instead, they must dynamically query then set their account number. Customers without the DYNACCT property will receive a 503 error.\n",
                "parameters": [
                    {
                        "name": "searchPattern",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "The pattern used to describe credentials to search for. Including part of part of an account ID will return the full value.",
                            "example": "U123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns all accounts that match the searchPattern string.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dynAccountSearchResponse"
                                },
                                "examples": {
                                    "successfully-found": {
                                        "value": {
                                            "matchedAccounts": [
                                                {
                                                    "accountId": "U1234567",
                                                    "alias": "U1234567",
                                                    "allocationId": "U1234567"
                                                }
                                            ],
                                            "pattern": "U1"
                                        }
                                    },
                                    "not-found": {
                                        "value": {
                                            "matchedAccounts": [],
                                            "pattern": "123"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/trades": {
            "get": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Retrieve A List Of Trades.",
                "description": "Retrieve a list of trades, up to a maximum of 7 days prior.",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "The number of prior days prior to include in response, up to a maximum of 7. If omitted, only the current day's executions will be returned.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "3"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Filter trades by account ID or allocation group.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "DU123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trades",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tradesResponse"
                                },
                                "examples": {
                                    "tradesResponseExample": {
                                        "value": [
                                            {
                                                "execution_id": "0000e0d5.6576fd38.01.01",
                                                "symbol": "AAPL",
                                                "supports_tax_opt": "1",
                                                "side": "S",
                                                "order_description": "Sold 5 @ 192.26 on ISLAND",
                                                "trade_time": "20231211-18:00:49",
                                                "trade_time_r": 1702317649000,
                                                "size": 5.0,
                                                "price": "192.26",
                                                "order_ref": "Order123",
                                                "submitter": "user1234",
                                                "exchange": "ISLAND",
                                                "commission": "1.01",
                                                "net_amount": 961.3,
                                                "account": "U1234567",
                                                "accountCode": "U1234567",
                                                "account_allocation_name": "U1234567",
                                                "company_name": "APPLE INC",
                                                "contract_description_1": "AAPL",
                                                "sec_type": "STK",
                                                "listing_exchange": "NASDAQ.NMS",
                                                "conid": 265598,
                                                "conidEx": "265598",
                                                "clearing_id": "IB",
                                                "clearing_name": "IB",
                                                "liquidation_trade": "0",
                                                "is_event_trading": "0"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/alert": {
            "post": {
                "tags": [
                    "Trading Alerts"
                ],
                "summary": "Create Or Modify Alert",
                "description": "Endpoint used to create a new alert, or modify an existing alert.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "U1234567"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/alertCreationRequest"
                            },
                            "examples": {
                                "alert-creation-request": {
                                    "value": {
                                        "alertName": "AAPL_Price",
                                        "alertMessage": "AAPL Price Drop!",
                                        "alertRepeatable": 0,
                                        "email": "jonh.smith@example.com",
                                        "expireTime": "20231231-12:00:00",
                                        "iTWSOrdersOnly": 0,
                                        "outsideRth": 0,
                                        "sendMessage": 1,
                                        "showPopup": 1,
                                        "tif": "GTC",
                                        "conditions": [
                                            {
                                                "conidex": "265598@NYSE",
                                                "logicBind": "a",
                                                "operator": ">=",
                                                "timeZone": "US/Eastern",
                                                "triggerMethod": "0",
                                                "type": 1,
                                                "value": "500"
                                            }
                                        ]
                                    }
                                },
                                "alert-modification-request": {
                                    "value": {
                                        "orderId": "1408549184",
                                        "alertName": "AAPL_Price",
                                        "alertMessage": "AAPL Price Drop! Modified message",
                                        "alertRepeatable": 0,
                                        "email": "jonh.smith@example.com",
                                        "expireTime": "20231231-12:00:00",
                                        "iTWSOrdersOnly": 0,
                                        "outsideRth": 0,
                                        "sendMessage": 1,
                                        "showPopup": 1,
                                        "tif": "GTC",
                                        "conditions": [
                                            {
                                                "conidex": "265598@NYSE",
                                                "logicBind": "a",
                                                "operator": ">=",
                                                "timeZone": "US/Eastern",
                                                "triggerMethod": "0",
                                                "type": 1,
                                                "value": "500"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alertCreationResponse"
                                },
                                "examples": {
                                    "successfully-created": {
                                        "value": {
                                            "request_id": null,
                                            "order_id": 1408549184,
                                            "success": true,
                                            "text": "Submitted",
                                            "order_status": null,
                                            "warning_message": null
                                        }
                                    },
                                    "successfully-modified": {
                                        "value": {
                                            "request_id": null,
                                            "order_id": 1408549184,
                                            "success": true,
                                            "text": "Submitted",
                                            "order_status": null,
                                            "warning_message": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request; body is empty",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorResponse"
                                },
                                "examples": {
                                    "empty-body": {
                                        "value": {
                                            "error": "Bad Request: body can't be empty",
                                            "statusCode": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error. Unable to process request if incoming values are not valid. For example operator is \"abc\" Or if modification request contains unmodified fields\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorOnlyResponse"
                                },
                                "examples": {
                                    "invalid-creation-request": {
                                        "value": {
                                            "error": "Condition #1:can't recognize fix [abc]"
                                        }
                                    },
                                    "incorect-modification-request": {
                                        "value": {
                                            "error": "Alert name cannot be modified"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/alert/activate": {
            "post": {
                "tags": [
                    "Trading Alerts"
                ],
                "summary": "Activate Or Deactivate An Alert",
                "description": "Activate or Deactivate existing alerts created for this account. This does not delete alerts, but disables notifications until reactivated.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "U1234567"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/alertActivationRequest"
                            },
                            "examples": {
                                "activate-request": {
                                    "value": {
                                        "alertId": 9876543210,
                                        "alertActive": 1
                                    }
                                },
                                "deactivate-request": {
                                    "value": {
                                        "alertId": 9876543210,
                                        "alertActive": 0
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An object containing details about the activated/deactivated alert.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alertActivationResponse"
                                },
                                "examples": {
                                    "activated-deactivated-successfully": {
                                        "value": {
                                            "request_id": null,
                                            "order_id": 833967258,
                                            "success": true,
                                            "text": "Request was submitted",
                                            "failure_list": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error; unable to process incoming request due to invalid data in it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorOnlyResponse"
                                },
                                "examples": {
                                    "request-with-non-existent-alertId": {
                                        "value": {
                                            "error": "failed to activate/deactivate alert"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/alert/{alertId}": {
            "delete": {
                "tags": [
                    "Trading Alerts"
                ],
                "summary": "Delete An Alert",
                "description": "Permanently delete an existing alert. Deleting an MTA alert will reset it to the default state.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "U1234567"
                        }
                    },
                    {
                        "name": "alertId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "order_id returned from the original alert creation, or from the list of available alerts.",
                            "example": "9876543210"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An object containing details on the deleted endpoint.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alertDeletionResponse"
                                },
                                "examples": {
                                    "successfully-deleted": {
                                        "value": {
                                            "request_id": null,
                                            "order_id": 833967258,
                                            "success": true,
                                            "text": "Request was submitted",
                                            "failure_list": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error; Unable to delete alert in case when provided alert id doesn't exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorOnlyResponse"
                                },
                                "examples": {
                                    "alert-id-doesnt-exist": {
                                        "value": {
                                            "error": "failed to delete alert: Alert 83396732432423258 doesn't exist"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/alerts": {
            "get": {
                "tags": [
                    "Trading Alerts"
                ],
                "summary": "Get A List Of Available Alerts",
                "description": "Retrieve a list of all alerts attached to the provided account.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Identifier for the unique account to retrieve information from.",
                            "example": "U1234567"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/alerts"
                                },
                                "examples": {
                                    "not-found": {
                                        "value": []
                                    },
                                    "found-alerts": {
                                        "value": {
                                            "order_id": 9876543210,
                                            "account": "U1234567",
                                            "alert_name": "AAPL",
                                            "alert_active": 1,
                                            "order_time": "20240308-17:08:38",
                                            "alert_triggered": false,
                                            "alert_repeatable": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/order/{orderId}": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Modify An Existing, Unfilled Order.",
                "description": "Modify an existing, unfilled order.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account to which the order will clear.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "DU123456"
                        }
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The IB-assigned order ID of the desired order ticket.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "1799796559"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/singleOrderSubmissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Status of submission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/orderSubmitSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderSubmitError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderReplyMessage"
                                        },
                                        {
                                            "$ref": "#/components/schemas/advancedOrderReject"
                                        }
                                    ]
                                },
                                "examples": {
                                    "orderModifySuccessExample": {
                                        "value": [
                                            {
                                                "order_id": "1370093239",
                                                "order_status": "PreSubmitted",
                                                "encrypt_message": "1"
                                            }
                                        ]
                                    },
                                    "orderReplyMessageExample": {
                                        "value": [
                                            {
                                                "id": "99097238-9824-4830-84ef-46979aa22593",
                                                "isSuppressed": false,
                                                "message": [
                                                    "You are submitting an order without market data. We strongly recommend against this as it may result in erroneous and unexpected trades.\nAre you sure you want to submit this order?"
                                                ],
                                                "messageIds": [
                                                    "o354"
                                                ]
                                            }
                                        ]
                                    },
                                    "orderModifyErrorExample": {
                                        "value": {
                                            "error": "OrderID 123456 doesn't exist"
                                        }
                                    },
                                    "advancedOrderRejectPromptExample": {
                                        "value": {
                                            "orderId": 123456789,
                                            "reqId": "22170",
                                            "dismissable": [],
                                            "text": "If your order is not immediately executable, our systems may, depending on market conditions, reject your order if its limit price is more that the allowed amount away from the reference price at that time. If this happens, you will not receive a fill. This is a control designed to ensure that we comply with our regulatory obligations to avoid submitting disruptive orders to the marketplace.\nUse the Price Management Algo?",
                                            "options": [
                                                "Use on this order",
                                                "Always use",
                                                "Do not use"
                                            ],
                                            "type": "M",
                                            "messageId": "p12",
                                            "prompt": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            },
            "delete": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Cancel An Existing, Unfilled Order.",
                "description": "Cancel an existing, unfilled order.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account to which the order will clear.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "DU123456"
                        }
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "The IB-assigned order ID of the desired order ticket.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "1799796559"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status of submission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/orderCancelSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderSubmitError"
                                        }
                                    ]
                                },
                                "examples": {
                                    "orderCancelSuccessExample": {
                                        "value": [
                                            {
                                                "msg": "Request was submitted",
                                                "order_id": "1370093239",
                                                "order_status": "PreSubmitted",
                                                "encrypt_message": "1"
                                            }
                                        ]
                                    },
                                    "orderCancelErrorExample": {
                                        "value": {
                                            "error": "OrderID 123456 doesn't exist"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/orders": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Submit A New Order(s) Ticket, Bracket, Or OCA Group.",
                "description": "Submit a new order(s) ticket, bracket, or OCA group.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account to which the order will clear.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "DU123456"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ordersSubmissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Order submission response (success, error, reply is required or order reject)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/orderSubmitSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderSubmitError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderReplyMessage"
                                        },
                                        {
                                            "$ref": "#/components/schemas/advancedOrderReject"
                                        }
                                    ]
                                },
                                "examples": {
                                    "orderSubmitSuccessExample": {
                                        "value": [
                                            {
                                                "order_id": "1370093239",
                                                "order_status": "PreSubmitted",
                                                "encrypt_message": "1"
                                            }
                                        ]
                                    },
                                    "orderReplyMessageExample": {
                                        "value": [
                                            {
                                                "id": "99097238-9824-4830-84ef-46979aa22593",
                                                "isSuppressed": false,
                                                "message": [
                                                    "You are submitting an order without market data. We strongly recommend against this as it may result in erroneous and unexpected trades.\nAre you sure you want to submit this order?"
                                                ],
                                                "messageIds": [
                                                    "o354"
                                                ]
                                            }
                                        ]
                                    },
                                    "orderSubmitErrorExample": {
                                        "value": {
                                            "error": "Order not confirmed "
                                        }
                                    },
                                    "advancedOrderRejectPromptExample": {
                                        "value": {
                                            "orderId": 123456789,
                                            "reqId": "22170",
                                            "dismissable": [],
                                            "text": "If your order is not immediately executable, our systems may, depending on market conditions, reject your order if its limit price is more that the allowed amount away from the reference price at that time. If this happens, you will not receive a fill. This is a control designed to ensure that we comply with our regulatory obligations to avoid submitting disruptive orders to the marketplace.\nUse the Price Management Algo?",
                                            "options": [
                                                "Use on this order",
                                                "Always use",
                                                "Do not use"
                                            ],
                                            "type": "M",
                                            "messageId": "p12",
                                            "prompt": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/orders/whatif": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Preview The Projected Effects Of An Order Ticket Or Bracket Of Orders, Including Cost And Changes To Margin And Account Equity.",
                "description": "Preview the projected effects of an order ticket or bracket of orders, including cost and changes to margin and account equity.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The account to which the order will clear.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "DU123456"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ordersSubmissionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Order Preview",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/orderPreview"
                                },
                                "examples": {
                                    "orderPreview": {
                                        "value": {
                                            "amount": {
                                                "amount": "1,977.60 USD (10 Shares)",
                                                "commission": "1 USD",
                                                "total": "1,978.60 USD"
                                            },
                                            "equity": {
                                                "current": "123,456",
                                                "change": "-1",
                                                "after": "123,455"
                                            },
                                            "initial": {
                                                "current": "1000",
                                                "change": "652",
                                                "after": "1652"
                                            },
                                            "maintenance": {
                                                "current": "900",
                                                "change": "590\"\"",
                                                "after": "1490"
                                            },
                                            "position": {
                                                "current": "20",
                                                "change": "10",
                                                "after": "30"
                                            },
                                            "warn": "21/You are trying to submit an order without having market data for this instrument. \nIB strongly recommends against this kind of blind trading which may result in \nerroreous or unexpected trades.",
                                            "error": null
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/summary": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "General Account Summary",
                "description": "Provides a general overview of the account details such as balance values.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Pass the account identifier to receive information for.",
                            "example": "U1234567"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provides a general overview of the account details such as balance values.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/accountSummaryResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "accountType": "",
                                            "status": "",
                                            "balance": 825903.0,
                                            "SMA": 368538.0,
                                            "buyingPower": 3307124.0,
                                            "availableFunds": 825903.0,
                                            "excessLiquidity": 826781.0,
                                            "netLiquidationValue": 1290490.0,
                                            "equityWithLoanValue": 1281714.0,
                                            "regTLoan": 0.0,
                                            "securitiesGVP": 1793178.0,
                                            "totalCashValue": -401846.0,
                                            "accruedInterest": 0.0,
                                            "regTMargin": 0.0,
                                            "initialMargin": 464586.0,
                                            "maintenanceMargin": 463709.0,
                                            "cashBalances": [
                                                {
                                                    "currency": "EUR",
                                                    "balance": 194.0,
                                                    "settledCash": 194.0
                                                },
                                                {
                                                    "currency": "HKD",
                                                    "balance": 0.0,
                                                    "settledCash": 0.0
                                                },
                                                {
                                                    "currency": "JPY",
                                                    "balance": 14781.0,
                                                    "settledCash": 14781.0
                                                },
                                                {
                                                    "currency": "USD",
                                                    "balance": -402158.0,
                                                    "settledCash": -402158.0
                                                },
                                                {
                                                    "currency": "Total (in USD)",
                                                    "balance": -401846.0,
                                                    "settledCash": -401846.0
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/IServerAccountBadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/summary/available_funds": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Summary Of Available Funds",
                "description": "Provides a summary specific for avilable funds giving more depth than the standard /summary endpoint.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Pass the account identifier to receive information for.",
                            "example": "U1234567"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates a successful return of available funds.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/availableFundsResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "total": {
                                                "current_available": "825,208 USD",
                                                "current_excess": "826,089 USD",
                                                "Prdctd Pst-xpry Excss": "0 USD",
                                                "SMA": "368,538 USD",
                                                "Lk Ahd Avlbl Fnds": "821,067 USD",
                                                "Lk Ahd Excss Lqdty": "822,324 USD",
                                                "overnight_available": "821,067 USD",
                                                "overnight_excess": "822,324 USD",
                                                "buying_power": "3,304,346 USD",
                                                "leverage": "n/a",
                                                "Lk Ahd Nxt Chng": "@ 16:00:00",
                                                "day_trades_left": "Unlimited"
                                            },
                                            "Crypto at Paxos": {
                                                "current_available": "0 USD",
                                                "current_excess": "0 USD",
                                                "Prdctd Pst-xpry Excss": "0 USD",
                                                "Lk Ahd Avlbl Fnds": "0 USD",
                                                "Lk Ahd Excss Lqdty": "0 USD",
                                                "overnight_available": "0 USD",
                                                "overnight_excess": "0 USD"
                                            },
                                            "commodities": {
                                                "current_available": "22,483 USD",
                                                "current_excess": "23,361 USD",
                                                "Prdctd Pst-xpry Excss": "0 USD",
                                                "Lk Ahd Avlbl Fnds": "18,342 USD",
                                                "Lk Ahd Excss Lqdty": "19,597 USD",
                                                "overnight_available": "18,342 USD",
                                                "overnight_excess": "19,597 USD"
                                            },
                                            "securities": {
                                                "current_available": "802,725 USD",
                                                "current_excess": "802,727 USD",
                                                "Prdctd Pst-xpry Excss": "0 USD",
                                                "SMA": "368,538 USD",
                                                "Lk Ahd Avlbl Fnds": "802,725 USD",
                                                "Lk Ahd Excss Lqdty": "802,727 USD",
                                                "overnight_available": "802,725 USD",
                                                "overnight_excess": "802,727 USD",
                                                "leverage": "1.43"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/IServerAccountBadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/summary/balances": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Summary Of Account Balances",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Pass the account identifier to receive information for.",
                            "example": "U1234567"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates a successful return of available funds.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summaryOfAccountBalancesResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "total": {
                                                "net_liquidation": "1,288,301 USD",
                                                "Nt Lqdtn Uncrtnty": "0 USD",
                                                "equity_with_loan": "1,279,520 USD",
                                                "Prvs Dy Eqty Wth Ln Vl": "1,275,902 USD",
                                                "Rg T Eqty Wth Ln Vl": "1,256,229 USD",
                                                "sec_gross_pos_val": "1,791,096 USD",
                                                "cash": "-401,693 USD",
                                                "MTD Interest": "-549 USD",
                                                "Pndng Dbt Crd Chrgs": "0 USD"
                                            },
                                            "Crypto at Paxos": {
                                                "net_liquidation": "0 USD",
                                                "equity_with_loan": "0 USD",
                                                "cash": "0 USD",
                                                "MTD Interest": "0 USD",
                                                "Pndng Dbt Crd Chrgs": "0 USD"
                                            },
                                            "commodities": {
                                                "net_liquidation": "32,072 USD",
                                                "equity_with_loan": "23,291 USD",
                                                "cash": "32,072 USD",
                                                "MTD Interest": "0 USD",
                                                "Pndng Dbt Crd Chrgs": "0 USD"
                                            },
                                            "securities": {
                                                "net_liquidation": "1,256,229 USD",
                                                "equity_with_loan": "1,256,229 USD",
                                                "Prvs Dy Eqty Wth Ln Vl": "1,275,902 USD",
                                                "Rg T Eqty Wth Ln Vl": "1,256,229 USD",
                                                "sec_gross_pos_val": "1,791,096 USD",
                                                "cash": "-433,765 USD",
                                                "MTD Interest": "-549 USD",
                                                "Pndng Dbt Crd Chrgs": "0 USD"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/IServerAccountBadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/summary/margins": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Summary Of Account Margin",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Pass the account identifier to receive information for.",
                            "example": "U1234567"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates a success request to receive margin balance values.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summaryOfAccountMarginResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "total": {
                                                "RegT Margin": "896,255 USD",
                                                "current_initial": "468,562 USD",
                                                "Prdctd Pst-xpry Mrgn @ Opn": "0 USD",
                                                "current_maint": "467,308 USD",
                                                "projected_liquidity_inital_margin": "468,562 USD",
                                                "Prjctd Lk Ahd Mntnnc Mrgn": "467,308 USD",
                                                "projected_overnight_initial_margin": "468,562 USD",
                                                "Prjctd Ovrnght Mntnnc Mrgn": "467,308 USD"
                                            },
                                            "Crypto at Paxos": {
                                                "current_initial": "0 USD",
                                                "Prdctd Pst-xpry Mrgn @ Opn": "0 USD",
                                                "current_maint": "0 USD",
                                                "projected_liquidity_inital_margin": "0 USD",
                                                "Prjctd Lk Ahd Mntnnc Mrgn": "0 USD",
                                                "projected_overnight_initial_margin": "0 USD",
                                                "Prjctd Ovrnght Mntnnc Mrgn": "0 USD"
                                            },
                                            "commodities": {
                                                "current_initial": "13,794 USD",
                                                "Prdctd Pst-xpry Mrgn @ Opn": "0 USD",
                                                "current_maint": "12,540 USD",
                                                "projected_liquidity_inital_margin": "13,794 USD",
                                                "Prjctd Lk Ahd Mntnnc Mrgn": "12,540 USD",
                                                "projected_overnight_initial_margin": "13,794 USD",
                                                "Prjctd Ovrnght Mntnnc Mrgn": "12,540 USD"
                                            },
                                            "securities": {
                                                "RegT Margin": "896,255 USD",
                                                "current_initial": "454,768 USD",
                                                "Prdctd Pst-xpry Mrgn @ Opn": "0 USD",
                                                "current_maint": "454,768 USD",
                                                "projected_liquidity_inital_margin": "454,768 USD",
                                                "Prjctd Lk Ahd Mntnnc Mrgn": "454,768 USD",
                                                "projected_overnight_initial_margin": "454,768 USD",
                                                "Prjctd Ovrnght Mntnnc Mrgn": "454,768 USD"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/IServerAccountBadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/account/{accountId}/summary/market_value": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Summary Of Account's Market Value",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Pass the account identifier to receive information for.",
                            "example": "U1234567"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Indicates a successful market value request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/summaryMarketValueResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "EUR": {
                                                "total_cash": "194",
                                                "settled_cash": "194",
                                                "MTD Interest": "0",
                                                "stock": "0",
                                                "options": "0",
                                                "futures": "0",
                                                "future_options": "0",
                                                "funds": "0",
                                                "dividends_receivable": "0",
                                                "mutual_funds": "0",
                                                "money_market": "0",
                                                "bonds": "0",
                                                "Govt Bonds": "0",
                                                "t_bills": "0",
                                                "warrants": "0",
                                                "issuer_option": "0",
                                                "commodity": "0",
                                                "Notional CFD": "0",
                                                "cfd": "0",
                                                "Cryptocurrency": "0",
                                                "net_liquidation": "194",
                                                "unrealized_pnl": "0",
                                                "realized_pnl": "0",
                                                "Exchange Rate": "1.092525"
                                            },
                                            "HKD": {
                                                "total_cash": "0",
                                                "settled_cash": "0",
                                                "MTD Interest": "0",
                                                "stock": "19,441",
                                                "options": "0",
                                                "futures": "0",
                                                "future_options": "0",
                                                "funds": "0",
                                                "dividends_receivable": "0",
                                                "mutual_funds": "0",
                                                "money_market": "0",
                                                "bonds": "0",
                                                "Govt Bonds": "0",
                                                "t_bills": "0",
                                                "warrants": "0",
                                                "issuer_option": "0",
                                                "commodity": "0",
                                                "Notional CFD": "0",
                                                "cfd": "0",
                                                "Cryptocurrency": "0",
                                                "net_liquidation": "19,441",
                                                "unrealized_pnl": "4,857",
                                                "realized_pnl": "0",
                                                "Exchange Rate": "0.1278515"
                                            },
                                            "JPY": {
                                                "total_cash": "14,781",
                                                "settled_cash": "14,781",
                                                "MTD Interest": "0",
                                                "stock": "0",
                                                "options": "0",
                                                "futures": "0",
                                                "future_options": "0",
                                                "funds": "0",
                                                "dividends_receivable": "0",
                                                "mutual_funds": "0",
                                                "money_market": "0",
                                                "bonds": "0",
                                                "Govt Bonds": "0",
                                                "t_bills": "0",
                                                "warrants": "0",
                                                "issuer_option": "0",
                                                "commodity": "0",
                                                "Notional CFD": "0",
                                                "cfd": "0",
                                                "Cryptocurrency": "0",
                                                "net_liquidation": "14,781",
                                                "unrealized_pnl": "0",
                                                "realized_pnl": "0",
                                                "Exchange Rate": "0.0068052"
                                            },
                                            "USD": {
                                                "total_cash": "-401,958",
                                                "settled_cash": "-401,958",
                                                "MTD Interest": "-549",
                                                "stock": "1,691,668",
                                                "options": "0",
                                                "futures": "-212",
                                                "future_options": "0",
                                                "funds": "0",
                                                "dividends_receivable": "0",
                                                "mutual_funds": "0",
                                                "money_market": "0",
                                                "bonds": "0",
                                                "Govt Bonds": "0",
                                                "t_bills": "0",
                                                "warrants": "0",
                                                "issuer_option": "0",
                                                "commodity": "0",
                                                "Notional CFD": "0",
                                                "cfd": "0",
                                                "Cryptocurrency": "0",
                                                "net_liquidation": "1,289,161",
                                                "unrealized_pnl": "253,275",
                                                "realized_pnl": "0",
                                                "Exchange Rate": "1.00"
                                            },
                                            "Total (in USD)": {
                                                "total_cash": "-401,646",
                                                "settled_cash": "-401,646",
                                                "MTD Interest": "-549",
                                                "stock": "1,694,154",
                                                "options": "0",
                                                "futures": "-212",
                                                "future_options": "0",
                                                "funds": "0",
                                                "dividends_receivable": "0",
                                                "mutual_funds": "0",
                                                "money_market": "0",
                                                "bonds": "0",
                                                "Govt Bonds": "0",
                                                "t_bills": "0",
                                                "warrants": "0",
                                                "issuer_option": "0",
                                                "commodity": "0",
                                                "Notional CFD": "0",
                                                "cfd": "0",
                                                "Cryptocurrency": "0",
                                                "net_liquidation": "1,291,959",
                                                "unrealized_pnl": "253,896",
                                                "realized_pnl": "0",
                                                "Exchange Rate": "1.00"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/IServerAccountBadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/accounts": {
            "get": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Receive Brokerage Accounts For The Current User.",
                "description": "Returns a list of accounts the user has trading access to, their respective aliases and the currently selected account. Note this endpoint must be called before modifying an order or querying open orders.",
                "responses": {
                    "200": {
                        "description": "An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userAccountsResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "accounts": [
                                                "All",
                                                "U1234567",
                                                "U2234567",
                                                "U3234567"
                                            ],
                                            "acctProps": {
                                                "All": {
                                                    "hasChildAccounts": false,
                                                    "supportsCashQty": false,
                                                    "supportsFractions": false
                                                },
                                                "U1234567": {
                                                    "hasChildAccounts": false,
                                                    "supportsCashQty": true,
                                                    "supportsFractions": true
                                                },
                                                "U2234567": {
                                                    "hasChildAccounts": false,
                                                    "supportsCashQty": true,
                                                    "supportsFractions": true
                                                },
                                                "U3234567": {
                                                    "hasChildAccounts": false,
                                                    "supportsCashQty": true,
                                                    "supportsFractions": true
                                                }
                                            },
                                            "aliases": {
                                                "All": "All",
                                                "U1234567": "U1234567",
                                                "U2234567": "U2234567",
                                                "U3234567": "U3234567"
                                            },
                                            "allowFeatures": {
                                                "showGFIS": true,
                                                "showEUCostReport": false,
                                                "allowEventContract": true,
                                                "allowFXConv": true,
                                                "allowFinancialLens": true,
                                                "allowMTA": false,
                                                "allowTypeAhead": true,
                                                "allowEventTrading": true,
                                                "snapshotRefreshTimeout": 30,
                                                "liteUser": false,
                                                "showWebNews": true,
                                                "research": true,
                                                "debugPnl": true,
                                                "showTaxOpt": true,
                                                "showImpactDashboard": true,
                                                "allowDynAccount": false,
                                                "allowCrypto": false,
                                                "allowFA": false,
                                                "allowLiteUnderPro": false,
                                                "allowedAssetTypes": "STK,CFD,OPT,FOP,WAR,FUT,BAG,PDC,CASH,IND,BOND,BILL,FUND,SLB,News,CMDTY,IOPT,ICU,ICS,PHYSS,CRYPTO"
                                            },
                                            "chartPeriods": {
                                                "STK": [
                                                    "*"
                                                ],
                                                "CFD": [
                                                    "*"
                                                ],
                                                "OPT": [
                                                    "2h",
                                                    "1d",
                                                    "2d",
                                                    "1w",
                                                    "1m"
                                                ],
                                                "FOP": [
                                                    "2h",
                                                    "1d",
                                                    "2d",
                                                    "1w",
                                                    "1m"
                                                ],
                                                "WAR": [
                                                    "*"
                                                ],
                                                "IOPT": [
                                                    "*"
                                                ],
                                                "FUT": [
                                                    "*"
                                                ],
                                                "CASH": [
                                                    "*"
                                                ],
                                                "IND": [
                                                    "*"
                                                ],
                                                "BOND": [
                                                    "*"
                                                ],
                                                "FUND": [
                                                    "*"
                                                ],
                                                "CMDTY": [
                                                    "*"
                                                ],
                                                "PHYSS": [
                                                    "*"
                                                ],
                                                "CRYPTO": [
                                                    "*"
                                                ]
                                            },
                                            "groups": [
                                                "All"
                                            ],
                                            "profiles": [],
                                            "selectedAccount": "U1234567",
                                            "serverInfo": {
                                                "serverName": "server",
                                                "serverVersion": "Build 99.99.9, May 22, 2020 4:19:22 PM"
                                            },
                                            "sessionId": "65ee8a41.0000001e",
                                            "isFT": false,
                                            "isPaper": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/auth/ssodh/init": {
            "post": {
                "tags": [
                    "Trading Session"
                ],
                "summary": "Initialize Brokerage Session.",
                "description": "After retrieving the access token and subsequent Live Session Token, customers can initialize their brokerage session with the ssodh/init endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/brokerageSessionInitRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/brokerageSessionStatus"
                                },
                                "example": {
                                    "success": {
                                        "value": {
                                            "authenticated": true,
                                            "competing": false,
                                            "connected": true,
                                            "message": "",
                                            "MAC": "98:F2:B3:23:BF:A0",
                                            "serverInfo": {
                                                "serverName": "JifN19053",
                                                "serverVersion": "Build 10.25.0p, Dec 5, 2023 5:48:12 PM"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/auth/status": {
            "post": {
                "tags": [
                    "Trading Session"
                ],
                "summary": "Brokerage Session Auth Status",
                "description": "Current Authentication status to the Brokerage system. Market Data and Trading is not possible if not authenticated.",
                "responses": {
                    "200": {
                        "description": "Detailed status of the Brokerage session",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/brokerageSessionStatus"
                                },
                                "example": {
                                    "success": {
                                        "value": {
                                            "authenticated": true,
                                            "competing": false,
                                            "connected": true,
                                            "message": "",
                                            "MAC": "12:B:B3:23:BF:A0",
                                            "serverInfo": {
                                                "serverName": "JifN19053",
                                                "serverVersion": "Build 10.25.0p, Dec 5, 2023 5:48:12 PM"
                                            },
                                            "fail": ""
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/contract/rules": {
            "post": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Search Contract Rules",
                "description": "Returns trading related rules for a specific contract and side.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "conid": {
                                        "type": "integer",
                                        "description": "Contract identifier for the interested contract.",
                                        "format": "int32"
                                    },
                                    "isBuy": {
                                        "type": "boolean",
                                        "description": "Side of the market rules apply too. Set to true for Buy Orders, set to false for Sell orders.",
                                        "default": true
                                    },
                                    "modifyOrder": {
                                        "type": "boolean",
                                        "description": "Used to find trading rules related to an existing order.",
                                        "default": false
                                    },
                                    "orderId": {
                                        "type": "integer",
                                        "description": "Specify the order identifier used for tracking a given order.",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contractRules"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "algoEligible": true,
                                            "overnightEligible": true,
                                            "costReport": false,
                                            "canTradeAcctIds": [
                                                "U1234567",
                                                "U1234568",
                                                "U1234569"
                                            ],
                                            "error": null,
                                            "orderTypes": [
                                                "limit",
                                                "midprice",
                                                "market",
                                                "stop",
                                                "stop_limit",
                                                "mit",
                                                "lit",
                                                "trailing_stop",
                                                "trailing_stop_limit",
                                                "relative",
                                                "marketonclose",
                                                "limitonclose"
                                            ],
                                            "ibAlgoTypes": [
                                                "limit",
                                                "stop_limit",
                                                "lit",
                                                "trailing_stop_limit",
                                                "relative",
                                                "marketonclose",
                                                "limitonclose"
                                            ],
                                            "fraqTypes": [
                                                "limit",
                                                "market",
                                                "stop",
                                                "stop_limit",
                                                "mit",
                                                "lit",
                                                "trailing_stop",
                                                "trailing_stop_limit"
                                            ],
                                            "forceOrderPreview": false,
                                            "cqtTypes": [
                                                "limit",
                                                "market",
                                                "stop",
                                                "stop_limit",
                                                "mit",
                                                "lit",
                                                "trailing_stop",
                                                "trailing_stop_limit"
                                            ],
                                            "orderDefaults": {
                                                "LMT": {
                                                    "LP": "198.22"
                                                }
                                            },
                                            "orderTypesOutside": [
                                                "limit",
                                                "stop_limit",
                                                "lit",
                                                "trailing_stop_limit",
                                                "relative"
                                            ],
                                            "defaultSize": 100,
                                            "cashSize": 0.0,
                                            "sizeIncrement": 100,
                                            "tifTypes": [
                                                "IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a",
                                                "GTC/o,a",
                                                "OPG/LIMIT,MARKET,a",
                                                "GTD/o,a",
                                                "DAY/o,a"
                                            ],
                                            "tifDefaults": {
                                                "TIF": "DAY",
                                                "DEFAULT_ACCT": "U1234567",
                                                "SIZE": "100.00",
                                                "PMALGO": true
                                            },
                                            "limitPrice": 198.22,
                                            "stopprice": 198.22,
                                            "orderOrigination": null,
                                            "preview": true,
                                            "displaySize": null,
                                            "fraqInt": 4,
                                            "cashCcy": "USD",
                                            "cashQtyIncr": 500,
                                            "priceMagnifier": null,
                                            "negativeCapable": false,
                                            "incrementType": 1,
                                            "incrementRules": [
                                                {
                                                    "lowerEdge": 0.0,
                                                    "increment": 0.01
                                                }
                                            ],
                                            "hasSecondary": true,
                                            "increment": 0.01,
                                            "incrementDigits": 2
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/contract/{conid}/algos": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Search Algo Params By Contract ID",
                "description": "Returns supported IB Algos for contract. A pre-flight request must be submitted before retrieving information",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Contract identifier for the requested contract of interest."
                        }
                    },
                    {
                        "name": "algos",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "List of algo ids delimited by “;” to filter by. Max of 8 algos ids can be specified. Case sensitive to algo id.\n",
                            "enum": [
                                "Adaptive",
                                "Vwap"
                            ]
                        }
                    },
                    {
                        "name": "addDescription",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Whether or not to add algo descriptions to response. Set to 1 for yes, 0 for no.",
                            "format": "int32",
                            "default": "0"
                        }
                    },
                    {
                        "name": "addParams",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Whether or not to show algo parameters. Set to 1 for yes, 0 for no.",
                            "format": "int32",
                            "default": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of available algos and a description of their behavior.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/algosResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "algos": [
                                                {
                                                    "name": "Adaptive",
                                                    "id": "Adaptive"
                                                },
                                                {
                                                    "name": "Arrival Price",
                                                    "id": "ArrivalPx"
                                                },
                                                {
                                                    "name": "Close Price",
                                                    "id": "ClosePx"
                                                },
                                                {
                                                    "name": "DarkIce",
                                                    "id": "DarkIce"
                                                },
                                                {
                                                    "name": "Percentage of Volume",
                                                    "id": "PctVol"
                                                },
                                                {
                                                    "name": "Price Variant Percentage of Volume",
                                                    "id": "PctVolPx"
                                                },
                                                {
                                                    "name": "Size Variant Percentage of Volume",
                                                    "id": "PctVolSz"
                                                },
                                                {
                                                    "name": "TWAP",
                                                    "id": "Twap"
                                                },
                                                {
                                                    "name": "Time Variant Percentage of Volume",
                                                    "id": "PctVolTm"
                                                },
                                                {
                                                    "name": "VWAP",
                                                    "id": "Vwap"
                                                }
                                            ]
                                        }
                                    },
                                    "success-with-additional-data": {
                                        "value": {
                                            "algos": [
                                                {
                                                    "name": "Adaptive",
                                                    "id": "Adaptive",
                                                    "parameters": [
                                                        {
                                                            "guiRank": 1,
                                                            "defaultValue": "Normal",
                                                            "name": "Adaptive order priority/urgency",
                                                            "id": "adaptivePriority",
                                                            "legalStrings": [
                                                                "Urgent",
                                                                "Normal",
                                                                "Patient"
                                                            ],
                                                            "required": "true",
                                                            "valueClassName": "String"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "Arrival Price",
                                                    "id": "ArrivalPx",
                                                    "parameters": [
                                                        {
                                                            "guiRank": 3,
                                                            "defaultValue": "Neutral",
                                                            "name": "Urgency/Risk aversion",
                                                            "id": "riskAversion",
                                                            "legalStrings": [
                                                                "GetDone",
                                                                "Aggressive",
                                                                "Neutral",
                                                                "Passive"
                                                            ],
                                                            "required": "true",
                                                            "valueClassName": "String"
                                                        },
                                                        {
                                                            "guiRank": 6,
                                                            "defaultValue": false,
                                                            "name": "Allow trading past end time",
                                                            "id": "allowPastEndTime",
                                                            "valueClassName": "Boolean"
                                                        },
                                                        {
                                                            "guiRank": 7,
                                                            "defaultValue": false,
                                                            "name": "Attempt completion by EOD",
                                                            "id": "forceCompletion",
                                                            "valueClassName": "Boolean"
                                                        },
                                                        {
                                                            "guiRank": 4,
                                                            "name": "Start Time",
                                                            "description": "Defaults to start of market trading",
                                                            "id": "startTime",
                                                            "valueClassName": "Time"
                                                        },
                                                        {
                                                            "guiRank": 2,
                                                            "minValue": 0.01,
                                                            "maxValue": 50,
                                                            "name": "Max Percentage",
                                                            "description": "From 0.01 to 50.0",
                                                            "id": "maxPctVol",
                                                            "required": "true",
                                                            "valueClassName": "Double"
                                                        },
                                                        {
                                                            "guiRank": 5,
                                                            "name": "End Time",
                                                            "description": "Defaults to end of market trading",
                                                            "id": "endTime",
                                                            "valueClassName": "Time"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/contract/{conid}/info": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Contract Information By Contract ID",
                "description": "Requests full contract details for the given conid.",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Contract identifier for the requested contract of interest.",
                            "example": "265598"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of available algos and a description of their behavior.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contractInfo"
                                },
                                "examples": {
                                    "stk-contract-info": {
                                        "value": {
                                            "cfi_code": "",
                                            "symbol": "IBM",
                                            "cusip": null,
                                            "expiry_full": null,
                                            "con_id": 8314,
                                            "maturity_date": null,
                                            "industry": "Computers",
                                            "instrument_type": "STK",
                                            "trading_class": "IBM",
                                            "valid_exchanges": "SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,NASDAQ,DRCTEDGE,BEX,BATS,EDGEA,BYX,NYSEDARK,NASDDARK,IEX,EDGX,FOXRIVER,PEARL,NYSENAT,IEXMID,JANELP,IMCLP,LTSE,MEMX,JUMPLP,OLDMCLP,RBCCMALP,IBEOS,GSLP,BLUEOCEAN,OVERNIGHT,JANEMID,G1XLP,PSX",
                                            "allow_sell_long": false,
                                            "is_zero_commission_security": false,
                                            "local_symbol": "IBM",
                                            "contract_clarification_type": null,
                                            "classifier": null,
                                            "currency": "USD",
                                            "text": null,
                                            "underlying_con_id": 0,
                                            "r_t_h": true,
                                            "multiplier": null,
                                            "underlying_issuer": null,
                                            "contract_month": null,
                                            "company_name": "INTL BUSINESS MACHINES CORP",
                                            "smart_available": true,
                                            "exchange": "SMART",
                                            "category": "Computer Services"
                                        }
                                    },
                                    "opt-contract-info": {
                                        "value": {
                                            "cfi_code": "OCXXXS",
                                            "symbol": "IBM",
                                            "cusip": null,
                                            "expiry_full": "20240315",
                                            "con_id": 685302909,
                                            "maturity_date": "20240315",
                                            "instrument_type": "OPT",
                                            "trading_class": "IBM",
                                            "valid_exchanges": "SMART,AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,IBUSOPT",
                                            "allow_sell_long": false,
                                            "is_zero_commission_security": false,
                                            "local_symbol": "IBM   240315C00187500",
                                            "contract_clarification_type": null,
                                            "classifier": null,
                                            "currency": "USD",
                                            "text": "MAR 15 '24 187.5 Call",
                                            "underlying_con_id": 8314,
                                            "r_t_h": false,
                                            "multiplier": "100",
                                            "strike": "187.5",
                                            "right": "CALL",
                                            "underlying_issuer": null,
                                            "contract_month": "202403",
                                            "company_name": "INTL BUSINESS MACHINES CORP",
                                            "smart_available": true,
                                            "exchange": "SMART"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/contract/{conid}/info-and-rules": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Contract Information And Rules By Contract ID",
                "description": "Requests full contract details for the given conid.",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Contract identifier for the requested contract of interest.",
                            "example": "265598"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of available algos and a description of their behavior.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/contractInfo"
                                        },
                                        {
                                            "properties": {
                                                "rules": {
                                                    "$ref": "#/components/schemas/contractRules"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "examples": {
                                    "stk": {
                                        "value": {
                                            "cfi_code": "",
                                            "symbol": "IBM",
                                            "cusip": null,
                                            "expiry_full": null,
                                            "con_id": 8314,
                                            "maturity_date": null,
                                            "industry": "Computers",
                                            "instrument_type": "STK",
                                            "trading_class": "IBM",
                                            "valid_exchanges": "SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,NASDAQ,DRCTEDGE,BEX,BATS,EDGEA,BYX,NYSEDARK,NASDDARK,IEX,EDGX,FOXRIVER,PEARL,NYSENAT,IEXMID,JANELP,IMCLP,LTSE,MEMX,JUMPLP,OLDMCLP,RBCCMALP,IBEOS,GSLP,BLUEOCEAN,OVERNIGHT,JANEMID,G1XLP,PSX",
                                            "allow_sell_long": false,
                                            "is_zero_commission_security": false,
                                            "local_symbol": "IBM",
                                            "contract_clarification_type": null,
                                            "classifier": null,
                                            "currency": "USD",
                                            "text": null,
                                            "underlying_con_id": 0,
                                            "r_t_h": true,
                                            "multiplier": null,
                                            "underlying_issuer": null,
                                            "contract_month": null,
                                            "company_name": "INTL BUSINESS MACHINES CORP",
                                            "smart_available": true,
                                            "exchange": "SMART",
                                            "category": "Computer Services",
                                            "rules": {
                                                "algoEligible": true,
                                                "overnightEligible": true,
                                                "costReport": false,
                                                "canTradeAcctIds": [
                                                    "DUC10000"
                                                ],
                                                "error": null,
                                                "orderTypes": [
                                                    "limit",
                                                    "midprice",
                                                    "market",
                                                    "stop",
                                                    "stop_limit",
                                                    "mit",
                                                    "lit",
                                                    "trailing_stop",
                                                    "trailing_stop_limit",
                                                    "relative",
                                                    "marketonclose",
                                                    "limitonclose"
                                                ],
                                                "ibAlgoTypes": [
                                                    "limit",
                                                    "stop_limit",
                                                    "lit",
                                                    "trailing_stop_limit",
                                                    "relative",
                                                    "marketonclose",
                                                    "limitonclose"
                                                ],
                                                "fraqTypes": [
                                                    "limit",
                                                    "market",
                                                    "stop",
                                                    "stop_limit",
                                                    "mit",
                                                    "lit",
                                                    "trailing_stop",
                                                    "trailing_stop_limit"
                                                ],
                                                "forceOrderPreview": false,
                                                "cqtTypes": [
                                                    "limit",
                                                    "market",
                                                    "stop",
                                                    "stop_limit",
                                                    "mit",
                                                    "lit",
                                                    "trailing_stop",
                                                    "trailing_stop_limit"
                                                ],
                                                "orderDefaults": {
                                                    "MKT": {}
                                                },
                                                "orderTypesOutside": [
                                                    "limit",
                                                    "stop_limit",
                                                    "lit",
                                                    "trailing_stop_limit",
                                                    "relative"
                                                ],
                                                "defaultSize": 100,
                                                "cashSize": 0.0,
                                                "sizeIncrement": 100,
                                                "tifTypes": [
                                                    "IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a",
                                                    "GTC/o,a",
                                                    "OPG/LIMIT,MARKET,a",
                                                    "GTD/o,a",
                                                    "DAY/o,a"
                                                ],
                                                "tifDefaults": {
                                                    "TIF": "DAY",
                                                    "SIZE": "100.00"
                                                },
                                                "limitPrice": 196.88,
                                                "stopprice": 196.88,
                                                "orderOrigination": null,
                                                "preview": true,
                                                "displaySize": null,
                                                "fraqInt": 4,
                                                "cashCcy": "USD",
                                                "cashQtyIncr": 500,
                                                "priceMagnifier": null,
                                                "negativeCapable": false,
                                                "incrementType": 1,
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.01
                                                    }
                                                ],
                                                "hasSecondary": true,
                                                "increment": 0.01,
                                                "incrementDigits": 2
                                            }
                                        }
                                    },
                                    "option": {
                                        "value": {
                                            "cfi_code": "OCXXXS",
                                            "symbol": "IBM",
                                            "cusip": null,
                                            "expiry_full": "20240315",
                                            "con_id": 685302909,
                                            "maturity_date": "20240315",
                                            "instrument_type": "OPT",
                                            "trading_class": "IBM",
                                            "valid_exchanges": "SMART,AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,IBUSOPT",
                                            "allow_sell_long": false,
                                            "is_zero_commission_security": false,
                                            "local_symbol": "IBM   240315C00187500",
                                            "contract_clarification_type": null,
                                            "classifier": null,
                                            "currency": "USD",
                                            "text": "MAR 15 '24 187.5 Call",
                                            "underlying_con_id": 8314,
                                            "r_t_h": false,
                                            "multiplier": "100",
                                            "strike": "187.5",
                                            "right": "CALL",
                                            "underlying_issuer": null,
                                            "contract_month": "202403",
                                            "company_name": "INTL BUSINESS MACHINES CORP",
                                            "smart_available": true,
                                            "exchange": "SMART",
                                            "rules": {
                                                "algoEligible": true,
                                                "overnightEligible": false,
                                                "costReport": false,
                                                "canTradeAcctIds": [
                                                    "DUC10000"
                                                ],
                                                "error": null,
                                                "orderTypes": [
                                                    "limit",
                                                    "market",
                                                    "stop",
                                                    "stop_limit",
                                                    "mit",
                                                    "lit",
                                                    "trailing_stop",
                                                    "trailing_stop_limit",
                                                    "relative"
                                                ],
                                                "ibAlgoTypes": [
                                                    "limit",
                                                    "stop_limit",
                                                    "lit",
                                                    "trailing_stop_limit",
                                                    "relative"
                                                ],
                                                "fraqTypes": [],
                                                "forceOrderPreview": false,
                                                "cqtTypes": [],
                                                "orderDefaults": {
                                                    "LMT": {
                                                        "LP": "empty"
                                                    }
                                                },
                                                "orderTypesOutside": [],
                                                "defaultSize": 1,
                                                "cashSize": 0.0,
                                                "sizeIncrement": 1,
                                                "tifTypes": [
                                                    "IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a",
                                                    "GTC/o,a",
                                                    "GTD/o,a",
                                                    "DAY/o,a"
                                                ],
                                                "tifDefaults": {
                                                    "TIF": "DAY",
                                                    "SIZE": "1.00"
                                                },
                                                "limitPrice": null,
                                                "stopprice": null,
                                                "orderOrigination": null,
                                                "preview": true,
                                                "displaySize": null,
                                                "fraqInt": 0,
                                                "cashCcy": "USD",
                                                "cashQtyIncr": null,
                                                "priceMagnifier": null,
                                                "negativeCapable": false,
                                                "incrementType": 1,
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.01
                                                    }
                                                ],
                                                "hasSecondary": true,
                                                "increment": 0.01,
                                                "incrementDigits": 2
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/currency/pairs": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "description": "Obtains available currency pairs corresponding to the given target currency.",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify the target currency you would like to receive official pairs of.",
                            "example": "USD"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of valid forex pairs for the given currency. The currency can apply as both the target or base currency.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/currencyPairs"
                                },
                                "examples": {
                                    "USD": {
                                        "value": {
                                            "USD": [
                                                {
                                                    "symbol": "USD.SGD",
                                                    "conid": 37928772,
                                                    "ccyPair": "SGD"
                                                },
                                                {
                                                    "symbol": "USD.RON",
                                                    "conid": 38231133,
                                                    "ccyPair": "RON"
                                                },
                                                {
                                                    "symbol": "USD.CZK",
                                                    "conid": 34838409,
                                                    "ccyPair": "CZK"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/dynaccount": {
            "post": {
                "tags": [
                    "Trading Accounts"
                ],
                "summary": "Set Dynamic Account",
                "description": "Set the active dynamic account.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "acctId"
                                ],
                                "type": "object",
                                "properties": {
                                    "acctId": {
                                        "type": "string",
                                        "description": "The account ID that should be set for future requests.",
                                        "example": "U1234567"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/setAccountResponse"
                                },
                                "examples": {
                                    "successfully-set-account": {
                                        "value": {
                                            "set": true,
                                            "acctId": "U2234567"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/exchangerate": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Currency Exchange Rate",
                "description": "Obtains the exchange rates of the currency pair.",
                "parameters": [
                    {
                        "name": "target",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify the quote currency to request data for.",
                            "example": "EUR"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify the base currency to request data for.",
                            "example": "USD"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful requests return the currency exchange rate of the target currency value divided by the source currency.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rate": {
                                            "type": "number",
                                            "description": "Returns the exchange rate for the currency pair."
                                        }
                                    }
                                },
                                "examples": {
                                    "rate": {
                                        "value": {
                                            "rate": 0.91324199
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/marketdata/history": {
            "get": {
                "tags": [
                    "Trading Market Data"
                ],
                "summary": "Request Historical Data For An Instrument In The Form Of OHLC Bars.",
                "description": "Request historical data for an instrument in the form of OHLC bars.",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "query",
                        "description": "IB contract ID of the requested instrument.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "265598"
                        }
                    },
                    {
                        "name": "exchange",
                        "in": "query",
                        "description": "Exchange (or SMART) from which data is requested.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "NYSE"
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "A time duration away from startTime into the future to be divided into bars of the specified width.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "6d"
                        }
                    },
                    {
                        "name": "bar",
                        "in": "query",
                        "description": "The width of the bars into which the interval determined by period and startTime will be divided. It is not required that bar evenly divide period; partial bars can be returned.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "5mins"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "A fixed UTC date-time reference point for the historical data request, from which the specified period extends. Format is YYYYMMDD-hh:mm:ss. If omitted, the current time is used, and direction must be omitted or 1.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/utcDateTime"
                        }
                    },
                    {
                        "name": "outsideRth",
                        "in": "query",
                        "description": "Indicates whether data outside of regular trading hours should be included in response.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical data query successfully returned data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/iserverHistoryResponse"
                                },
                                "examples": {
                                    "iserverHistorySuccessExample": {
                                        "value": {
                                            "serverid": "20477",
                                            "symbol": "AAPL",
                                            "text": "APPLE INC",
                                            "priceFactor": 100,
                                            "startTime": "20230818-08:00:00",
                                            "high": "17510/472117.45/0",
                                            "low": "17170/472117.45/0",
                                            "timePeriod": "1d",
                                            "barLength": 86400,
                                            "mdAvailability": "RpB",
                                            "outsideRth": false,
                                            "tradingDayDuration": 1440,
                                            "volumeFactor": 1,
                                            "priceDisplayRule": 1,
                                            "priceDisplayValue": "2",
                                            "chartPanStartTime": "20230821-13:30:00",
                                            "direction": -1,
                                            "negativeCapable": false,
                                            "messageVersion": 2,
                                            "travelTime": 48,
                                            "data": [
                                                {
                                                    "t": 1692345600000,
                                                    "o": 173.4,
                                                    "c": 174.7,
                                                    "h": 175.1,
                                                    "l": 171.7,
                                                    "v": 472117.45
                                                }
                                            ],
                                            "points": 1,
                                            "mktDataDelay": 0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/marketdata/snapshot": {
            "get": {
                "tags": [
                    "Trading Market Data"
                ],
                "summary": "Live Market Data Snapshot",
                "description": "Get Market Data for the given conid(s). A pre-flight request must be made prior to ever receiving data. For some fields, it may take more than a few moments to receive information. See response fields for a list of available fields that can be request via fields argument. The endpoint /iserver/accounts must be called prior to /iserver/marketdata/snapshot. For derivative contracts the endpoint /iserver/secdef/search must be called first.\n",
                "parameters": [
                    {
                        "name": "conids",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Contract identifier for the contract of interest. May provide a comma-separated series of contract identifiers.\n",
                            "format": "int32",
                            "example": "265598"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "$ref": "#/components/schemas/mdFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully enabled or disabled your email notifications.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fyiVT"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/marketdata/unsubscribe": {
            "post": {
                "tags": [
                    "Trading Market Data"
                ],
                "summary": "Instruct IServer To Close Its Backend Stream For The Instrument.",
                "description": "Instruct IServer to close its backend stream for the instrument when real-time snapshots are no longer needed.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "conid": {
                                        "type": "integer",
                                        "description": "The IB contract ID of the instrument whose market data feed is to be unsubscribed.",
                                        "format": "int32",
                                        "example": 265598
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Acknowledges a successful request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "description": "The sole key 'success' will have boolean value true.",
                                            "enum": [
                                                "true"
                                            ]
                                        }
                                    },
                                    "description": "Acknowledges a successful request."
                                },
                                "examples": {
                                    "marketdataUnsubscribeSuccessExample": {
                                        "value": {
                                            "success": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/marketdata/unsubscribeall": {
            "get": {
                "tags": [
                    "Trading Market Data"
                ],
                "summary": "Instruct IServer To Close All Of Its Open Backend Data Streams For All Instruments.",
                "description": "Instruct IServer to close all of its open backend data streams for all instruments.",
                "responses": {
                    "200": {
                        "description": "Indicates a successful request to unsubscribe all streams.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "unsubscribed": {
                                            "type": "boolean",
                                            "description": "The sole key 'unsubscribed' will have boolean value true.",
                                            "enum": [
                                                "true"
                                            ]
                                        }
                                    },
                                    "description": "Indicates a successful request to unsubscribe all streams."
                                },
                                "examples": {
                                    "marketdataUnsubscribeAllSuccessExample": {
                                        "value": {
                                            "unsubscribed": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/notification": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Respond To A Server Prompt.",
                "description": "Respond to a server prompt received via ntf webscoket message.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "orderId": {
                                        "type": "integer",
                                        "description": "IB-assigned order identifier obtained from the ntf websocket message that delivered the server prompt.",
                                        "format": "int32",
                                        "example": 987654321
                                    },
                                    "reqId": {
                                        "type": "string",
                                        "description": "IB-assigned request identifier obtained from the ntf websocket message that delivered the server prompt.",
                                        "example": "12345"
                                    },
                                    "text": {
                                        "type": "string",
                                        "description": "The selected value from the \"options\" array delivered in the server prompt ntf websocket message.",
                                        "example": "Yes"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Status of submitted prompt",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "description": "Confirms successful reply to the server prompt."
                                }
                            }
                        }
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/questions/suppress": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Suppress The Specified Order Reply Messages.",
                "description": "Suppress the specified order reply messages for the duration of the brokerage session.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "messageIds": {
                                        "type": "array",
                                        "description": "Array of order reply messageId identifier strings to be suppressed.",
                                        "items": {
                                            "type": "string",
                                            "description": "A single order reply message messageId.",
                                            "example": "o354"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request's status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Confirms the successful suppression of specified messageIds. Always returns \"Submitted\"."
                                        }
                                    },
                                    "description": "Confirms successful reply to the server prompt."
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": "submitted"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/questions/suppress/reset": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Removes Suppression Of All Order Reply Messages.",
                "description": "Removes suppression of all order reply messages that were previously suppressed in the current brokerage session.",
                "responses": {
                    "200": {
                        "description": "Request's status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "Confirms the successful removal of suppression. Always returns \"Submitted\"."
                                        }
                                    },
                                    "description": "Confirms successful removal of suppression."
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": "submitted"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/reauthenticate": {
            "get": {
                "tags": [
                    "Trading Session"
                ],
                "summary": "Re-authenticate The Brokerage Session",
                "description": "When using the CP Gateway, this endpoint provides a way to reauthenticate to the Brokerage system as long as there is a valid brokerage session.",
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Indicates that the reauthenticate action was performed successfully."
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "message": "triggered"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/reply/{replyId}": {
            "post": {
                "tags": [
                    "Trading Orders"
                ],
                "summary": "Confirm An Order Reply Message.",
                "description": "Confirm an order reply message and continue with submission of order ticket.",
                "parameters": [
                    {
                        "name": "replyId",
                        "in": "path",
                        "description": "The UUID of the reply message to be confirmed, obtained from an order submission response.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "99097238-9824-4830-84ef-46979aa22593"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "confirmed": {
                                        "type": "boolean",
                                        "description": "Value of true answers the question in the affirmative and proceeds with order submission."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Status of reply",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/orderSubmitSuccess"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderReplyMessage"
                                        },
                                        {
                                            "$ref": "#/components/schemas/orderSubmitError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/advancedOrderReject"
                                        }
                                    ]
                                },
                                "examples": {
                                    "orderSubmitSuccessExample": {
                                        "value": [
                                            {
                                                "order_id": "1370093239",
                                                "order_status": "PreSubmitted",
                                                "encrypt_message": "1"
                                            }
                                        ]
                                    },
                                    "orderReplyMessageExample": {
                                        "value": [
                                            {
                                                "id": "99097238-9824-4830-84ef-46979aa22593",
                                                "isSuppressed": false,
                                                "message": [
                                                    "You are submitting an order without market data. We strongly recommend against this as it may result in erroneous and unexpected trades.\nAre you sure you want to submit this order?"
                                                ],
                                                "messageIds": [
                                                    "o354"
                                                ]
                                            }
                                        ]
                                    },
                                    "orderSubmitErrorExample": {
                                        "value": {
                                            "error": "Order not confirmed "
                                        }
                                    },
                                    "orderReplyNotFoundExample": {
                                        "value": {
                                            "error": "reply id not found: '99097238-9824-4830-84ef-46979aa22593'"
                                        }
                                    },
                                    "advancedOrderRejectPromptExample": {
                                        "value": {
                                            "orderId": 123456789,
                                            "reqId": "22170",
                                            "dismissable": [],
                                            "text": "If your order is not immediately executable, our systems may, depending on market conditions, reject your order if its limit price is more that the allowed amount away from the reference price at that time. If this happens, you will not receive a fill. This is a control designed to ensure that we comply with our regulatory obligations to avoid submitting disruptive orders to the marketplace.\nUse the Price Management Algo?",
                                            "options": [
                                                "Use on this order",
                                                "Always use",
                                                "Do not use"
                                            ],
                                            "type": "M",
                                            "messageId": "p12",
                                            "prompt": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/scanner/params": {
            "get": {
                "tags": [
                    "Trading Scanner"
                ],
                "summary": "Iserver Scanner Parameters",
                "description": "Returns an xml file containing all available parameters to be sent for the Iserver scanner request.",
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/iserverScannerParams"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "scan_type_list": [
                                                {
                                                    "display_name": "Top % Gainers",
                                                    "code": "TOP_PERC_GAIN",
                                                    "instruments": [
                                                        "STK",
                                                        "ETF.EQ.US",
                                                        "ETF.FI.US",
                                                        "FUT.US",
                                                        "IND.US",
                                                        "STOCK.NA",
                                                        "FUT.NA",
                                                        "SSF.NA",
                                                        "STOCK.EU",
                                                        "FUT.EU",
                                                        "IND.EU",
                                                        "SSF.EU",
                                                        "STOCK.ME",
                                                        "STOCK.HK",
                                                        "FUT.HK",
                                                        "IND.HK",
                                                        "SSF.HK"
                                                    ]
                                                }
                                            ],
                                            "instrument_list": [
                                                {
                                                    "display_name": "US Stocks",
                                                    "type": "STK",
                                                    "filters": [
                                                        "afterHoursChange",
                                                        "afterHoursChangePerc",
                                                        "avgOptVolume",
                                                        "avgPriceTarget",
                                                        "avgRating"
                                                    ]
                                                }
                                            ],
                                            "filter_list": [
                                                {
                                                    "group": "afterHoursChangeAbove",
                                                    "display_name": "After-Hours Change Above",
                                                    "code": "afterHoursChangeAbove",
                                                    "type": "non-range"
                                                },
                                                {
                                                    "group": "stkTypes",
                                                    "display_name": "Stock type",
                                                    "code": "stkTypes",
                                                    "combo_values": [
                                                        {
                                                            "default": true,
                                                            "vendor": null
                                                        }
                                                    ]
                                                }
                                            ],
                                            "location_tree": [
                                                {
                                                    "display_name": "US Stocks",
                                                    "type": "STK",
                                                    "locations": [
                                                        {
                                                            "display_name": "Listed/NASDAQ",
                                                            "type": "STK.US.MAJOR",
                                                            "locations": []
                                                        },
                                                        {
                                                            "display_name": "OTCMarkets",
                                                            "type": "STK.US.MINOR",
                                                            "locations": []
                                                        }
                                                    ]
                                                },
                                                {
                                                    "display_name": "US Futures",
                                                    "type": "FUT.US",
                                                    "locations": [
                                                        {
                                                            "display_name": "CME",
                                                            "type": "FUT.CME"
                                                        },
                                                        {
                                                            "display_name": "CBOT",
                                                            "type": "FUT.CBOT"
                                                        },
                                                        {
                                                            "display_name": "NYMEX",
                                                            "type": "FUT.NYMEX"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/scanner/run": {
            "post": {
                "tags": [
                    "Trading Scanner"
                ],
                "summary": "Iserver Market Scanner",
                "description": "Searches for contracts according to the filters specified in /iserver/scanner/params endpoint.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/iserverScannerRunRequest"
                            },
                            "example": {
                                "instrument": "STK",
                                "location": "STK.US.MAJOR",
                                "type": "TOP_TRADE_COUNT",
                                "filter": [
                                    {
                                        "code": "priceAbove",
                                        "value": 5
                                    }
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/iserverScannerRunResponse"
                                },
                                "examples": {
                                    "top_trade_count": {
                                        "value": {
                                            "contracts": [
                                                {
                                                    "server_id": "0",
                                                    "column_name": "Trades",
                                                    "symbol": "TSLA",
                                                    "conidex": "76792991",
                                                    "con_id": 76792991,
                                                    "available_chart_periods": "#R|1",
                                                    "company_name": "TESLA INC",
                                                    "scan_data": "221.521K",
                                                    "contract_description_1": "TSLA",
                                                    "listing_exchange": "NASDAQ.NMS",
                                                    "sec_type": "STK"
                                                },
                                                {
                                                    "server_id": "1",
                                                    "symbol": "SPY",
                                                    "conidex": "756733",
                                                    "con_id": 756733,
                                                    "available_chart_periods": "#R|1",
                                                    "company_name": "SPDR S&P 500 ETF TRUST",
                                                    "scan_data": "123.661K",
                                                    "contract_description_1": "SPY",
                                                    "listing_exchange": "ARCA",
                                                    "sec_type": "STK"
                                                }
                                            ],
                                            "scan_data_column_name": "Trades"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/secdef/bond-filters": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Search Bond Filter Information",
                "description": "Request a list of filters relating to a given Bond issuerID. The issuerId is retrieved from /iserver/secdef/search and can be used in /iserver/secdef/info?issuerId={issuerId} for retrieving conIds.",
                "parameters": [
                    {
                        "name": "symbol",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "This should always be set to “BOND”",
                            "example": "BOND"
                        }
                    },
                    {
                        "name": "issueId",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specifies the issuerId value used to designate the bond issuer type.",
                            "example": "e1400715"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful requests return the currency exchange rate of the target currency value divided by the source currency.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bondFiltersResponse"
                                },
                                "examples": {
                                    "bond-filter": {
                                        "value": {
                                            "bondFilters": [
                                                {
                                                    "displayText": "Maturity Date",
                                                    "columnId": 27,
                                                    "options": [
                                                        {
                                                            "text": "Jan 2025",
                                                            "value": "202501"
                                                        },
                                                        {
                                                            "text": "Dec 2028",
                                                            "value": "202812"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "displayText": "Issue Date",
                                                    "columnId": 28,
                                                    "options": [
                                                        {
                                                            "text": "Sep 18 2014",
                                                            "value": "20140918"
                                                        },
                                                        {
                                                            "text": "Apr 09 2015",
                                                            "value": "20150409"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "displayText": "Coupon",
                                                    "columnId": 25,
                                                    "options": [
                                                        {
                                                            "value": "1.301"
                                                        },
                                                        {
                                                            "value": "1.34"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "displayText": "Currency",
                                                    "columnId": 5,
                                                    "options": [
                                                        {
                                                            "value": "EUR"
                                                        },
                                                        {
                                                            "value": "USD"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/secdef/info": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "SecDef Info",
                "description": "SecDef info",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Contract identifier of the underlying. May also pass the final derivative conid directly.",
                            "example": "265598"
                        }
                    },
                    {
                        "name": "sectype",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Security type of the requested contract of interest."
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Expiration month for the given derivative."
                        }
                    },
                    {
                        "name": "exchange",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Designate the exchange you wish to receive information for in relation to the contract."
                        }
                    },
                    {
                        "name": "strike",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Set the strike price for the requested contract details"
                        }
                    },
                    {
                        "name": "right",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Set the right for the given contract. * `C` - for Call options. * `P` - for Put options.\n",
                            "enum": [
                                "C",
                                "P"
                            ]
                        }
                    },
                    {
                        "name": "issuerId",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Set the issuerId for the given bond issuer type.",
                            "example": "“e1234567”"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "comma separted list of additional filters. Applicable when SecTyp is BOND"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing a contract's security definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/secDefInfoResponse"
                                },
                                "examples": {
                                    "infoBy-symbol-exchange-conid": {
                                        "value": {
                                            "conid": 8314,
                                            "ticker": "IBM",
                                            "secType": "STK",
                                            "listingExchange": "NYSE",
                                            "exchange": "SMART",
                                            "companyName": "INTL BUSINESS MACHINES CORP",
                                            "currency": "USD",
                                            "validExchanges": "SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,NASDAQ,DRCTEDGE,BEX,BATS,EDGEA,BYX,NYSEDARK,NASDDARK,IEX,EDGX,FOXRIVER,PEARL,NYSENAT,IEXMID,JANELP,IMCLP,LTSE,MEMX,JUMPLP,OLDMCLP,RBCCMALP,IBEOS,GSLP,BLUEOCEAN,OVERNIGHT,JANEMID,G1XLP,PSX",
                                            "priceRendering": null,
                                            "maturityDate": null,
                                            "right": "?",
                                            "strike": 0.0
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/secdef/search": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Returns A List Of Contracts Based On Symbol.",
                "description": "Returns a list of contracts based on the search symbol provided as a query param.",
                "parameters": [
                    {
                        "name": "symbol",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "The ticker symbol, bond issuer type, or company name of the equity you are looking to trade.",
                            "example": "AAPL"
                        }
                    },
                    {
                        "name": "secType",
                        "in": "query",
                        "description": "Available underlying security types:\n  * `STK` - Represents an underlying as a Stock security type.\n  * `IND` - Represents an underlying as an Index security type.\n  * `BOND` - Represents an underlying as a Bond security type.\n",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "default": "STK",
                            "enum": [
                                "STK",
                                "IND",
                                "BOND"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Denotes if the symbol value is the ticker symbol or part of the company's name."
                        }
                    },
                    {
                        "name": "more",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "fund",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean",
                            "description": "fund search"
                        }
                    },
                    {
                        "name": "fundFamilyConidEx",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pattern",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "boolean",
                            "description": "pattern search"
                        }
                    },
                    {
                        "name": "referrer",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/secdefSearchResponse"
                                },
                                "examples": {
                                    "found": {
                                        "value": [
                                            {
                                                "conid": "8314",
                                                "companyHeader": "INTL BUSINESS MACHINES CORP - NYSE",
                                                "companyName": "INTL BUSINESS MACHINES CORP",
                                                "symbol": "IBM",
                                                "description": "NYSE",
                                                "restricted": null,
                                                "fop": null,
                                                "opt": "20240315;20240322;20240328;20240405;20240412;20240419;20240426;20240517;20240621;20240719;20240920;20241018;20250117;20250620;20260116",
                                                "war": "20240208;20240213;20240214;20240215;20240216;20240222;20240226;20240227;20240228;20240229;20240301;20240304;20240305;20240306;20240307;20240308;20240311;20240312;20240313;20240314;20240315;20240416;20240418;20240514;20240516;20240618;20240619;20240620;20240621;20240718;20240917;20240918;20240919;20240920;20241017;20241217;20241218;20241219;20241220;20250114;20250115;20250116;20250117;20250319;20250320;20250617;20250618;20250619;20250620;20250918;20251216;20251218;20260113;20260115",
                                                "sections": [
                                                    {
                                                        "secType": "STK"
                                                    },
                                                    {
                                                        "secType": "OPT",
                                                        "months": "MAR24;APR24;MAY24;JUN24;JUL24;SEP24;OCT24;JAN25;JUN25;JAN26",
                                                        "exchange": "SMART;AMEX;BATS;BOX;CBOE;CBOE2;EDGX;EMERALD;GEMINI;IBUSOPT;ISE;MEMX;MERCURY;MIAX;NASDAQBX;NASDAQOM;PEARL;PHLX;PSE"
                                                    },
                                                    {
                                                        "secType": "WAR",
                                                        "months": "FEB24;MAR24;APR24;MAY24;JUN24;JUL24;SEP24;OCT24;DEC24;JAN25;MAR25;JUN25;SEP25;DEC25;JAN26",
                                                        "exchange": "EBS;FWB;GETTEX;SBF;SWB"
                                                    },
                                                    {
                                                        "secType": "IOPT"
                                                    },
                                                    {
                                                        "secType": "CFD",
                                                        "exchange": "SMART",
                                                        "conid": "118239202"
                                                    },
                                                    {
                                                        "secType": "BAG"
                                                    }
                                                ]
                                            },
                                            {
                                                "conid": "41645598",
                                                "companyHeader": "INTL BUSINESS MACHINES CORP - LSE",
                                                "companyName": "INTL BUSINESS MACHINES CORP",
                                                "symbol": "IBM",
                                                "description": "LSE",
                                                "restricted": null,
                                                "fop": null,
                                                "opt": null,
                                                "war": null,
                                                "sections": [
                                                    {
                                                        "secType": "STK"
                                                    }
                                                ]
                                            },
                                            {
                                                "issuers": [
                                                    {
                                                        "id": "e5499005",
                                                        "name": "IBM International Capital Pte Ltd"
                                                    },
                                                    {
                                                        "id": "e1580374",
                                                        "name": "IBM-CALL"
                                                    },
                                                    {
                                                        "id": "e1400789",
                                                        "name": "International Business Machines Corp"
                                                    },
                                                    {
                                                        "id": "e1658116",
                                                        "name": "Truven Health Analytics Inc"
                                                    }
                                                ],
                                                "bondid": 5,
                                                "conid": "2147483647",
                                                "companyHeader": "Corporate Fixed Income",
                                                "companyName": null,
                                                "symbol": null,
                                                "description": null,
                                                "restricted": null,
                                                "fop": null,
                                                "opt": null,
                                                "war": null,
                                                "sections": [
                                                    {
                                                        "secType": "BOND"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            },
            "post": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Returns A List Of Contracts Based On Symbol.",
                "description": "Returns a list of contracts based on the search symbol provided as a query param.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "symbol"
                                ],
                                "type": "object",
                                "properties": {
                                    "symbol": {
                                        "type": "string",
                                        "description": "The ticker symbol, bond issuer type, or company name of the equity you are looking to trade.",
                                        "example": "AAPL"
                                    },
                                    "secType": {
                                        "type": "string",
                                        "description": "Available underlying security types:\n  * `STK` - Represents an underlying as a Stock security type.\n  * `IND` - Represents an underlying as an Index security type.\n  * `BOND` - Represents an underlying as a Bond security type.\n",
                                        "default": "STK",
                                        "enum": [
                                            "STK",
                                            "IND",
                                            "BOND"
                                        ]
                                    },
                                    "name": {
                                        "type": "boolean",
                                        "description": "Denotes if the symbol value is the ticker symbol or part of the company's name."
                                    },
                                    "more": {
                                        "type": "boolean"
                                    },
                                    "fund": {
                                        "type": "boolean",
                                        "description": "fund search"
                                    },
                                    "fundFamilyConidEx": {
                                        "type": "string"
                                    },
                                    "pattern": {
                                        "type": "boolean",
                                        "description": "pattern search"
                                    },
                                    "referrer": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/secdefSearchResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/secdef/strikes": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Get Strikes",
                "description": "strikes",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Contract identifier of the underlying. May also pass the final derivative conid directly.",
                            "example": "265598"
                        }
                    },
                    {
                        "name": "sectype",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Security type of the requested contract of interest.",
                            "example": "OPT"
                        }
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Expiration month for the given derivative.",
                            "example": "JAN24"
                        }
                    },
                    {
                        "name": "exchange",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Exchange from which derivatives should be retrieved from.",
                            "example": "NASDAQ",
                            "default": "SMART"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing a contract's security definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "call": {
                                            "type": "array",
                                            "description": "Array containing a series of comma separated values representing potential call strikes for the instrument.",
                                            "items": {
                                                "type": "number",
                                                "description": "strike price"
                                            }
                                        },
                                        "put": {
                                            "type": "array",
                                            "description": "Array containing a series of comma separated values representing potential put strikes for the instrument.",
                                            "items": {
                                                "type": "number",
                                                "description": "strike price"
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "strikes": {
                                        "value": {
                                            "call": [
                                                70.0,
                                                75.0,
                                                80.0,
                                                85.0,
                                                90.0,
                                                95.0,
                                                100.0
                                            ],
                                            "put": [
                                                70.0,
                                                75.0,
                                                80.0,
                                                85.0,
                                                90.0,
                                                95.0,
                                                100.0
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/watchlist": {
            "get": {
                "tags": [
                    "Trading Watchlists"
                ],
                "summary": "Retrieve Details Of A Single Watchlist Stored In The Username's Settings.",
                "description": "Retrieve details of a single watchlist stored in the username's settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Watchlist ID of the requested watchlist.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion of specified watchlist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/singleWatchlist"
                                },
                                "examples": {
                                    "singleWatchlistExample": {
                                        "value": {
                                            "id": "1234",
                                            "hash": "1234987651621",
                                            "name": "Test Watchlist",
                                            "readOnly": false,
                                            "instruments": [
                                                {
                                                    "ST": "STK",
                                                    "C": "8314",
                                                    "conid": 8314,
                                                    "name": "INTL BUSINESS MACHINES CORP",
                                                    "fullName": "IBM",
                                                    "assetClass": "STK",
                                                    "ticker": "IBM",
                                                    "chineseName": ""
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            },
            "post": {
                "tags": [
                    "Trading Watchlists"
                ],
                "summary": "Create A Watchlist To Monitor A Set Of Instruments.",
                "description": "Create a named watchlist by submitting a set of conids.",
                "requestBody": {
                    "description": "Watchlist contents.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "rows"
                                ],
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "description": "Must be a number, digits 0-9 only. Must be unique relative to other watchlist IDs."
                                    },
                                    "name": {
                                        "type": "string",
                                        "description": "Arbitrary human-readable name to be displayed in TWS and Client Portal."
                                    },
                                    "rows": {
                                        "uniqueItems": true,
                                        "type": "array",
                                        "description": "Array of JSON objects corresponding to watchlist rows, one per instruments."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Watchlist creation successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The submitted watchlist ID."
                                        },
                                        "hash": {
                                            "type": "string",
                                            "description": "IB's internal hash of the submitted watchlist."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "The submitted human-readable watchlist name."
                                        },
                                        "readOnly": {
                                            "type": "boolean",
                                            "description": "Indicates whether watchlist is write-restricted. User-created watchlists will always show false."
                                        },
                                        "instruments": {
                                            "maxItems": 0,
                                            "type": "array",
                                            "description": "Array will always be empty. Contents can be queried via GET /iserver/watchlist?id=",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            },
            "delete": {
                "tags": [
                    "Trading Watchlists"
                ],
                "summary": "Delete A Specified Watchlist From The Username's Settings.",
                "description": "Delete a specified watchlist from the username's settings.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Watchlist ID of the watchlist to be deleted.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "1234"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion of specified watchlist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/watchlistDeleteSuccess"
                                },
                                "examples": {
                                    "watchlistDeleteSuccessExample": {
                                        "value": {
                                            "data": {
                                                "deleted": "1234"
                                            },
                                            "action": "context",
                                            "MID": "2"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/iserver/watchlists": {
            "get": {
                "tags": [
                    "Trading Watchlists"
                ],
                "summary": "Retrieve All Saved Watchlists Stored On IB Backend For The Username In Use In The Current Web API Session.",
                "description": "Retrieve all saved watchlists stored on IB backend for the username in use in the current Web API session.",
                "parameters": [
                    {
                        "name": "SC",
                        "in": "query",
                        "description": "Can only be used with value USER_WATCHLIST, which returns only user-created watchlists and excludes those created by IB.",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "USER_WATCHLIST",
                            "enum": [
                                "USER_WATCHLIST"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Historical data query successfully returned data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/watchlistsResponse"
                                },
                                "examples": {
                                    "watchlistDataExample": {
                                        "value": {
                                            "data": {
                                                "scanners_only": false,
                                                "show_scanners": false,
                                                "bulk_delete": false,
                                                "user_lists": [
                                                    {
                                                        "is_open": false,
                                                        "read_only": false,
                                                        "name": "Test Watchlist",
                                                        "modified": 1702581306241,
                                                        "id": "1234",
                                                        "type": "watchlist"
                                                    }
                                                ]
                                            },
                                            "action": "content",
                                            "MID": "2"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Trading Session"
                ],
                "summary": "Logout Of The Current Session.",
                "description": "Logs the user out of the gateway session. Any further activity requires re-authentication.",
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "description": "Confirms that the logout action was performed successfully."
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "status": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/md/regsnapshot": {
            "get": {
                "tags": [
                    "Trading Market Data"
                ],
                "summary": "Request A Regulatory Snapshot For An Instrument.",
                "description": "Request a regulatory snapshot for an instrument.",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "query",
                        "description": "An IB contract ID.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "int32",
                            "example": "265598"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Market Data reg. snapshot",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/regsnapshotData"
                                },
                                "examples": {
                                    "regsnapshotDataExample": {
                                        "value": {
                                            "conid": 265598,
                                            "conidEx": "265598",
                                            "sizeMinTick": 1.0,
                                            "BboExchange": "9c",
                                            "HasDelayed": false,
                                            "84": "174.58",
                                            "86": "174.59",
                                            "88": 1,
                                            "85": 3,
                                            "BestBidExch": 512,
                                            "BestAskExch": 512,
                                            "31": "174.59",
                                            "7059": 2,
                                            "LastExch": 8,
                                            "7057": "Q",
                                            "7068": "Q",
                                            "7058": "D"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/oauth/access_token": {
            "post": {
                "tags": [
                    "Trading OAuth 1.0a"
                ],
                "summary": "Request An Access Token For The IB Username That Has Granted Authorization To The Consumer.",
                "description": "Request an access token for the IB username that has granted authorization to the consumer.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth 1.0a authorization request header for request to /access_token endpoint.",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "OAuth oauth_verifier=\"1e1dc5666e87ca5a18e0\",oauth_token=\"e0d75b4c5c1d2c0f2af7\",oauth_consumer_key=\"TESTCONS\",oauth_nonce=\"v235...456h\",oauth_signature=\"af1%252...0nd2\",oauth_signature_method=\"RSA-SHA256\",oauth_timestamp=\"1714489450\",realm=\"test_realm\""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with permanent OAuth access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "is_true": {
                                            "type": "boolean",
                                            "description": "Indicates whether the authorizing username is paper or not."
                                        },
                                        "oauth_token": {
                                            "type": "string",
                                            "description": "Permanent OAuth access token for the consumer with respect to the authorizing username. 20 character hex value."
                                        },
                                        "oauth_token_secret": {
                                            "type": "string",
                                            "description": "OAuth token secret value. Base64-encoded string."
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "value": {
                                            "is_paper": true,
                                            "oauth_token": "a1b2c3d4e5f6a7b8c9d0",
                                            "oauth_token_secret": "coPZc+YOyFy7IdMg6is+etf9HASi3Um3SIhZvILcaifG6zhzZygYafYZx4XTFsrefRV/qrsy4sMAMwyPVp07VgkfQJPJkxYA7Sjhwz/Q76vuVN2YZNsRirNyL63Q3t+EHkjKA5HJEFY2PiIgqO4EWZ4etZUl3iZjCStiahhD+BNv7zgrlxS0bB4lL4vKw9AGcUiUnIQrqzTGJPj0/P2Zc3fMqCbXVWRcoYRcwUkk9ZYtMaIwPPVgvJ0c76rle5O5m4R4ZoFgrjfXpNiXC1F8MRS0fc7T6pgyyMvV+vI2C9XZbl7cNIEuCvtz3XYLNlUi+svyeZJh4RzjB824qH/fJQ=="
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/oauth/live_session_token": {
            "post": {
                "tags": [
                    "Trading OAuth 1.0a"
                ],
                "summary": "Generate A Live Session Token Shared Secret And Gain Access To Web API.",
                "description": "Generate a Live Session Token shared secret and gain access to Web API.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth 1.0a authorization request header for request to /live_session_token endpoint.",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "OAuth diffie_hellman_challenge=\"b393...g6f3\",oauth_token=\"56786fc07bcbabc4584\",oauth_consumer_key=\"TESTCONS\",oauth_nonce=\"v235...456h\",oauth_signature=\"af1%252...0nd2\",oauth_signature_method=\"RSA-SHA256\",oauth_timestamp=\"1714489460\",realm=\"test_realm\""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with Diffie-Hellman challenge and Signature value",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "diffie_hellman_challenge": {
                                            "type": "string",
                                            "description": "Diffie-Hellman challenge value used to compute live session token locally by client."
                                        },
                                        "live_session_token_signature": {
                                            "type": "string",
                                            "description": "Signature value used to validate successful client-side computation of live session token."
                                        },
                                        "live_session_token_expiration": {
                                            "type": "integer",
                                            "description": "Unix timestamp in milliseconds of time of live session token computation by IB. Live session tokens are valid for 24 hours from this time.",
                                            "format": "int32"
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "value": {
                                            "diffie_hellman_response": "74d222b7c3c0916eb3c7e60ecec937cd4f531aab5ea5698ebd754feeb39a9d7fe04c2887b5e11d8a8e4176c2eee7ddd42016e57c7a98cfbb9a3282c5247f7d4a9b8f544a34fac4d6334065b55d6a2e73e390175cfb94e80281443e555030c576d1db409bf96870dab20581bc01cdf28489778f20c714e7ad39af60c476cf2207a119df3af82bbefcdad7749fa5b4ae6e93169ec14f66ff3220cf3156487ca33932284b0a09af14f05a75269ab243362ff4eabb2e2a57db0d7911ca549f24affa1f92f04908fd9a2349cefb0f9326aca65fc144847ab837fcbd1635b1aa84b4509198e349fad87c2caf6744cb94be2c5c1c7ef9f08c44e85ded45ebeefa248dc8",
                                            "live_session_token_signature": "712549e22ba937ab10bc8d571bd3a9c20c43d7cb",
                                            "live_session_token_expiration": 1714669716258
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/oauth/request_token": {
            "post": {
                "tags": [
                    "Trading OAuth 1.0a"
                ],
                "summary": "Request A Temporary Token As A Third Party To Begin The OAuth 1.0a Authorization Workflow.",
                "description": "Request a temporary token as a third party to begin the OAuth 1.0a authorization workflow.",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "OAuth 1.0a authorization request header for request to /request_token endpoint.",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "OAuth oauth_callback=\"oob\",oauth_consumer_key=\"TESTCONS\",oauth_nonce=\"b249...8f57\",oauth_signature=\"41Sx%252...ZYZ2\",oauth_signature_method=\"RSA-SHA256\",oauth_timestamp=\"1714489440\",realm=\"test_realm\""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response with temporary OAuth access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "oauth_token": {
                                            "type": "string",
                                            "description": "Temporary OAuth access token. 20 character hex value."
                                        }
                                    }
                                },
                                "examples": {
                                    "Success": {
                                        "value": {
                                            "oauth_token": "e0d75b4c5c1d2c0f2af7"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/oauth2/api/v1/token": {
            "post": {
                "tags": [
                    "Authorization Token"
                ],
                "summary": "Create Access Token",
                "description": "Generate OAuth 2.0 access tokens based on request parameters.",
                "operationId": "generateToken",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns a token response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                },
                                "examples": {
                                    "Token Response": {
                                        "description": "Token Response",
                                        "value": {
                                            "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjM0MDk5YjQxYThkZTY1ZTJmNTAwMzQ3MmQ0M2Q5ZDBhZjI2MWIzN2IifQ.eyJpc3MiOiIvdG9rZW4iLCJzdWIiOiJwcm9kdGVzdGVyIiwiZXhwIjoxNzA5NzczMjgyLCJpYXQiOjE3MDk2ODY4ODIsInNjb3BlIjoiZWNoby5yZWFkIGVjaG8ud3JpdGUiLCJjc2lkIjoicHJvZHRlc3RlciIsImFjY291bnRJZCI6IlU0NjM3NyJ9.HDfltwI2xOYYnCRgjefujhU2h5lcQCvuvtNuCVSeq26IydAvMiv_QccmcBvsMSHKYjH6nvA1r_5f7R3Jsc46_d1YMArcFfE33mj_qj9GYml-B_8634vLdD104abB-DU2J4a7yW1YwN61hYwPGWueps_UsnKnxf-Iaj6ELxtPBRl4NOEC8vJZ9nfhL81t4L5N_f-skXbpcLcArZaBtxqXvI1z4ClJd9L1-9pJ_3DPUp0s3VHnDCnx2wBkLY_pPEcnP52Ms_gppSHLXn_x5OLL82kbxWSlhbX9fvogj0AtHJDvhWNwTFk8Az57MSsPBAZMf4rsx-LY1ZK9bNSlQNb2W-BuqotDwwPwIZNB9en_6p0KoJFFEQu0dTSJAxGjfMeADQc6ZduHFzyNeOTpnh2oPfRK7JrsLGuGvbQ_M7taKEiDV49gpYzjJqVtfuNDAzLARLbj8WPGcUbckSF4pJH5Ipm1FbYhp0DzEgo5VEjZlQU5ChlQGakF4nf9NEIz5Aed",
                                            "token_type": "Bearer",
                                            "scope": "echo.read echo.write",
                                            "expires_in": 86399
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Returns a [Problem detail](https://datatracker.ietf.org/doc/html/rfc9457) instance representing a bad request.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                },
                                "examples": {
                                    "Bad request": {
                                        "description": "Bad request",
                                        "value": {
                                            "type": "/simple",
                                            "title": "Bad Request",
                                            "status": 400
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Returns a [Problem detail](https://datatracker.ietf.org/doc/html/rfc9457) instance representing an internal server error.",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemDetailResponse"
                                },
                                "examples": {
                                    "Internal Server Error": {
                                        "description": "Internal Server Error",
                                        "value": {
                                            "type": "/simple",
                                            "title": "Internal Server Error",
                                            "status": 500
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-ib-public": true
            }
        },
        "/pa/allperiods": {
            "post": {
                "tags": [
                    "Trading Portfolio Analyst"
                ],
                "summary": "Account Performance (All Time Periods)",
                "description": "Returns the performance (MTM) for the given accounts, if more than one account is passed, the result is consolidated.",
                "parameters": [
                    {
                        "name": "param0",
                        "in": "path",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "only one account. If defined, accounts passed in request body ignored"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "acctIds": {
                                        "type": "array",
                                        "description": "An array of strings containing each account identifier to retrieve performance details for.",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/detailedContractInformation"
                                },
                                "examples": {
                                    "allperiods": {
                                        "value": {
                                            "currencyType": "base",
                                            "rc": 0,
                                            "view": [
                                                "DU123456"
                                            ],
                                            "nd": 368,
                                            "DU123456": {
                                                "1D": {
                                                    "nav": [
                                                        1390987.0689
                                                    ],
                                                    "cps": [
                                                        0.0072
                                                    ],
                                                    "freq": "D",
                                                    "dates": [
                                                        "20240426"
                                                    ],
                                                    "startNAV": {
                                                        "date": "20240425",
                                                        "val": 1381022.2557
                                                    }
                                                },
                                                "lastSuccessfulUpdate": "2024-04-26 16:46:42",
                                                "start": "20230426",
                                                "YTD": {
                                                    "nav": [
                                                        1282878.735,
                                                        1276778.8381,
                                                        1266973.7093,
                                                        1269544.0876,
                                                        1275904.7178,
                                                        1286495.4108,
                                                        1278482.2701,
                                                        1287268.6865,
                                                        1284200.338,
                                                        1288214.2064,
                                                        1287819.9539,
                                                        1277639.6851,
                                                        1270827.3223,
                                                        1278725.5502,
                                                        1300324.9852,
                                                        1306323.4495,
                                                        1312781.9571,
                                                        1318531.0656,
                                                        1350033.0327,
                                                        1345384.5102,
                                                        1353633.9766,
                                                        1363482.1133,
                                                        1333156.3611,
                                                        1344519.4922,
                                                        1376661.532,
                                                        1360247.6463,
                                                        1361492.1636,
                                                        1376329.6731,
                                                        1375083.087,
                                                        1385410.1315,
                                                        1389274.5528,
                                                        1357400.3407,
                                                        1375326.833,
                                                        1401881.315,
                                                        1392768.8561,
                                                        1392637.734,
                                                        1380291.0032,
                                                        1371910.9717,
                                                        1404606.7185,
                                                        1409284.2989,
                                                        1400208.3513,
                                                        1411555.9833,
                                                        1409076.0531,
                                                        1416808.8027,
                                                        1436450.7862,
                                                        1447601.0431,
                                                        1435855.0533,
                                                        1450679.9318,
                                                        1470146.1652,
                                                        1461837.0628,
                                                        1449412.6474,
                                                        1474938.4628,
                                                        1469694.3184,
                                                        1454799.0419,
                                                        1436627.4898,
                                                        1454960.951,
                                                        1463507.2659,
                                                        1484057.3961,
                                                        1492102.1686,
                                                        1482038.2329,
                                                        1470235.8767,
                                                        1470819.2095,
                                                        1492582.8971,
                                                        1491455.1209,
                                                        1491508.085,
                                                        1482332.7129,
                                                        1474991.5595,
                                                        1483721.5119,
                                                        1464972.9299,
                                                        1484912.3583,
                                                        1487204.0587,
                                                        1492210.8925,
                                                        1458260.3853,
                                                        1462342.5595,
                                                        1431112.3911,
                                                        1407166.8369,
                                                        1391683.8539,
                                                        1392370.552,
                                                        1393526.1221,
                                                        1387801.1381,
                                                        1405559.8818,
                                                        1436989.688,
                                                        1437102.1473,
                                                        1381022.2557,
                                                        1390987.0689
                                                    ],
                                                    "cps": [
                                                        0,
                                                        -0.0047,
                                                        -0.0124,
                                                        -0.0104,
                                                        -0.0054,
                                                        0.0028,
                                                        -0.0034,
                                                        0.0034,
                                                        0.0011,
                                                        0.0042,
                                                        0.0039,
                                                        -0.0041,
                                                        -0.0094,
                                                        -0.0032,
                                                        0.0136,
                                                        0.0183,
                                                        0.0233,
                                                        0.0278,
                                                        0.0524,
                                                        0.0487,
                                                        0.0552,
                                                        0.0629,
                                                        0.0392,
                                                        0.0481,
                                                        0.0731,
                                                        0.0603,
                                                        0.0613,
                                                        0.0729,
                                                        0.0719,
                                                        0.0799,
                                                        0.083,
                                                        0.0581,
                                                        0.0721,
                                                        0.0928,
                                                        0.0857,
                                                        0.0856,
                                                        0.076,
                                                        0.0694,
                                                        0.0949,
                                                        0.0986,
                                                        0.0915,
                                                        0.1003,
                                                        0.0984,
                                                        0.1044,
                                                        0.1197,
                                                        0.1284,
                                                        0.1193,
                                                        0.1308,
                                                        0.146,
                                                        0.1395,
                                                        0.1298,
                                                        0.1497,
                                                        0.1456,
                                                        0.134,
                                                        0.1199,
                                                        0.1342,
                                                        0.1408,
                                                        0.1568,
                                                        0.1631,
                                                        0.1553,
                                                        0.1461,
                                                        0.1465,
                                                        0.1635,
                                                        0.1626,
                                                        0.1627,
                                                        0.1555,
                                                        0.1498,
                                                        0.1566,
                                                        0.142,
                                                        0.1575,
                                                        0.1593,
                                                        0.1632,
                                                        0.1367,
                                                        0.1399,
                                                        0.1156,
                                                        0.0969,
                                                        0.0848,
                                                        0.0854,
                                                        0.0863,
                                                        0.0818,
                                                        0.0957,
                                                        0.1202,
                                                        0.1202,
                                                        0.0765,
                                                        0.0843
                                                    ],
                                                    "freq": "D",
                                                    "dates": [
                                                        "20240101",
                                                        "20240102",
                                                        "20240103",
                                                        "20240104",
                                                        "20240105",
                                                        "20240108",
                                                        "20240109",
                                                        "20240110",
                                                        "20240111",
                                                        "20240112",
                                                        "20240115",
                                                        "20240116",
                                                        "20240117",
                                                        "20240118",
                                                        "20240119",
                                                        "20240122",
                                                        "20240123",
                                                        "20240124",
                                                        "20240125",
                                                        "20240126",
                                                        "20240129",
                                                        "20240130",
                                                        "20240131",
                                                        "20240201",
                                                        "20240202",
                                                        "20240205",
                                                        "20240206",
                                                        "20240207",
                                                        "20240208",
                                                        "20240209",
                                                        "20240212",
                                                        "20240213",
                                                        "20240214",
                                                        "20240215",
                                                        "20240216",
                                                        "20240219",
                                                        "20240220",
                                                        "20240221",
                                                        "20240222",
                                                        "20240223",
                                                        "20240226",
                                                        "20240227",
                                                        "20240228",
                                                        "20240229",
                                                        "20240301",
                                                        "20240304",
                                                        "20240305",
                                                        "20240306",
                                                        "20240307",
                                                        "20240308",
                                                        "20240311",
                                                        "20240312",
                                                        "20240313",
                                                        "20240314",
                                                        "20240315",
                                                        "20240318",
                                                        "20240319",
                                                        "20240320",
                                                        "20240321",
                                                        "20240322",
                                                        "20240325",
                                                        "20240326",
                                                        "20240327",
                                                        "20240328",
                                                        "20240329",
                                                        "20240401",
                                                        "20240402",
                                                        "20240403",
                                                        "20240404",
                                                        "20240405",
                                                        "20240408",
                                                        "20240409",
                                                        "20240410",
                                                        "20240411",
                                                        "20240412",
                                                        "20240415",
                                                        "20240416",
                                                        "20240417",
                                                        "20240418",
                                                        "20240419",
                                                        "20240422",
                                                        "20240423",
                                                        "20240424",
                                                        "20240425",
                                                        "20240426"
                                                    ],
                                                    "startNAV": {
                                                        "date": "20231229",
                                                        "val": 1282850.7632
                                                    }
                                                },
                                                "1Y": {
                                                    "nav": [
                                                        916213.1573,
                                                        947269.6089,
                                                        957495.9273,
                                                        955827.7745,
                                                        945030.5846,
                                                        937034.669,
                                                        928754.0554,
                                                        966711.5611,
                                                        967389.5776,
                                                        958171.7378,
                                                        968999.679,
                                                        970048.1735,
                                                        963499.6734,
                                                        965791.2424,
                                                        963532.7739,
                                                        981634.443,
                                                        1005143.7157,
                                                        1002358.3303,
                                                        1000701.6307,
                                                        966850.2441,
                                                        949826.3976,
                                                        979748.679,
                                                        1020801.2545,
                                                        1020810.7858,
                                                        1027351.0593,
                                                        1013631.0401,
                                                        1043841.252,
                                                        1079472.9361,
                                                        1072348.7909,
                                                        1076122.1442,
                                                        1057999.0553,
                                                        1081493.9119,
                                                        1086998.9023,
                                                        1119712.8525,
                                                        1135057.1863,
                                                        1140719.4231,
                                                        1175913.8798,
                                                        1173456.2771,
                                                        1173458.3751,
                                                        1170939.8329,
                                                        1157357.8554,
                                                        1174615.5054,
                                                        1161957.1168,
                                                        1146875.9304,
                                                        1172947.5129,
                                                        1176243.4819,
                                                        1180671.7579,
                                                        1209491.0023,
                                                        1208051.9185,
                                                        1208018.29,
                                                        1203813.7206,
                                                        1194572.2962,
                                                        1187083.1646,
                                                        1183015.751,
                                                        1190356.9033,
                                                        1206352.2287,
                                                        1222304.6242,
                                                        1221731.1008,
                                                        1236119.3763,
                                                        1244943.4148,
                                                        1248331.8783,
                                                        1229579.7033,
                                                        1225350.3017,
                                                        1232537.895,
                                                        1240478.2895,
                                                        1243215.1302,
                                                        1234941.7912,
                                                        1258764.1477,
                                                        1259517.4519,
                                                        1252954.6541,
                                                        1219155.4535,
                                                        1211872.7998,
                                                        1178622.2902,
                                                        1184791.4229,
                                                        1177239.8994,
                                                        1156844.7885,
                                                        1160055.5323,
                                                        1155551.647,
                                                        1170445.4699,
                                                        1147560.6035,
                                                        1130397.7584,
                                                        1108620.771,
                                                        1108331.883,
                                                        1128641.2025,
                                                        1126759.2631,
                                                        1156201.1981,
                                                        1120833.8567,
                                                        1136963.447,
                                                        1152072.6413,
                                                        1186372.6307,
                                                        1199291.2264,
                                                        1200058.9789,
                                                        1204681.1211,
                                                        1204749.0158,
                                                        1199946.698,
                                                        1170716.1714,
                                                        1148620.0575,
                                                        1154500.6274,
                                                        1175364.1554,
                                                        1158630.8893,
                                                        1157174.688,
                                                        1176862.6911,
                                                        1149027.5087,
                                                        1156210.7572,
                                                        1156781.9906,
                                                        1143748.405,
                                                        1124417.1871,
                                                        1118011.7568,
                                                        1119608.026,
                                                        1102337.1466,
                                                        1104619.9248,
                                                        1111157.2948,
                                                        1104546.2216,
                                                        1100860.507,
                                                        1082379.2313,
                                                        1090984.4347,
                                                        1093382.3395,
                                                        1105517.8442,
                                                        1112047.3941,
                                                        1124779.1628,
                                                        1131944.9771,
                                                        1122238.3452,
                                                        1109917.279,
                                                        1121941.1344,
                                                        1130931.4126,
                                                        1115692.7848,
                                                        1095936.2795,
                                                        1078620.0409,
                                                        1071061.0639,
                                                        1075861.9248,
                                                        1062641.5816,
                                                        1066812.1892,
                                                        1057138.7199,
                                                        1072201.8379,
                                                        1083974.653,
                                                        1094762.4493,
                                                        1120068.6249,
                                                        1136226.7833,
                                                        1139142.0391,
                                                        1139870.183,
                                                        1136408.8642,
                                                        1127229.6653,
                                                        1145467.8808,
                                                        1143660.0272,
                                                        1174911.4923,
                                                        1182041.9386,
                                                        1183048.2116,
                                                        1188240.3654,
                                                        1196808.5753,
                                                        1190714.2398,
                                                        1195971.9157,
                                                        1196067.5419,
                                                        1196993.1964,
                                                        1193621.4641,
                                                        1194038.3211,
                                                        1200440.7278,
                                                        1205623.1522,
                                                        1218027.8577,
                                                        1212531.0881,
                                                        1209843.2572,
                                                        1205483.0953,
                                                        1214837.3879,
                                                        1224968.307,
                                                        1226119.552,
                                                        1231722.1001,
                                                        1250246.4796,
                                                        1269077.6522,
                                                        1261806.0171,
                                                        1270012.6578,
                                                        1275175.518,
                                                        1259197.468,
                                                        1269869.5619,
                                                        1275315.2064,
                                                        1275303.0074,
                                                        1284481.1929,
                                                        1286754.053,
                                                        1288020.332,
                                                        1282850.7632,
                                                        1282878.735,
                                                        1276778.8381,
                                                        1266973.7093,
                                                        1269544.0876,
                                                        1275904.7178,
                                                        1286495.4108,
                                                        1278482.2701,
                                                        1287268.6865,
                                                        1284200.338,
                                                        1288214.2064,
                                                        1287819.9539,
                                                        1277639.6851,
                                                        1270827.3223,
                                                        1278725.5502,
                                                        1300324.9852,
                                                        1306323.4495,
                                                        1312781.9571,
                                                        1318531.0656,
                                                        1350033.0327,
                                                        1345384.5102,
                                                        1353633.9766,
                                                        1363482.1133,
                                                        1333156.3611,
                                                        1344519.4922,
                                                        1376661.532,
                                                        1360247.6463,
                                                        1361492.1636,
                                                        1376329.6731,
                                                        1375083.087,
                                                        1385410.1315,
                                                        1389274.5528,
                                                        1357400.3407,
                                                        1375326.833,
                                                        1401881.315,
                                                        1392768.8561,
                                                        1392637.734,
                                                        1380291.0032,
                                                        1371910.9717,
                                                        1404606.7185,
                                                        1409284.2989,
                                                        1400208.3513,
                                                        1411555.9833,
                                                        1409076.0531,
                                                        1416808.8027,
                                                        1436450.7862,
                                                        1447601.0431,
                                                        1435855.0533,
                                                        1450679.9318,
                                                        1470146.1652,
                                                        1461837.0628,
                                                        1449412.6474,
                                                        1474938.4628,
                                                        1469694.3184,
                                                        1454799.0419,
                                                        1436627.4898,
                                                        1454960.951,
                                                        1463507.2659,
                                                        1484057.3961,
                                                        1492102.1686,
                                                        1482038.2329,
                                                        1470235.8767,
                                                        1470819.2095,
                                                        1492582.8971,
                                                        1491455.1209,
                                                        1491508.085,
                                                        1482332.7129,
                                                        1474991.5595,
                                                        1483721.5119,
                                                        1464972.9299,
                                                        1484912.3583,
                                                        1487204.0587,
                                                        1492210.8925,
                                                        1458260.3853,
                                                        1462342.5595,
                                                        1431112.3911,
                                                        1407166.8369,
                                                        1391683.8539,
                                                        1392370.552,
                                                        1393526.1221,
                                                        1387801.1381,
                                                        1405559.8818,
                                                        1436989.688,
                                                        1437102.1473,
                                                        1381022.2557,
                                                        1390987.0689
                                                    ],
                                                    "cps": [
                                                        9.0E-4,
                                                        0.0349,
                                                        0.046,
                                                        0.0442,
                                                        0.0324,
                                                        0.0237,
                                                        0.0146,
                                                        0.0561,
                                                        0.0569,
                                                        0.0468,
                                                        0.0586,
                                                        0.0598,
                                                        0.0526,
                                                        0.0551,
                                                        0.0526,
                                                        0.0724,
                                                        0.0981,
                                                        0.0951,
                                                        0.0933,
                                                        0.0563,
                                                        0.0377,
                                                        0.0704,
                                                        0.1152,
                                                        0.1152,
                                                        0.1224,
                                                        0.1074,
                                                        0.1404,
                                                        0.1793,
                                                        0.1715,
                                                        0.1756,
                                                        0.1558,
                                                        0.1815,
                                                        0.1875,
                                                        0.2233,
                                                        0.24,
                                                        0.2462,
                                                        0.2847,
                                                        0.282,
                                                        0.282,
                                                        0.2792,
                                                        0.2644,
                                                        0.2832,
                                                        0.2694,
                                                        0.2529,
                                                        0.2814,
                                                        0.285,
                                                        0.2899,
                                                        0.3213,
                                                        0.3198,
                                                        0.3197,
                                                        0.3151,
                                                        0.3051,
                                                        0.2969,
                                                        0.2924,
                                                        0.3004,
                                                        0.3179,
                                                        0.3353,
                                                        0.3347,
                                                        0.3504,
                                                        0.3601,
                                                        0.3638,
                                                        0.3433,
                                                        0.3387,
                                                        0.3465,
                                                        0.3552,
                                                        0.3582,
                                                        0.3492,
                                                        0.3752,
                                                        0.376,
                                                        0.3688,
                                                        0.3319,
                                                        0.324,
                                                        0.2876,
                                                        0.2944,
                                                        0.2861,
                                                        0.2638,
                                                        0.2673,
                                                        0.2624,
                                                        0.2787,
                                                        0.2537,
                                                        0.2349,
                                                        0.2112,
                                                        0.2108,
                                                        0.233,
                                                        0.231,
                                                        0.2631,
                                                        0.2245,
                                                        0.2421,
                                                        0.2586,
                                                        0.2961,
                                                        0.3102,
                                                        0.311,
                                                        0.3161,
                                                        0.3162,
                                                        0.3109,
                                                        0.279,
                                                        0.2548,
                                                        0.2613,
                                                        0.2841,
                                                        0.2658,
                                                        0.2642,
                                                        0.2857,
                                                        0.2553,
                                                        0.2631,
                                                        0.2638,
                                                        0.2495,
                                                        0.2284,
                                                        0.2214,
                                                        0.2232,
                                                        0.2043,
                                                        0.2068,
                                                        0.2139,
                                                        0.2067,
                                                        0.2027,
                                                        0.1825,
                                                        0.1919,
                                                        0.1945,
                                                        0.2078,
                                                        0.2149,
                                                        0.2288,
                                                        0.2366,
                                                        0.226,
                                                        0.2126,
                                                        0.2257,
                                                        0.2355,
                                                        0.2189,
                                                        0.1973,
                                                        0.1784,
                                                        0.1701,
                                                        0.1754,
                                                        0.1609,
                                                        0.1655,
                                                        0.1549,
                                                        0.1714,
                                                        0.1842,
                                                        0.196,
                                                        0.2237,
                                                        0.2413,
                                                        0.2445,
                                                        0.2453,
                                                        0.2415,
                                                        0.2315,
                                                        0.2514,
                                                        0.2494,
                                                        0.2836,
                                                        0.2914,
                                                        0.2925,
                                                        0.2981,
                                                        0.3075,
                                                        0.3008,
                                                        0.3066,
                                                        0.3067,
                                                        0.3077,
                                                        0.304,
                                                        0.3045,
                                                        0.3115,
                                                        0.3171,
                                                        0.3307,
                                                        0.3247,
                                                        0.3217,
                                                        0.317,
                                                        0.3272,
                                                        0.3383,
                                                        0.3395,
                                                        0.3456,
                                                        0.3659,
                                                        0.3864,
                                                        0.3785,
                                                        0.3875,
                                                        0.3931,
                                                        0.3757,
                                                        0.3873,
                                                        0.3933,
                                                        0.3932,
                                                        0.4033,
                                                        0.4058,
                                                        0.4071,
                                                        0.4015,
                                                        0.4015,
                                                        0.3949,
                                                        0.3841,
                                                        0.387,
                                                        0.3939,
                                                        0.4055,
                                                        0.3967,
                                                        0.4063,
                                                        0.403,
                                                        0.4074,
                                                        0.4069,
                                                        0.3958,
                                                        0.3884,
                                                        0.397,
                                                        0.4206,
                                                        0.4271,
                                                        0.4342,
                                                        0.4405,
                                                        0.4749,
                                                        0.4698,
                                                        0.4788,
                                                        0.4896,
                                                        0.4565,
                                                        0.4689,
                                                        0.504,
                                                        0.486,
                                                        0.4874,
                                                        0.5036,
                                                        0.5023,
                                                        0.5135,
                                                        0.5178,
                                                        0.4829,
                                                        0.5025,
                                                        0.5315,
                                                        0.5216,
                                                        0.5214,
                                                        0.5079,
                                                        0.4988,
                                                        0.5345,
                                                        0.5396,
                                                        0.5297,
                                                        0.5421,
                                                        0.5394,
                                                        0.5478,
                                                        0.5693,
                                                        0.5815,
                                                        0.5686,
                                                        0.5848,
                                                        0.6061,
                                                        0.597,
                                                        0.5835,
                                                        0.6113,
                                                        0.6056,
                                                        0.5893,
                                                        0.5695,
                                                        0.5895,
                                                        0.5989,
                                                        0.6213,
                                                        0.6301,
                                                        0.6191,
                                                        0.6062,
                                                        0.6068,
                                                        0.6306,
                                                        0.6294,
                                                        0.6294,
                                                        0.6194,
                                                        0.6114,
                                                        0.6209,
                                                        0.6005,
                                                        0.6222,
                                                        0.6247,
                                                        0.6302,
                                                        0.5931,
                                                        0.5976,
                                                        0.5635,
                                                        0.5373,
                                                        0.5204,
                                                        0.5211,
                                                        0.5224,
                                                        0.5162,
                                                        0.5356,
                                                        0.5699,
                                                        0.57,
                                                        0.5087,
                                                        0.5196
                                                    ],
                                                    "freq": "D",
                                                    "dates": [
                                                        "20230426",
                                                        "20230427",
                                                        "20230428",
                                                        "20230501",
                                                        "20230502",
                                                        "20230503",
                                                        "20230504",
                                                        "20230505",
                                                        "20230508",
                                                        "20230509",
                                                        "20230510",
                                                        "20230511",
                                                        "20230512",
                                                        "20230515",
                                                        "20230516",
                                                        "20230517",
                                                        "20230518",
                                                        "20230519",
                                                        "20230522",
                                                        "20230523",
                                                        "20230524",
                                                        "20230525",
                                                        "20230526",
                                                        "20230529",
                                                        "20230530",
                                                        "20230531",
                                                        "20230601",
                                                        "20230602",
                                                        "20230605",
                                                        "20230606",
                                                        "20230607",
                                                        "20230608",
                                                        "20230609",
                                                        "20230612",
                                                        "20230613",
                                                        "20230614",
                                                        "20230615",
                                                        "20230616",
                                                        "20230619",
                                                        "20230620",
                                                        "20230621",
                                                        "20230622",
                                                        "20230623",
                                                        "20230626",
                                                        "20230627",
                                                        "20230628",
                                                        "20230629",
                                                        "20230630",
                                                        "20230703",
                                                        "20230704",
                                                        "20230705",
                                                        "20230706",
                                                        "20230707",
                                                        "20230710",
                                                        "20230711",
                                                        "20230712",
                                                        "20230713",
                                                        "20230714",
                                                        "20230717",
                                                        "20230718",
                                                        "20230719",
                                                        "20230720",
                                                        "20230721",
                                                        "20230724",
                                                        "20230725",
                                                        "20230726",
                                                        "20230727",
                                                        "20230728",
                                                        "20230731",
                                                        "20230801",
                                                        "20230802",
                                                        "20230803",
                                                        "20230804",
                                                        "20230807",
                                                        "20230808",
                                                        "20230809",
                                                        "20230810",
                                                        "20230811",
                                                        "20230814",
                                                        "20230815",
                                                        "20230816",
                                                        "20230817",
                                                        "20230818",
                                                        "20230821",
                                                        "20230822",
                                                        "20230823",
                                                        "20230824",
                                                        "20230825",
                                                        "20230828",
                                                        "20230829",
                                                        "20230830",
                                                        "20230831",
                                                        "20230901",
                                                        "20230904",
                                                        "20230905",
                                                        "20230906",
                                                        "20230907",
                                                        "20230908",
                                                        "20230911",
                                                        "20230912",
                                                        "20230913",
                                                        "20230914",
                                                        "20230915",
                                                        "20230918",
                                                        "20230919",
                                                        "20230920",
                                                        "20230921",
                                                        "20230922",
                                                        "20230925",
                                                        "20230926",
                                                        "20230927",
                                                        "20230928",
                                                        "20230929",
                                                        "20231002",
                                                        "20231003",
                                                        "20231004",
                                                        "20231005",
                                                        "20231006",
                                                        "20231009",
                                                        "20231010",
                                                        "20231011",
                                                        "20231012",
                                                        "20231013",
                                                        "20231016",
                                                        "20231017",
                                                        "20231018",
                                                        "20231019",
                                                        "20231020",
                                                        "20231023",
                                                        "20231024",
                                                        "20231025",
                                                        "20231026",
                                                        "20231027",
                                                        "20231030",
                                                        "20231031",
                                                        "20231101",
                                                        "20231102",
                                                        "20231103",
                                                        "20231106",
                                                        "20231107",
                                                        "20231108",
                                                        "20231109",
                                                        "20231110",
                                                        "20231113",
                                                        "20231114",
                                                        "20231115",
                                                        "20231116",
                                                        "20231117",
                                                        "20231120",
                                                        "20231121",
                                                        "20231122",
                                                        "20231123",
                                                        "20231124",
                                                        "20231127",
                                                        "20231128",
                                                        "20231129",
                                                        "20231130",
                                                        "20231201",
                                                        "20231204",
                                                        "20231205",
                                                        "20231206",
                                                        "20231207",
                                                        "20231208",
                                                        "20231211",
                                                        "20231212",
                                                        "20231213",
                                                        "20231214",
                                                        "20231215",
                                                        "20231218",
                                                        "20231219",
                                                        "20231220",
                                                        "20231221",
                                                        "20231222",
                                                        "20231225",
                                                        "20231226",
                                                        "20231227",
                                                        "20231228",
                                                        "20231229",
                                                        "20240101",
                                                        "20240102",
                                                        "20240103",
                                                        "20240104",
                                                        "20240105",
                                                        "20240108",
                                                        "20240109",
                                                        "20240110",
                                                        "20240111",
                                                        "20240112",
                                                        "20240115",
                                                        "20240116",
                                                        "20240117",
                                                        "20240118",
                                                        "20240119",
                                                        "20240122",
                                                        "20240123",
                                                        "20240124",
                                                        "20240125",
                                                        "20240126",
                                                        "20240129",
                                                        "20240130",
                                                        "20240131",
                                                        "20240201",
                                                        "20240202",
                                                        "20240205",
                                                        "20240206",
                                                        "20240207",
                                                        "20240208",
                                                        "20240209",
                                                        "20240212",
                                                        "20240213",
                                                        "20240214",
                                                        "20240215",
                                                        "20240216",
                                                        "20240219",
                                                        "20240220",
                                                        "20240221",
                                                        "20240222",
                                                        "20240223",
                                                        "20240226",
                                                        "20240227",
                                                        "20240228",
                                                        "20240229",
                                                        "20240301",
                                                        "20240304",
                                                        "20240305",
                                                        "20240306",
                                                        "20240307",
                                                        "20240308",
                                                        "20240311",
                                                        "20240312",
                                                        "20240313",
                                                        "20240314",
                                                        "20240315",
                                                        "20240318",
                                                        "20240319",
                                                        "20240320",
                                                        "20240321",
                                                        "20240322",
                                                        "20240325",
                                                        "20240326",
                                                        "20240327",
                                                        "20240328",
                                                        "20240329",
                                                        "20240401",
                                                        "20240402",
                                                        "20240403",
                                                        "20240404",
                                                        "20240405",
                                                        "20240408",
                                                        "20240409",
                                                        "20240410",
                                                        "20240411",
                                                        "20240412",
                                                        "20240415",
                                                        "20240416",
                                                        "20240417",
                                                        "20240418",
                                                        "20240419",
                                                        "20240422",
                                                        "20240423",
                                                        "20240424",
                                                        "20240425",
                                                        "20240426"
                                                    ],
                                                    "startNAV": {
                                                        "date": "20230425",
                                                        "val": 915345.2059
                                                    }
                                                },
                                                "periods": [
                                                    "1D",
                                                    "7D",
                                                    "MTD",
                                                    "1M",
                                                    "YTD",
                                                    "1Y"
                                                ],
                                                "end": "20240426",
                                                "MTD": {
                                                    "nav": [
                                                        1482332.7129,
                                                        1474991.5595,
                                                        1483721.5119,
                                                        1464972.9299,
                                                        1484912.3583,
                                                        1487204.0587,
                                                        1492210.8925,
                                                        1458260.3853,
                                                        1462342.5595,
                                                        1431112.3911,
                                                        1407166.8369,
                                                        1391683.8539,
                                                        1392370.552,
                                                        1393526.1221,
                                                        1387801.1381,
                                                        1405559.8818,
                                                        1436989.688,
                                                        1437102.1473,
                                                        1381022.2557,
                                                        1390987.0689
                                                    ],
                                                    "cps": [
                                                        -0.0062,
                                                        -0.0111,
                                                        -0.0052,
                                                        -0.0178,
                                                        -0.0044,
                                                        -0.0029,
                                                        5.0E-4,
                                                        -0.0223,
                                                        -0.0196,
                                                        -0.0405,
                                                        -0.0565,
                                                        -0.0669,
                                                        -0.0665,
                                                        -0.0657,
                                                        -0.0695,
                                                        -0.0576,
                                                        -0.0366,
                                                        -0.0365,
                                                        -0.0741,
                                                        -0.0674
                                                    ],
                                                    "freq": "D",
                                                    "dates": [
                                                        "20240401",
                                                        "20240402",
                                                        "20240403",
                                                        "20240404",
                                                        "20240405",
                                                        "20240408",
                                                        "20240409",
                                                        "20240410",
                                                        "20240411",
                                                        "20240412",
                                                        "20240415",
                                                        "20240416",
                                                        "20240417",
                                                        "20240418",
                                                        "20240419",
                                                        "20240422",
                                                        "20240423",
                                                        "20240424",
                                                        "20240425",
                                                        "20240426"
                                                    ],
                                                    "startNAV": {
                                                        "date": "20240329",
                                                        "val": 1491508.085
                                                    }
                                                },
                                                "1M": {
                                                    "nav": [
                                                        1470819.2095,
                                                        1492582.8971,
                                                        1491455.1209,
                                                        1491508.085,
                                                        1482332.7129,
                                                        1474991.5595,
                                                        1483721.5119,
                                                        1464972.9299,
                                                        1484912.3583,
                                                        1487204.0587,
                                                        1492210.8925,
                                                        1458260.3853,
                                                        1462342.5595,
                                                        1431112.3911,
                                                        1407166.8369,
                                                        1391683.8539,
                                                        1392370.552,
                                                        1393526.1221,
                                                        1387801.1381,
                                                        1405559.8818,
                                                        1436989.688,
                                                        1437102.1473,
                                                        1381022.2557,
                                                        1390987.0689
                                                    ],
                                                    "cps": [
                                                        4.0E-4,
                                                        0.0152,
                                                        0.0144,
                                                        0.0145,
                                                        0.0082,
                                                        0.0032,
                                                        0.0092,
                                                        -0.0036,
                                                        0.01,
                                                        0.0115,
                                                        0.0149,
                                                        -0.0081,
                                                        -0.0054,
                                                        -0.0266,
                                                        -0.0429,
                                                        -0.0534,
                                                        -0.053,
                                                        -0.0522,
                                                        -0.0561,
                                                        -0.044,
                                                        -0.0226,
                                                        -0.0225,
                                                        -0.0607,
                                                        -0.0539
                                                    ],
                                                    "freq": "D",
                                                    "dates": [
                                                        "20240326",
                                                        "20240327",
                                                        "20240328",
                                                        "20240329",
                                                        "20240401",
                                                        "20240402",
                                                        "20240403",
                                                        "20240404",
                                                        "20240405",
                                                        "20240408",
                                                        "20240409",
                                                        "20240410",
                                                        "20240411",
                                                        "20240412",
                                                        "20240415",
                                                        "20240416",
                                                        "20240417",
                                                        "20240418",
                                                        "20240419",
                                                        "20240422",
                                                        "20240423",
                                                        "20240424",
                                                        "20240425",
                                                        "20240426"
                                                    ],
                                                    "startNAV": {
                                                        "date": "20240325",
                                                        "val": 1470235.8767
                                                    }
                                                },
                                                "7D": {
                                                    "nav": [
                                                        1405559.8818,
                                                        1436989.688,
                                                        1437102.1473,
                                                        1381022.2557,
                                                        1390987.0689
                                                    ],
                                                    "cps": [
                                                        0.0128,
                                                        0.0354,
                                                        0.0355,
                                                        -0.0049,
                                                        0.0023
                                                    ],
                                                    "freq": "D",
                                                    "dates": [
                                                        "20240422",
                                                        "20240423",
                                                        "20240424",
                                                        "20240425",
                                                        "20240426"
                                                    ],
                                                    "startNAV": {
                                                        "date": "20240419",
                                                        "val": 1387801.1381
                                                    }
                                                },
                                                "baseCurrency": "USD"
                                            },
                                            "id": "getPerformanceAllPeriods",
                                            "included": [
                                                "DU123456"
                                            ],
                                            "pm": "TWR"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/pa/performance": {
            "post": {
                "tags": [
                    "Trading Portfolio Analyst"
                ],
                "summary": "Account Performance",
                "description": "Returns the performance (MTM) for the given accounts, if more than one account is passed, the result is consolidated.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "acctIds": {
                                        "type": "array",
                                        "description": "An array of strings containing each account identifier to retrieve performance details for."
                                    },
                                    "period": {
                                        "type": "string",
                                        "description": "Specify the period for which the account should be analyzed. Available period lengths:\n  * `1D` - The last 24 hours.\n  * `7D` - The last 7 full days.\n  * `MTD` - Performance since the 1st of the month.\n  * `1M` - A full calendar month from the last full trade day.\n  * `3M` - 3 full calendar months from the last full trade day.\n  * `6M` - 6 full calendar months from the last full trade day.\n  * `12M` - 12 full calendar month from the last full trade day.\n  * `YTD` - Performance since January 1st.\n",
                                        "default": "12M",
                                        "enum": [
                                            "1D",
                                            "7D",
                                            "MTD",
                                            "1M",
                                            "3M",
                                            "6M",
                                            "12M",
                                            "YTD"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/performanceResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "currencyType": "base",
                                            "rc": 0,
                                            "nav": {
                                                "data": [
                                                    {
                                                        "idType": "acctid",
                                                        "navs": [
                                                            2.027673321223E8,
                                                            2.157185988239E8
                                                        ],
                                                        "start": "20230102",
                                                        "end": "20231213",
                                                        "id": "U1234567",
                                                        "startNAV": {
                                                            "date": "20221230",
                                                            "val": 2.027677613449E8
                                                        },
                                                        "baseCurrency": "USD"
                                                    }
                                                ],
                                                "freq": "D",
                                                "dates": [
                                                    "20230102",
                                                    "20231213"
                                                ]
                                            },
                                            "nd": 346,
                                            "cps": {
                                                "data": [
                                                    {
                                                        "idType": "acctid",
                                                        "start": "20230102",
                                                        "end": "20231213",
                                                        "returns": [
                                                            0,
                                                            0.0639
                                                        ],
                                                        "id": "U1234567",
                                                        "baseCurrency": "USD"
                                                    }
                                                ],
                                                "freq": "D",
                                                "dates": [
                                                    "20230102",
                                                    "20231213"
                                                ]
                                            },
                                            "tpps": {
                                                "data": [
                                                    {
                                                        "idType": "acctid",
                                                        "start": "20230102",
                                                        "end": "20231213",
                                                        "returns": [
                                                            0.0037,
                                                            0.0031,
                                                            0.0033,
                                                            0.0034,
                                                            0.02,
                                                            0.0127,
                                                            0.0036,
                                                            0.0036,
                                                            0.0034,
                                                            0.0012,
                                                            0.0026,
                                                            0.0017
                                                        ],
                                                        "id": "U1234567",
                                                        "baseCurrency": "USD"
                                                    }
                                                ],
                                                "freq": "M",
                                                "dates": [
                                                    "202301",
                                                    "202302",
                                                    "202303",
                                                    "202304",
                                                    "202305",
                                                    "202306",
                                                    "202307",
                                                    "202308",
                                                    "202309",
                                                    "202310",
                                                    "202311",
                                                    "202312"
                                                ]
                                            },
                                            "id": "getPerformanceData",
                                            "included": [
                                                "U1234567"
                                            ],
                                            "pm": "TWR"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/pa/transactions": {
            "post": {
                "tags": [
                    "Trading Portfolio Analyst"
                ],
                "summary": "Transaction History",
                "description": "Transaction history for a given number of conids and accounts. Types of transactions include dividend payments, buy and sell transactions, transfers.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "acctIds": {
                                        "type": "array",
                                        "description": "Include each account ID as a string to receive data for."
                                    },
                                    "conids": {
                                        "type": "array",
                                        "description": "Include contract ID to receive data for.  Conids may be passed as integers or strings. Only supports one contract id at a time.\n"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "description": "Define the currency to display price amounts with.",
                                        "default": "USD"
                                    },
                                    "days": {
                                        "type": "integer",
                                        "description": "Specify the number of days to receive transaction data for.",
                                        "format": "int32",
                                        "default": 90
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/transactionsResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "rc": 0,
                                            "nd": 4,
                                            "rpnl": {
                                                "data": [
                                                    {
                                                        "date": "20231211",
                                                        "cur": "USD",
                                                        "fxRate": 1,
                                                        "side": "L",
                                                        "acctid": "U1234567",
                                                        "amt": "12.2516",
                                                        "conid": "265598"
                                                    }
                                                ],
                                                "amt": "12.2516"
                                            },
                                            "currency": "USD",
                                            "from": 1702270800000,
                                            "id": "getTransactions",
                                            "to": 1702530000000,
                                            "includesRealTime": true,
                                            "transactions": [
                                                {
                                                    "date": "Mon Dec 11 00:00:00 EST 2023",
                                                    "cur": "USD",
                                                    "fxRate": 1,
                                                    "pr": 192.26,
                                                    "qty": -5,
                                                    "acctid": "U1234567",
                                                    "amt": 961.3,
                                                    "conid": 265598,
                                                    "type": "Sell",
                                                    "desc": "Apple Inc"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/accounts": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Accounts",
                "description": "return accounts",
                "responses": {
                    "200": {
                        "description": "returned array with user account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "Array of objects representing accounts in the structure.",
                                    "items": {
                                        "$ref": "#/components/schemas/accountAttributes"
                                    }
                                },
                                "examples": {
                                    "accounts": {
                                        "value": [
                                            {
                                                "id": "DU123456",
                                                "PrepaidCrypto-Z": false,
                                                "PrepaidCrypto-P": false,
                                                "brokerageAccess": true,
                                                "accountId": "DU123456",
                                                "accountVan": "DU123456",
                                                "accountTitle": "John Smith, LLC",
                                                "displayName": "John Smith, LLC",
                                                "accountAlias": null,
                                                "accountStatus": 1590724800000,
                                                "currency": "USD",
                                                "type": "DEMO",
                                                "tradingType": "STKNOPT",
                                                "businessType": "IB_SALES",
                                                "ibEntity": "IBLLC-US",
                                                "faclient": false,
                                                "clearingStatus": "O",
                                                "covestor": false,
                                                "noClientTrading": false,
                                                "trackVirtualFXPortfolio": true,
                                                "acctCustType": "LLC",
                                                "parent": {
                                                    "mmc": [],
                                                    "accountId": "",
                                                    "isMParent": false,
                                                    "isMChild": false,
                                                    "isMultiplex": false
                                                },
                                                "desc": "DU123456"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/positions/{conid}": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get Positions In Accounts For A Given Instrument",
                "description": "Get positions in accounts for a given instrument (no secDef await control)",
                "parameters": [
                    {
                        "name": "conid",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Conid of the instrument for which positions are requested.",
                            "format": "int32",
                            "example": "8314"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object containing positions in the requested conid broken out by account.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/individualPosition"
                                    }
                                },
                                "examples": {
                                    "withPartialSecDefForSomeAccount": {
                                        "value": {
                                            "DU123456": [
                                                {
                                                    "acctId": "DU123456",
                                                    "conid": 8314,
                                                    "contractDesc": "IBM",
                                                    "position": 1412.0,
                                                    "mktPrice": 166.7599945,
                                                    "mktValue": 235465.11,
                                                    "currency": "USD",
                                                    "avgCost": 144.46141,
                                                    "avgPrice": 144.46141,
                                                    "realizedPnl": 0.0,
                                                    "unrealizedPnl": 31485.6,
                                                    "exchs": null,
                                                    "expiry": null,
                                                    "putOrCall": null,
                                                    "multiplier": 0.0,
                                                    "strike": "0",
                                                    "exerciseStyle": null,
                                                    "conExchMap": [],
                                                    "assetClass": "STK",
                                                    "undConid": 0,
                                                    "model": "",
                                                    "incrementRules": [
                                                        {
                                                            "lowerEdge": 0.0,
                                                            "increment": 0.01
                                                        }
                                                    ],
                                                    "displayRule": {
                                                        "magnification": 0,
                                                        "displayRuleStep": [
                                                            {
                                                                "decimalDigits": 2,
                                                                "lowerEdge": 0.0,
                                                                "wholeDigits": 4
                                                            }
                                                        ]
                                                    },
                                                    "time": 64,
                                                    "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                    "allExchanges": "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0",
                                                    "listingExchange": "NYSE",
                                                    "countryCode": "US",
                                                    "name": "INTL BUSINESS MACHINES CORP",
                                                    "lastTradingDay": null,
                                                    "group": "Computers",
                                                    "sector": "Technology",
                                                    "sectorGroup": "Computer Services",
                                                    "ticker": "IBM",
                                                    "type": "COMMON",
                                                    "hasOptions": true,
                                                    "fullName": "IBM",
                                                    "isUS": true,
                                                    "isEventContract": false,
                                                    "pageSize": 100
                                                }
                                            ],
                                            "DU123457": [
                                                {
                                                    "acctId": "DU123457",
                                                    "conid": 8314,
                                                    "contractDesc": "IBM",
                                                    "position": 1412.0,
                                                    "mktPrice": 166.7599945,
                                                    "mktValue": 235465.11,
                                                    "currency": "USD",
                                                    "avgCost": 144.46141,
                                                    "avgPrice": 144.46141,
                                                    "realizedPnl": 0.0,
                                                    "unrealizedPnl": 31485.6,
                                                    "exchs": null,
                                                    "expiry": null,
                                                    "putOrCall": null,
                                                    "multiplier": null,
                                                    "strike": 0.0,
                                                    "exerciseStyle": null,
                                                    "conExchMap": [],
                                                    "assetClass": "STK",
                                                    "undConid": 0,
                                                    "model": ""
                                                }
                                            ]
                                        }
                                    },
                                    "withSecDefForAllAccounts": {
                                        "value": {
                                            "DU123457": [
                                                {
                                                    "acctId": "DU123457",
                                                    "conid": 8314,
                                                    "contractDesc": "IBM",
                                                    "position": 1412.0,
                                                    "mktPrice": 166.7599945,
                                                    "mktValue": 235465.11,
                                                    "currency": "USD",
                                                    "avgCost": 144.46141,
                                                    "avgPrice": 144.46141,
                                                    "realizedPnl": 0.0,
                                                    "unrealizedPnl": 31485.6,
                                                    "exchs": null,
                                                    "expiry": null,
                                                    "putOrCall": null,
                                                    "multiplier": 0.0,
                                                    "strike": "0",
                                                    "exerciseStyle": null,
                                                    "conExchMap": [],
                                                    "assetClass": "STK",
                                                    "undConid": 0,
                                                    "model": "",
                                                    "incrementRules": [
                                                        {
                                                            "lowerEdge": 0.0,
                                                            "increment": 0.01
                                                        }
                                                    ],
                                                    "displayRule": {
                                                        "magnification": 0,
                                                        "displayRuleStep": [
                                                            {
                                                                "decimalDigits": 2,
                                                                "lowerEdge": 0.0,
                                                                "wholeDigits": 4
                                                            }
                                                        ]
                                                    },
                                                    "time": 64,
                                                    "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                    "allExchanges": "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0",
                                                    "listingExchange": "NYSE",
                                                    "countryCode": "US",
                                                    "name": "INTL BUSINESS MACHINES CORP",
                                                    "lastTradingDay": null,
                                                    "group": "Computers",
                                                    "sector": "Technology",
                                                    "sectorGroup": "Computer Services",
                                                    "ticker": "IBM",
                                                    "type": "COMMON",
                                                    "hasOptions": true,
                                                    "fullName": "IBM",
                                                    "isUS": true,
                                                    "isEventContract": false,
                                                    "pageSize": 100
                                                }
                                            ],
                                            "DU123456": [
                                                {
                                                    "acctId": "DU123456",
                                                    "conid": 8314,
                                                    "contractDesc": "IBM",
                                                    "position": 1412.0,
                                                    "mktPrice": 166.7599945,
                                                    "mktValue": 235465.11,
                                                    "currency": "USD",
                                                    "avgCost": 144.46141,
                                                    "avgPrice": 144.46141,
                                                    "realizedPnl": 0.0,
                                                    "unrealizedPnl": 31485.6,
                                                    "exchs": null,
                                                    "expiry": null,
                                                    "putOrCall": null,
                                                    "multiplier": 0.0,
                                                    "strike": "0",
                                                    "exerciseStyle": null,
                                                    "conExchMap": [],
                                                    "assetClass": "STK",
                                                    "undConid": 0,
                                                    "model": "",
                                                    "incrementRules": [
                                                        {
                                                            "lowerEdge": 0.0,
                                                            "increment": 0.01
                                                        }
                                                    ],
                                                    "displayRule": {
                                                        "magnification": 0,
                                                        "displayRuleStep": [
                                                            {
                                                                "decimalDigits": 2,
                                                                "lowerEdge": 0.0,
                                                                "wholeDigits": 4
                                                            }
                                                        ]
                                                    },
                                                    "time": 64,
                                                    "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                    "allExchanges": "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0",
                                                    "listingExchange": "NYSE",
                                                    "countryCode": "US",
                                                    "name": "INTL BUSINESS MACHINES CORP",
                                                    "lastTradingDay": null,
                                                    "group": "Computers",
                                                    "sector": "Technology",
                                                    "sectorGroup": "Computer Services",
                                                    "ticker": "IBM",
                                                    "type": "COMMON",
                                                    "hasOptions": true,
                                                    "fullName": "IBM",
                                                    "isUS": true,
                                                    "isEventContract": false,
                                                    "pageSize": 100
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/subaccounts": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get Attributes Of Subaccounts In Account Structure",
                "description": "Retrieve attributes of the subaccounts in the account structure.",
                "responses": {
                    "200": {
                        "description": "Array of objects representing accounts in the structure.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/accountAttributes"
                                    }
                                },
                                "examples": {
                                    "subAccounts": {
                                        "value": [
                                            {
                                                "id": "DU1234511",
                                                "PrepaidCrypto-Z": false,
                                                "PrepaidCrypto-P": false,
                                                "brokerageAccess": false,
                                                "accountId": "DU1234511",
                                                "accountVan": "DU1234511",
                                                "accountTitle": "John Smith, LLC",
                                                "displayName": "John Smith, LLC",
                                                "accountAlias": null,
                                                "accountStatus": 1590724800000,
                                                "currency": "USD",
                                                "type": "DEMO",
                                                "tradingType": "STKNOPT",
                                                "businessType": "IB_SALES",
                                                "ibEntity": "IBLLC-US",
                                                "faclient": false,
                                                "clearingStatus": "O",
                                                "covestor": false,
                                                "noClientTrading": false,
                                                "trackVirtualFXPortfolio": true,
                                                "acctCustType": "LLC",
                                                "parent": {
                                                    "mmc": [],
                                                    "accountId": "",
                                                    "isMParent": false,
                                                    "isMChild": false,
                                                    "isMultiplex": false
                                                },
                                                "desc": "DU1234511"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountId}/allocation": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get An Account's Allocations By Asset Class, Sector Group, And Sector.",
                "description": "Get an account's allocations by asset class, sector group, and sector.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Account ID whose allocations are requested."
                        }
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response with allocations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/portfolioAllocations"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "assetClass": {
                                                "long": {
                                                    "CRYPTO": 255.17,
                                                    "OPT": 44352.82,
                                                    "STK": 1564447.6240790943,
                                                    "BOND": 380106.54,
                                                    "CASH": 72425.68706744915
                                                },
                                                "short": {
                                                    "OPT": -80.53,
                                                    "STK": -103716.11109948158,
                                                    "CASH": -508096.16629793524
                                                }
                                            },
                                            "sector": {
                                                "long": {
                                                    "Others": 704313.8907064605,
                                                    "Industrial": 380106.54,
                                                    "Technology": 309264.47000000003,
                                                    "Consumer, Cyclical": 18213.43337263364,
                                                    "Communications": 164576.99,
                                                    "Financial": 412637.11,
                                                    "Consumer, Non-cyclical": 49.72
                                                },
                                                "short": {
                                                    "Technology": -87162.0,
                                                    "Consumer, Cyclical": -11763.0,
                                                    "Communications": -189.53,
                                                    "Financial": -4682.111099481583
                                                }
                                            },
                                            "group": {
                                                "long": {
                                                    "Computers": 279285.37,
                                                    "Others": 704313.8907064605,
                                                    "Biotechnology": 49.72,
                                                    "Aerospace/Defense": 380106.54,
                                                    "Semiconductors": 371.9,
                                                    "Auto Manufacturers": 18213.43337263364,
                                                    "Banks": 366666.31,
                                                    "Diversified Finan Serv": 45970.8,
                                                    "Software": 29607.2,
                                                    "Internet": 164576.99
                                                },
                                                "short": {
                                                    "Semiconductors": -87162.0,
                                                    "Auto Manufacturers": -11763.0,
                                                    "Insurance": -4682.111099481583,
                                                    "Internet": -189.53
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountId}/ledger": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get Ledger Data For The Given Account.",
                "description": "Get the given account's ledger data detailing its balances by currency.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Account ID whose ledger data is requested.",
                            "example": "DU123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ledger",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ledger"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "CAD": {
                                                "commoditymarketvalue": 0.0,
                                                "futuremarketvalue": 0.0,
                                                "settledcash": 3899.42,
                                                "exchangerate": 0.73095405,
                                                "sessionid": 1,
                                                "cashbalance": 3899.42,
                                                "corporatebondsmarketvalue": 0.0,
                                                "warrantsmarketvalue": 0.0,
                                                "netliquidationvalue": 3899.42,
                                                "interest": 0,
                                                "unrealizedpnl": 0.0,
                                                "stockmarketvalue": 0.0,
                                                "moneyfunds": 0.0,
                                                "currency": "CAD",
                                                "realizedpnl": 0.0,
                                                "funds": 0.0,
                                                "acctcode": "DU123456",
                                                "issueroptionsmarketvalue": 0.0,
                                                "key": "LedgerList",
                                                "timestamp": 1712784785,
                                                "severity": 0,
                                                "stockoptionmarketvalue": 0.0,
                                                "futuresonlypnl": 0.0,
                                                "tbondsmarketvalue": 0.0,
                                                "futureoptionmarketvalue": 0.0,
                                                "cashbalancefxsegment": 0.0,
                                                "secondkey": "CAD",
                                                "tbillsmarketvalue": 0.0,
                                                "dividends": 0.0,
                                                "cryptocurrencyvalue": 0.0
                                            },
                                            "USD": {
                                                "commoditymarketvalue": 0.0,
                                                "futuremarketvalue": -5650.0,
                                                "settledcash": -494573.5,
                                                "exchangerate": 1,
                                                "sessionid": 1,
                                                "cashbalance": -494573.5,
                                                "corporatebondsmarketvalue": 387538.2,
                                                "warrantsmarketvalue": 0.0,
                                                "netliquidationvalue": 1388598.1,
                                                "interest": -742.84,
                                                "unrealizedpnl": 342011.97,
                                                "stockmarketvalue": 1451848.9,
                                                "moneyfunds": 0.0,
                                                "currency": "USD",
                                                "realizedpnl": 0.0,
                                                "funds": 0.0,
                                                "acctcode": "DU123456",
                                                "issueroptionsmarketvalue": 0.0,
                                                "key": "LedgerList",
                                                "timestamp": 1712784785,
                                                "severity": 0,
                                                "stockoptionmarketvalue": 44272.29,
                                                "futuresonlypnl": -5650.0,
                                                "tbondsmarketvalue": 0.0,
                                                "futureoptionmarketvalue": 0.0,
                                                "cashbalancefxsegment": 0.0,
                                                "secondkey": "USD",
                                                "tbillsmarketvalue": 0.0,
                                                "endofbundle": 1,
                                                "dividends": 0.0,
                                                "cryptocurrencyvalue": 255.1348
                                            },
                                            "BASE": {
                                                "commoditymarketvalue": 0.0,
                                                "futuremarketvalue": -5650.0,
                                                "settledcash": -435667.94,
                                                "exchangerate": 1,
                                                "sessionid": 1,
                                                "cashbalance": -435667.94,
                                                "corporatebondsmarketvalue": 387538.2,
                                                "warrantsmarketvalue": 0.0,
                                                "netliquidationvalue": 1456360.9,
                                                "interest": -742.84,
                                                "unrealizedpnl": 342383.1,
                                                "stockmarketvalue": 1460706.0,
                                                "moneyfunds": 0.0,
                                                "currency": "BASE",
                                                "realizedpnl": 0.0,
                                                "funds": 0.0,
                                                "acctcode": "DU123456",
                                                "issueroptionsmarketvalue": 0.0,
                                                "key": "LedgerList",
                                                "timestamp": 1712784785,
                                                "severity": 0,
                                                "stockoptionmarketvalue": 44272.29,
                                                "futuresonlypnl": -5650.0,
                                                "tbondsmarketvalue": 0.0,
                                                "futureoptionmarketvalue": 0.0,
                                                "cashbalancefxsegment": 0.0,
                                                "secondkey": "BASE",
                                                "tbillsmarketvalue": 0.0,
                                                "dividends": 0.0,
                                                "cryptocurrencyvalue": 255.1348
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountId}/meta": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get An Account's Attributes.",
                "description": "Get a single account's attributes and capabilities.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Account ID whose attributes are requested.",
                            "example": "DU123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An account's attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/accountAttributes"
                                },
                                "examples": {
                                    "accountMetaInformation": {
                                        "value": {
                                            "id": "DU123456",
                                            "PrepaidCrypto-Z": false,
                                            "PrepaidCrypto-P": false,
                                            "brokerageAccess": false,
                                            "accountId": "DU123456",
                                            "accountVan": "DU123456",
                                            "accountTitle": "John Smith, LLC",
                                            "displayName": "John Smith, LLC",
                                            "accountAlias": "Retirement",
                                            "accountStatus": 1590724800000,
                                            "currency": "USD",
                                            "type": "DEMO",
                                            "tradingType": "STKNOPT",
                                            "businessType": "IB_SALES",
                                            "ibEntity": "IBLLC-US",
                                            "faclient": false,
                                            "clearingStatus": "O",
                                            "covestor": false,
                                            "noClientTrading": false,
                                            "trackVirtualFXPortfolio": true,
                                            "acctCustType": "LLC",
                                            "parent": {
                                                "mmc": [],
                                                "accountId": "",
                                                "isMParent": false,
                                                "isMChild": false,
                                                "isMultiplex": false
                                            },
                                            "desc": "DU123456"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountId}/positions/invalidate": {
            "post": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Instructs IB To Discard Cached Portfolio Positions For A Given Account.",
                "description": "Instructs IB to discard cached portfolio positions for a given account, so that the next request for positions delivers freshly obtained data.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Account ID whose cached portfolio positions will be discarded.",
                            "example": "DU123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of invalidation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Indicates success or failure of request to discard cached positions."
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "message": "success"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountId}/positions/{pageId}": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get All Positions In An Account.",
                "description": "Get all positions in an account.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Account ID whose positions are requested.",
                            "example": "DU123456"
                        }
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Paginates positions response. Indexed from 0. Max 100 positions returned per page. Defaulted to 0.",
                            "format": "int32",
                            "example": "1"
                        }
                    },
                    {
                        "name": "model",
                        "in": "path",
                        "description": "Name of model",
                        "required": false,
                        "style": "simple",
                        "explode": false
                    },
                    {
                        "name": "sort",
                        "in": "path",
                        "description": "sorting of result positions by specified field. Defaulted to \"name\" field.",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "example": "name"
                    },
                    {
                        "name": "direction",
                        "in": "path",
                        "description": "Sorting direction. Possible values \"a\" - ascending, \"d\" - descending. Defaulted to \"a\"",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "example": "a"
                    },
                    {
                        "name": "waitForSecDef",
                        "in": "path",
                        "required": false,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "boolean",
                            "description": "Forcing to wait for all security definition to be received. If false, position may not have secDef portion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "description": "Array of objects reflecting all positions in the given account.",
                                    "items": {
                                        "$ref": "#/components/schemas/individualPosition"
                                    }
                                },
                                "examples": {
                                    "positions": {
                                        "value": [
                                            {
                                                "acctId": "DU123456",
                                                "conid": 479624278,
                                                "contractDesc": "BTC CRYPTO",
                                                "position": 0.00365831,
                                                "mktPrice": 69814.3984375,
                                                "mktValue": 255.4,
                                                "currency": "USD",
                                                "avgCost": 27608.34921045,
                                                "avgPrice": 27608.34921045,
                                                "realizedPnl": 0.0,
                                                "unrealizedPnl": 154.4,
                                                "exchs": null,
                                                "expiry": null,
                                                "putOrCall": null,
                                                "multiplier": 0.0,
                                                "strike": "0",
                                                "exerciseStyle": null,
                                                "conExchMap": [],
                                                "assetClass": "CRYPTO",
                                                "undConid": 0,
                                                "model": "",
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.25
                                                    }
                                                ],
                                                "displayRule": {
                                                    "magnification": 0,
                                                    "displayRuleStep": [
                                                        {
                                                            "decimalDigits": 2,
                                                            "lowerEdge": 0.0,
                                                            "wholeDigits": 4
                                                        }
                                                    ]
                                                },
                                                "time": 6,
                                                "chineseName": "&#x7F8E;&#x5143;",
                                                "allExchanges": "PAXOS",
                                                "listingExchange": "PAXOS",
                                                "countryCode": "US",
                                                "name": "Bitcoin cryptocurrency",
                                                "lastTradingDay": null,
                                                "group": null,
                                                "sector": null,
                                                "sectorGroup": null,
                                                "ticker": "BTC",
                                                "type": "",
                                                "hasOptions": false,
                                                "fullName": "BTC",
                                                "isEventContract": false,
                                                "pageSize": 100
                                            },
                                            {
                                                "acctId": "DU123456",
                                                "conid": 584891614,
                                                "contractDesc": "SPY    JAN2025 440 C [SPY   250117C00440000 100]",
                                                "position": 1.0,
                                                "mktPrice": 95.70706175,
                                                "mktValue": 9570.71,
                                                "currency": "USD",
                                                "avgCost": 5801.0401,
                                                "avgPrice": 58.010401,
                                                "realizedPnl": 0.0,
                                                "unrealizedPnl": 3769.67,
                                                "exchs": null,
                                                "expiry": "20250117",
                                                "putOrCall": "C",
                                                "multiplier": 100.0,
                                                "strike": "440",
                                                "exerciseStyle": null,
                                                "conExchMap": [],
                                                "assetClass": "OPT",
                                                "undConid": 756733,
                                                "model": "",
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.01
                                                    }
                                                ],
                                                "displayRule": {
                                                    "magnification": 0,
                                                    "displayRuleStep": [
                                                        {
                                                            "decimalDigits": 2,
                                                            "lowerEdge": 0.0,
                                                            "wholeDigits": 4
                                                        }
                                                    ]
                                                },
                                                "crossCurrency": false,
                                                "time": 26,
                                                "chineseName": "SPDR&#x6807;&#x666E;500 ETF&#x4FE1;&#x6258;",
                                                "allExchanges": "AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,WALLBETH,IBUSOPT",
                                                "listingExchange": "AMEX",
                                                "countryCode": "US",
                                                "name": "SPDR S&P 500 ETF TRUST",
                                                "lastTradingDay": "20250117",
                                                "group": null,
                                                "sector": null,
                                                "sectorGroup": null,
                                                "ticker": "SPY",
                                                "type": "",
                                                "undComp": "SPDR S&P 500 ETF TRUST",
                                                "undSym": "SPY",
                                                "hasOptions": false,
                                                "fullName": "SPY Jan17'25 440 Call",
                                                "isUS": true,
                                                "isEventContract": false,
                                                "pageSize": 100
                                            },
                                            {
                                                "acctId": "DU123456",
                                                "conid": 8314,
                                                "contractDesc": "IBM",
                                                "position": 1412.0,
                                                "mktPrice": 185.17599485,
                                                "mktValue": 261468.5,
                                                "currency": "USD",
                                                "avgCost": 144.46141,
                                                "avgPrice": 144.46141,
                                                "realizedPnl": 0.0,
                                                "unrealizedPnl": 57488.99,
                                                "exchs": null,
                                                "expiry": null,
                                                "putOrCall": null,
                                                "multiplier": 0.0,
                                                "strike": "0",
                                                "exerciseStyle": null,
                                                "conExchMap": [],
                                                "assetClass": "STK",
                                                "undConid": 0,
                                                "model": "",
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.01
                                                    }
                                                ],
                                                "displayRule": {
                                                    "magnification": 0,
                                                    "displayRuleStep": [
                                                        {
                                                            "decimalDigits": 2,
                                                            "lowerEdge": 0.0,
                                                            "wholeDigits": 4
                                                        }
                                                    ]
                                                },
                                                "time": 38,
                                                "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                "allExchanges": "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0",
                                                "listingExchange": "NYSE",
                                                "countryCode": "US",
                                                "name": "INTL BUSINESS MACHINES CORP",
                                                "lastTradingDay": null,
                                                "group": "Computers",
                                                "sector": "Technology",
                                                "sectorGroup": "Computer Services",
                                                "ticker": "IBM",
                                                "type": "COMMON",
                                                "hasOptions": true,
                                                "fullName": "IBM",
                                                "isUS": true,
                                                "isEventContract": false,
                                                "pageSize": 100
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountId}/summary": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Portfolio Account Summary",
                "description": "Portfolio account summary",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "accountId",
                            "example": "DU123456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "response with summary definitions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/portfolioSummary"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "accountcode": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "DU123456"
                                            },
                                            "accountready": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "true"
                                            },
                                            "accounttype": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "LLC"
                                            },
                                            "accruedcash": {
                                                "amount": 880036.375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "accruedcash-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "accruedcash-s": {
                                                "amount": 880036.375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "accrueddividend": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "accrueddividend-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "accrueddividend-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availablefunds": {
                                                "amount": 2.05266944E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availablefunds-c": {
                                                "amount": 468839.75,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availablefunds-s": {
                                                "amount": 2.04798112E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availabletotrade": {
                                                "amount": 2.04680368E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availabletotrade-c": {
                                                "amount": 500449.375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availabletotrade-s": {
                                                "amount": 2.0417992E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availabletowithdraw": {
                                                "amount": 2.04676912E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availabletowithdraw-c": {
                                                "amount": 496993.75,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "availabletowithdraw-s": {
                                                "amount": 2.0417992E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "billable": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "billable-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "billable-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "buyingpower": {
                                                "amount": 8.21079744E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "columnprio-c": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "2"
                                            },
                                            "columnprio-s": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "1"
                                            },
                                            "cushion": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "0.994598"
                                            },
                                            "daytradesremaining": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "-1"
                                            },
                                            "daytradesremainingt+1": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "-1"
                                            },
                                            "daytradesremainingt+2": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "-1"
                                            },
                                            "daytradesremainingt+3": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "-1"
                                            },
                                            "daytradesremainingt+4": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "-1"
                                            },
                                            "daytradingstatus-s": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": ": : false: 205505601.94: :false"
                                            },
                                            "depositoncredithold": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "null"
                                            },
                                            "equitywithloanvalue": {
                                                "amount": 2.0550552E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "equitywithloanvalue-c": {
                                                "amount": 471830.0625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "equitywithloanvalue-s": {
                                                "amount": 2.05033696E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "excessliquidity": {
                                                "amount": 2.05300432E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "excessliquidity-c": {
                                                "amount": 471830.0625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "excessliquidity-s": {
                                                "amount": 2.04828608E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullavailablefunds": {
                                                "amount": 2.05252848E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullavailablefunds-c": {
                                                "amount": 454742.59375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullavailablefunds-s": {
                                                "amount": 2.04798112E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullexcessliquidity": {
                                                "amount": 2.05287616E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullexcessliquidity-c": {
                                                "amount": 459014.46875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullexcessliquidity-s": {
                                                "amount": 2.04828608E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullinitmarginreq": {
                                                "amount": 282575.34375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullinitmarginreq-c": {
                                                "amount": 46990.5,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullinitmarginreq-s": {
                                                "amount": 235584.84375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullmaintmarginreq": {
                                                "amount": 247882.796875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullmaintmarginreq-c": {
                                                "amount": 42718.640625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "fullmaintmarginreq-s": {
                                                "amount": 205164.171875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "grosspositionvalue": {
                                                "amount": 659611.375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "grosspositionvalue-s": {
                                                "amount": 659611.375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "guarantee": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "guarantee-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "guarantee-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "highestseverity": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "null"
                                            },
                                            "indianstockhaircut": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "indianstockhaircut-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "indianstockhaircut-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "initmarginreq": {
                                                "amount": 268478.1875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "initmarginreq-c": {
                                                "amount": 32893.3515625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "initmarginreq-s": {
                                                "amount": 235584.84375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "leverage-s": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "0.0"
                                            },
                                            "lookaheadavailablefunds": {
                                                "amount": 2.05266944E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadavailablefunds-c": {
                                                "amount": 468839.75,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadavailablefunds-s": {
                                                "amount": 2.04798112E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadexcessliquidity": {
                                                "amount": 2.05300432E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadexcessliquidity-c": {
                                                "amount": 471830.0625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadexcessliquidity-s": {
                                                "amount": 2.04828608E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadinitmarginreq": {
                                                "amount": 268478.1875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadinitmarginreq-c": {
                                                "amount": 32893.3515625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadinitmarginreq-s": {
                                                "amount": 235584.84375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadmaintmarginreq": {
                                                "amount": 235067.203125,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadmaintmarginreq-c": {
                                                "amount": 29903.05078125,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadmaintmarginreq-s": {
                                                "amount": 205164.171875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "lookaheadnextchange": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "1712157300"
                                            },
                                            "maintmarginreq": {
                                                "amount": 235067.203125,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "maintmarginreq-c": {
                                                "amount": 29903.05078125,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "maintmarginreq-s": {
                                                "amount": 205164.171875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "netliquidation": {
                                                "amount": 2.06415536E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "netliquidation-c": {
                                                "amount": 501733.09375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "netliquidation-s": {
                                                "amount": 2.05913808E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "netliquidationuncertainty": {
                                                "amount": 70.94000244140625,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "nlvandmargininreview": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "false"
                                            },
                                            "pasharesvalue": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "pasharesvalue-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "pasharesvalue-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "physicalcertificatevalue": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "physicalcertificatevalue-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "physicalcertificatevalue-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "postexpirationexcess": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "postexpirationexcess-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "postexpirationexcess-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "postexpirationmargin": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "postexpirationmargin-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "postexpirationmargin-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "previousdayequitywithloanvalue": {
                                                "amount": 2.05044656E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "previousdayequitywithloanvalue-s": {
                                                "amount": 2.05044656E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "regtequity": {
                                                "amount": 2.05913808E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "regtequity-s": {
                                                "amount": 2.05913808E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "regtmargin": {
                                                "amount": 329761.1875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "regtmargin-s": {
                                                "amount": 329761.1875,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "segmenttitle-c": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "US Commodities"
                                            },
                                            "segmenttitle-s": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "US Securities"
                                            },
                                            "sma": {
                                                "amount": 2.05584048E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "sma-s": {
                                                "amount": 2.05584048E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "totalcashvalue": {
                                                "amount": 2.05646432E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "totalcashvalue-c": {
                                                "amount": 501733.09375,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "totalcashvalue-s": {
                                                "amount": 2.05144704E8,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "totaldebitcardpendingcharges": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "totaldebitcardpendingcharges-c": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "totaldebitcardpendingcharges-s": {
                                                "amount": 0.0,
                                                "currency": "USD",
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": null
                                            },
                                            "tradingtype-s": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "STKNOPT"
                                            },
                                            "whatifpmenabled": {
                                                "amount": 0.0,
                                                "currency": null,
                                                "isNull": false,
                                                "severity": 0,
                                                "timestamp": 1712156105000,
                                                "value": "true"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/portfolio/{accountid}/position/{conid}": {
            "get": {
                "tags": [
                    "Trading Portfolio"
                ],
                "summary": "Get Position For A Given Instrument In A Single Account.",
                "description": "Get position for a given instrument in a single account. WaitSecDef attribute is always defaulted to false. It is possible to get position without security definition.",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Account ID whose position in the given instrument is requested.",
                            "example": "DU123456"
                        }
                    },
                    {
                        "name": "conid",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Conid of the instrument whose position in the account is requested.",
                            "format": "int32",
                            "example": "265598"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Position details by conid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/individualPositionArray"
                                },
                                "examples": {
                                    "individualPositionOpt": {
                                        "value": [
                                            {
                                                "acctId": "DU123456",
                                                "conid": 580947749,
                                                "contractDesc": "META JUN2024 330 P [META 240621P00330000 100]",
                                                "position": -1.0,
                                                "mktPrice": 0.77968365,
                                                "mktValue": -77.97,
                                                "currency": "USD",
                                                "avgCost": 4229.1637,
                                                "avgPrice": 42.291637,
                                                "realizedPnl": 0.0,
                                                "unrealizedPnl": 4151.2,
                                                "exchs": null,
                                                "expiry": "20240621",
                                                "putOrCall": "P",
                                                "multiplier": 100.0,
                                                "strike": "330",
                                                "exerciseStyle": null,
                                                "conExchMap": [],
                                                "assetClass": "OPT",
                                                "undConid": 107113386,
                                                "model": "",
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.01
                                                    }
                                                ],
                                                "displayRule": {
                                                    "magnification": 0,
                                                    "displayRuleStep": [
                                                        {
                                                            "decimalDigits": 2,
                                                            "lowerEdge": 0.0,
                                                            "wholeDigits": 4
                                                        }
                                                    ]
                                                },
                                                "crossCurrency": false,
                                                "time": 27,
                                                "chineseName": "Meta&#x5E73;&#x53F0;&#x80A1;&#x4EFD;&#x6709;&#x9650;&#x516C;&#x53F8;",
                                                "allExchanges": "AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,WALLBETH,IBUSOPT",
                                                "listingExchange": "AMEX",
                                                "countryCode": "US",
                                                "name": "META PLATFORMS INC-CLASS A",
                                                "lastTradingDay": "20240621",
                                                "group": "Internet",
                                                "sector": "Communications",
                                                "sectorGroup": "Internet Content-Entmnt",
                                                "ticker": "META",
                                                "type": "",
                                                "undComp": "META PLATFORMS INC-CLASS A",
                                                "undSym": "META",
                                                "hasOptions": false,
                                                "fullName": "META Jun21'24 330 Put",
                                                "isUS": true,
                                                "isEventContract": false,
                                                "pageSize": 100
                                            }
                                        ]
                                    },
                                    "individualPositionStk": {
                                        "value": [
                                            {
                                                "acctId": "DU123456",
                                                "conid": 8314,
                                                "contractDesc": "IBM",
                                                "position": 1412.0,
                                                "mktPrice": 185.17599485,
                                                "mktValue": 261468.5,
                                                "currency": "USD",
                                                "avgCost": 144.46141,
                                                "avgPrice": 144.46141,
                                                "realizedPnl": 0.0,
                                                "unrealizedPnl": 57488.99,
                                                "exchs": null,
                                                "expiry": null,
                                                "putOrCall": null,
                                                "multiplier": 0.0,
                                                "strike": "0",
                                                "exerciseStyle": null,
                                                "conExchMap": [],
                                                "assetClass": "STK",
                                                "undConid": 0,
                                                "model": "",
                                                "incrementRules": [
                                                    {
                                                        "lowerEdge": 0.0,
                                                        "increment": 0.01
                                                    }
                                                ],
                                                "displayRule": {
                                                    "magnification": 0,
                                                    "displayRuleStep": [
                                                        {
                                                            "decimalDigits": 2,
                                                            "lowerEdge": 0.0,
                                                            "wholeDigits": 4
                                                        }
                                                    ]
                                                },
                                                "time": 38,
                                                "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                "allExchanges": "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0",
                                                "listingExchange": "NYSE",
                                                "countryCode": "US",
                                                "name": "INTL BUSINESS MACHINES CORP",
                                                "lastTradingDay": null,
                                                "group": "Computers",
                                                "sector": "Technology",
                                                "sectorGroup": "Computer Services",
                                                "ticker": "IBM",
                                                "type": "COMMON",
                                                "hasOptions": true,
                                                "fullName": "IBM",
                                                "isUS": true,
                                                "isEventContract": false,
                                                "pageSize": 100
                                            }
                                        ]
                                    },
                                    "individualPositionWithNoSecDef": {
                                        "value": [
                                            {
                                                "acctId": "DU123456",
                                                "conid": 580947749,
                                                "contractDesc": "META JUN2024 330 P [META 240621P00330000 100]",
                                                "position": -1.0,
                                                "mktPrice": 0.7800926,
                                                "mktValue": -78.01,
                                                "currency": "USD",
                                                "avgCost": 4229.1637,
                                                "avgPrice": 42.291637,
                                                "realizedPnl": 0.0,
                                                "unrealizedPnl": 4151.15,
                                                "exchs": null,
                                                "expiry": null,
                                                "putOrCall": null,
                                                "multiplier": null,
                                                "strike": 0.0,
                                                "exerciseStyle": null,
                                                "conExchMap": [],
                                                "assetClass": "OPT",
                                                "undConid": 0,
                                                "model": ""
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/sso/validate": {
            "get": {
                "tags": [
                    "Trading Session"
                ],
                "summary": "Validate SSO",
                "description": "Validates the current session for the SSO user.",
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ssoValidateResponse"
                                },
                                "example": {
                                    "success": {
                                        "value": {
                                            "USER_ID": 123456789,
                                            "USER_NAME": "user1234",
                                            "RESULT": true,
                                            "AUTH_TIME": 1702580846836,
                                            "SF_ENABLED": false,
                                            "IS_FREE_TRIAL": false,
                                            "CREDENTIAL": "user1234",
                                            "IP": "12.345.678.901",
                                            "EXPIRES": 415890,
                                            "QUALIFIED_FOR_MOBILE_AUTH": null,
                                            "LANDING_APP": "UNIVERSAL",
                                            "IS_MASTER": false,
                                            "lastAccessed": 1702581069652,
                                            "LOGIN_TYPE": 2,
                                            "PAPER_USER_NAME": "user1234",
                                            "features": {
                                                "env": "PROD",
                                                "wlms": true,
                                                "realtime": true,
                                                "bond": true,
                                                "optionChains": true,
                                                "calendar": true,
                                                "newMf": true
                                            },
                                            "region": "NJ"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/tickle": {
            "post": {
                "tags": [
                    "Trading Session"
                ],
                "summary": "Server Ping.",
                "description": "If the gateway has not received any requests for several minutes an open session will automatically timeout. The tickle endpoint pings the server to prevent the session from ending. It is expected to call this endpoint approximately every 60 seconds to maintain the connection to the brokerage session.",
                "responses": {
                    "200": {
                        "description": "An array of objects detailing contract information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tickleResponse"
                                },
                                "example": {
                                    "success": {
                                        "value": {
                                            "session": "bb665d0f55b6289d70bc7380089fc96f",
                                            "ssoExpires": 460311,
                                            "collission": false,
                                            "userId": 123456789,
                                            "hmds": {
                                                "error": "no bridge"
                                            },
                                            "iserver": {
                                                "authStatus": {
                                                    "authenticated": true,
                                                    "competing": false,
                                                    "connected": true,
                                                    "message": "",
                                                    "MAC": "98:F2:B3:23:BF:A0",
                                                    "serverInfo": {
                                                        "serverName": "JifN19053",
                                                        "serverVersion": "Build 10.25.0p, Dec 5, 2023 5:48:12 PM"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "fail": {
                                        "value": {
                                            "error": "failed to process request"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "x-ib-provider": "iblink"
            }
        },
        "/trsrv/all-conids": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "All Conids By Exchange",
                "description": "Send out a request to retrieve all contracts made available on a requested exchange. This returns all contracts that are tradable on the exchange, even those that are not using the exchange as their primary listing.",
                "parameters": [
                    {
                        "name": "exchange",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Exchange from which derivatives should be retrieved from.",
                            "example": "AMEX"
                        }
                    },
                    {
                        "name": "assetClass",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "asset class",
                            "default": "STK"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing a contract's security definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "ticker": {
                                                "type": "string",
                                                "description": "The ticker symbol of the contract."
                                            },
                                            "conid": {
                                                "type": "integer",
                                                "description": "The contract identifier of the returned contract.",
                                                "format": "int32"
                                            },
                                            "exchange": {
                                                "type": "string",
                                                "description": "The primary exchange of the returned contract."
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "ticker": "BMO",
                                                "conid": 5094,
                                                "exchange": "NYSE"
                                            },
                                            {
                                                "ticker": "BNS",
                                                "conid": 15156975,
                                                "exchange": "NYSE"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/trsrv/futures": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Future  Security Definition By Symbol",
                "description": "Returns a list of non-expired future contracts for given symbol(s)",
                "parameters": [
                    {
                        "name": "symbols",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Indicate the symbol(s) of the underlier you are trying to retrieve futures on. Accepts comma delimited string of symbols.",
                            "example": "ES,MES"
                        }
                    },
                    {
                        "name": "exchange",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "exchange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing a contract's security definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/features"
                                },
                                "examples": {
                                    "futures": {
                                        "value": {
                                            "ES": [
                                                {
                                                    "symbol": "ES",
                                                    "conid": 495512557,
                                                    "underlyingConid": 11004968,
                                                    "expirationDate": 20241220,
                                                    "ltd": 20241219,
                                                    "shortFuturesCutOff": 20241219,
                                                    "longFuturesCutOff": 20241219
                                                },
                                                {
                                                    "symbol": "ES",
                                                    "conid": 495512563,
                                                    "underlyingConid": 11004968,
                                                    "expirationDate": 20251219,
                                                    "ltd": 20251218,
                                                    "shortFuturesCutOff": 20251218,
                                                    "longFuturesCutOff": 20251218
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/trsrv/secdef": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Search The Security Definition By Contract ID",
                "description": "Returns a list of security definitions for the given conids.",
                "parameters": [
                    {
                        "name": "conids",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "A comma separated series of contract IDs.",
                            "example": "265598,8314"
                        }
                    },
                    {
                        "name": "criteria",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "bondp",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing a contract's security definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trsrvSecDefResponse"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "secdef": [
                                                {
                                                    "incrementRules": [
                                                        {
                                                            "lowerEdge": 0.0,
                                                            "increment": 0.01
                                                        }
                                                    ],
                                                    "displayRule": {
                                                        "magnification": 0,
                                                        "displayRuleStep": [
                                                            {
                                                                "decimalDigits": 2,
                                                                "lowerEdge": 0.0,
                                                                "wholeDigits": 4
                                                            }
                                                        ]
                                                    },
                                                    "conid": 8314,
                                                    "currency": "USD",
                                                    "time": 770,
                                                    "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                    "allExchanges": "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0",
                                                    "listingExchange": "NYSE",
                                                    "countryCode": "US",
                                                    "name": "INTL BUSINESS MACHINES CORP",
                                                    "assetClass": "STK",
                                                    "expiry": null,
                                                    "lastTradingDay": null,
                                                    "group": "Computers",
                                                    "putOrCall": null,
                                                    "sector": "Technology",
                                                    "sectorGroup": "Computer Services",
                                                    "strike": "0",
                                                    "ticker": "IBM",
                                                    "undConid": 0,
                                                    "multiplier": 0.0,
                                                    "type": "COMMON",
                                                    "hasOptions": true,
                                                    "fullName": "IBM",
                                                    "isUS": true,
                                                    "isEventContract": false
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "204": {
                        "$ref": "#/components/responses/NoContent"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/trsrv/secdef/schedule": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Trading Schedule By Symbol",
                "description": "Returns the trading schedule up to a month for the requested contract.",
                "parameters": [
                    {
                        "name": "assetClass",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "description": "Specify the security type of the given contract. Valid asset classes are:\n * `STK` - Stock\n * `OPT` - Option\n * `FUT` - Future\n * `CFD` - Contract for Difference\n * `WAR` - Warrant\n * `SWP` - Forex\n * `FND` - Mutual Fund\n * `BND` - Bond\n * `ICS` - Inter-Commodity Spread\n",
                            "enum": [
                                "STK",
                                "OPT",
                                "FUT",
                                "CFD",
                                "WAR",
                                "SWP",
                                "FND",
                                "BND",
                                "ICS"
                            ]
                        }
                    },
                    {
                        "name": "symbol",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify the symbol for your contract.",
                            "example": "AAPL"
                        }
                    },
                    {
                        "name": "exchange",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify the primary exchange of your contract.",
                            "example": "NASDAQ"
                        }
                    },
                    {
                        "name": "exchangeFilter",
                        "in": "query",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Specify all exchanges you want to retrieve data from.",
                            "example": "AMEX,NASDAQ,NYSE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the trading schedule up to a month for the requested contract.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tradingSchedule"
                                },
                                "examples": {
                                    "ibm-nyse": {
                                        "value": [
                                            {
                                                "id": "p101781",
                                                "tradeVenueId": "v13038",
                                                "exchange": "NYSE",
                                                "description": "New York Stock Exchange",
                                                "timezone": "America/New_York",
                                                "schedules": [
                                                    {
                                                        "clearingCycleEndTime": "0000",
                                                        "tradingScheduleDate": "20000101",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "0000",
                                                        "tradingScheduleDate": "20000102",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "1700",
                                                        "tradingScheduleDate": "20000103",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "prop": "LIQUID",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "1700",
                                                        "tradingScheduleDate": "20000104",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "prop": "LIQUID",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "1700",
                                                        "tradingScheduleDate": "20000105",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "prop": "LIQUID",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "1700",
                                                        "tradingScheduleDate": "20000106",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "prop": "LIQUID",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "1700",
                                                        "tradingScheduleDate": "20000107",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "prop": "LIQUID",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "clearingCycleEndTime": "0000",
                                                        "tradingScheduleDate": "20240329",
                                                        "sessions": [],
                                                        "tradingtimes": [
                                                            {
                                                                "openingTime": "0035",
                                                                "closingTime": "2330",
                                                                "cancelDayOrders": "Y"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/trsrv/stocks": {
            "get": {
                "tags": [
                    "Trading Contracts"
                ],
                "summary": "Stock Security Definition By Symbol",
                "description": "Returns an object contains all stock contracts for given symbol(s)",
                "parameters": [
                    {
                        "name": "symbols",
                        "in": "query",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "description": "Comma-separated list of stock symbols. Symbols must contain only capitalized letters.",
                            "example": "AAPL,IBKR"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response containing a contract's security definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/stocks"
                                },
                                "examples": {
                                    "ibm": {
                                        "value": {
                                            "IBM": [
                                                {
                                                    "name": "INTL BUSINESS MACHINES CORP",
                                                    "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                    "assetClass": "STK",
                                                    "contracts": [
                                                        {
                                                            "conid": 8314,
                                                            "exchange": "NYSE",
                                                            "isUS": true
                                                        },
                                                        {
                                                            "conid": 1411277,
                                                            "exchange": "IBIS",
                                                            "isUS": false
                                                        },
                                                        {
                                                            "conid": 38709473,
                                                            "exchange": "MEXI",
                                                            "isUS": false
                                                        },
                                                        {
                                                            "conid": 41645598,
                                                            "exchange": "LSE",
                                                            "isUS": false
                                                        }
                                                    ]
                                                },
                                                {
                                                    "name": "INTL BUSINESS MACHINES C-CDR",
                                                    "chineseName": "&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;",
                                                    "assetClass": "STK",
                                                    "contracts": [
                                                        {
                                                            "conid": 530091934,
                                                            "exchange": "AEQLIT",
                                                            "isUS": false
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        },
        "/ws": {
            "get": {
                "tags": [
                    "Trading Websocket"
                ],
                "summary": "Open Websocket.",
                "description": "Open websocket.",
                "parameters": [
                    {
                        "name": "Connection",
                        "in": "header",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Upgrade"
                            ]
                        }
                    },
                    {
                        "name": "Upgrade",
                        "in": "header",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "websocket"
                            ]
                        }
                    },
                    {
                        "name": "api",
                        "in": "cookie",
                        "description": "32-character Web API session cookie value.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "c8fh17fnjr01hfnrh39rhfh8shd1hd93"
                        }
                    },
                    {
                        "name": "oauth_token",
                        "in": "query",
                        "description": "8-character OAuth access token.",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "example": "a1b2c3d4"
                        }
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Successful request to switch protocols.",
                        "headers": {
                            "Connection": {
                                "style": "simple",
                                "explode": false,
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "Upgrade"
                                    ]
                                }
                            },
                            "Upgrade": {
                                "style": "simple",
                                "explode": false,
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "websocket"
                                    ]
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "https://api.ibkr.com/v1/api",
                        "description": "Trading Production Base URL"
                    },
                    {
                        "url": "https://api.ibkr.com/alpha/api",
                        "description": "Trading Alpha Base URL"
                    }
                ],
                "x-ib-provider": "iblink"
            }
        }
    },
    "components": {
        "schemas": {
            "ACHDetails": {
                "type": "object",
                "properties": {
                    "custInitAch": {
                        "type": "boolean"
                    },
                    "bankName": {
                        "type": "string"
                    }
                }
            },
            "ACHInstruction": {
                "type": "object",
                "properties": {
                    "custInitAch": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "CREDIT",
                            "DEBIT",
                            "DEBIT_CREDIT"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "ibAccount": {
                        "type": "string"
                    },
                    "bankCountry": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "JPY",
                            "HKD",
                            "AUD",
                            "CHF",
                            "MXN",
                            "SEK",
                            "NZD",
                            "HUF",
                            "CZK",
                            "CNH",
                            "DKK",
                            "RUB",
                            "ILS",
                            "NOK",
                            "SGD",
                            "PLN",
                            "ZAR",
                            "AED",
                            "KRW",
                            "SAR",
                            "TRY"
                        ]
                    },
                    "routingNumber": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string",
                        "enum": [
                            "savings",
                            "checking"
                        ]
                    }
                }
            },
            "AUSExposureDetailsType": {
                "type": "object",
                "properties": {
                    "ausExposureRelationship": {
                        "type": "string"
                    },
                    "personName": {
                        "type": "string"
                    },
                    "licenseNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AbandonAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "Account": {
                "type": "object",
                "properties": {
                    "accountConfiguration": {
                        "$ref": "#/components/schemas/AccountConfigurationType"
                    },
                    "investmentObjectives": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Trading",
                                "Growth",
                                "Speculation",
                                "Hedging",
                                "Preservation",
                                "Income"
                            ]
                        }
                    },
                    "brokerageServiceCodes": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "IBClearing",
                                "IBExecution",
                                "IBPrime"
                            ]
                        }
                    },
                    "capabilities": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "BOND",
                                "FOP",
                                "FUND",
                                "FUT",
                                "MRGN",
                                "MULT",
                                "OPT",
                                "SSF",
                                "CFD",
                                "STK",
                                "CLP",
                                "LEVFX",
                                "CMDTY"
                            ]
                        }
                    },
                    "tradingPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradingPermission"
                        }
                    },
                    "commissionConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionConfig"
                        }
                    },
                    "allExchangeAccess": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExchangeAccess"
                        }
                    },
                    "dvpInstructions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DVPInstruction"
                        }
                    },
                    "tradingLimits": {
                        "$ref": "#/components/schemas/TradingLimits"
                    },
                    "advisorWrapFees": {
                        "$ref": "#/components/schemas/AdvisorWrapFeesType"
                    },
                    "feesTemplateName": {
                        "type": "string"
                    },
                    "clientCommissionSchedule": {
                        "$ref": "#/components/schemas/CommissionScheduleType"
                    },
                    "clientInterestMarkupSchedules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InterestMarkupType"
                        }
                    },
                    "decendent": {
                        "$ref": "#/components/schemas/IRADecedent"
                    },
                    "iraBeneficiaries": {
                        "$ref": "#/components/schemas/IRABeneficiariesType"
                    },
                    "extPositionsTransfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtPositionsTransferType"
                        }
                    },
                    "depositNotification": {
                        "$ref": "#/components/schemas/DepositNotification"
                    },
                    "achInstructions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ACHInstruction"
                        }
                    },
                    "recurringTransactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecurringTransaction"
                        }
                    },
                    "custodian": {
                        "$ref": "#/components/schemas/CustodianType"
                    },
                    "successorCustodian": {
                        "$ref": "#/components/schemas/CustodianType"
                    },
                    "accountRep": {
                        "$ref": "#/components/schemas/AccountRep"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "propertyProfile": {
                        "type": "string"
                    },
                    "baseCurrency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "JPY",
                            "HKD",
                            "AUD",
                            "CHF",
                            "MXN",
                            "SEK",
                            "NZD",
                            "HUF",
                            "CZK",
                            "CNH",
                            "DKK",
                            "RUB",
                            "ILS",
                            "NOK",
                            "SGD",
                            "PLN",
                            "ZAR",
                            "AED",
                            "KRW",
                            "SAR",
                            "TRY"
                        ]
                    },
                    "employeePlan": {
                        "type": "string"
                    },
                    "multiCurrency": {
                        "type": "boolean"
                    },
                    "migration": {
                        "type": "boolean"
                    },
                    "sourceAccountId": {
                        "type": "string"
                    },
                    "margin": {
                        "type": "string"
                    },
                    "ira": {
                        "type": "boolean"
                    },
                    "iraType": {
                        "type": "string",
                        "enum": [
                            "RI",
                            "RO",
                            "RT",
                            "SP",
                            "ED",
                            "TH",
                            "RH",
                            "SH",
                            "RRSP",
                            "SRRSP",
                            "TFSA",
                            "SIMPLE",
                            "ISA"
                        ]
                    },
                    "iraOfficialTitle": {
                        "type": "string"
                    },
                    "clientActiveTrading": {
                        "type": "boolean"
                    },
                    "duplicate": {
                        "type": "boolean"
                    },
                    "numberOfDuplicates": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stockYieldProgram": {
                        "type": "boolean"
                    },
                    "alias": {
                        "type": "string"
                    },
                    "accountType": {
                        "type": "string",
                        "enum": [
                            "Investment",
                            "Trading",
                            "SMSF"
                        ]
                    },
                    "drip": {
                        "type": "boolean"
                    },
                    "limitedOptions": {
                        "type": "boolean"
                    }
                }
            },
            "AccountClose": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "closeReason": {
                        "type": "string"
                    }
                }
            },
            "AccountCloseInstruction": {
                "maxProperties": 4,
                "minProperties": 2,
                "required": [
                    "accountId",
                    "clientInstructionId"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "closeReason": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string",
                        "example": "Input your reason of closure here"
                    },
                    "withdrawalInfo": {
                        "maxProperties": 2,
                        "minProperties": 0,
                        "required": [
                            "bankInstructionMethod",
                            "bankInstructionName"
                        ],
                        "type": "object",
                        "properties": {
                            "bankInstructionName": {
                                "maxLength": 150,
                                "minLength": 1,
                                "type": "string",
                                "example": "Bank Instruction Name"
                            },
                            "bankInstructionMethod": {
                                "type": "string",
                                "example": "WIRE",
                                "enum": [
                                    "ACH",
                                    "WIRE",
                                    "CHECK"
                                ]
                            }
                        }
                    }
                }
            },
            "AccountConfiguration": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "boolean"
                    }
                }
            },
            "AccountConfigurationType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "xml": {
                            "attribute": true
                        }
                    },
                    "value": {
                        "type": "boolean",
                        "xml": {
                            "attribute": true
                        }
                    }
                }
            },
            "AccountData": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "masterAccountId": {
                        "type": "string"
                    },
                    "mainAccount": {
                        "type": "string"
                    },
                    "sourceAccountId": {
                        "type": "string"
                    },
                    "primaryUser": {
                        "type": "string"
                    },
                    "clearingStatus": {
                        "type": "string"
                    },
                    "clearingStatusDescription": {
                        "type": "string"
                    },
                    "stateCode": {
                        "type": "string"
                    },
                    "baseCurrency": {
                        "type": "string"
                    },
                    "dateBegun": {
                        "type": "string"
                    },
                    "dateApproved": {
                        "type": "string"
                    },
                    "dateOpened": {
                        "type": "string"
                    },
                    "dateFunded": {
                        "type": "string"
                    },
                    "dateClosed": {
                        "type": "string"
                    },
                    "dateLinked": {
                        "type": "string"
                    },
                    "dateDelinked": {
                        "type": "string"
                    },
                    "accountTitle": {
                        "type": "string"
                    },
                    "officialTitle": {
                        "type": "string"
                    },
                    "accountAlias": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "margin": {
                        "type": "string"
                    },
                    "applicantType": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "stockYieldProgram": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "feeTemplate": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "capabilities": {
                        "type": "object",
                        "additionalProperties": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "limitedOptionTrading": {
                        "type": "string"
                    },
                    "investmentObjectives": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "mifidCategory": {
                        "type": "string"
                    },
                    "mifirStatus": {
                        "type": "string"
                    },
                    "equity": {
                        "type": "number",
                        "format": "double"
                    },
                    "household": {
                        "type": "string"
                    },
                    "propertyProfile": {
                        "type": "string"
                    },
                    "processType": {
                        "type": "string"
                    },
                    "riskScore": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "class_action_program": {
                        "type": "string"
                    },
                    "trustType": {
                        "type": "string"
                    },
                    "orgType": {
                        "type": "string"
                    },
                    "businessDescription": {
                        "type": "string"
                    },
                    "usTaxPurposeType": {
                        "type": "string"
                    },
                    "tradeIntentionType": {
                        "type": "string"
                    },
                    "registeredAddress": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "mailing": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "countryOfCorporation": {
                        "type": "string"
                    },
                    "taxIds": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "taxTreatyDetails": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "AccountDetailsResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "account": {
                        "$ref": "#/components/schemas/AccountData"
                    },
                    "associatedPersons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedPerson"
                        }
                    },
                    "associatedEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    },
                    "withHoldingStatement": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "marketData": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "financialInformation": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "sourcesOfWealth": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "tradeBundles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "individualIRABeneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualIRABene"
                        }
                    },
                    "entityIRABeneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityIRABene"
                        }
                    },
                    "decedents": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "restrictions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RestrictionInfo"
                        }
                    }
                }
            },
            "AccountManagementRequests": {
                "type": "object",
                "properties": {
                    "updateExternalId": {
                        "$ref": "#/components/schemas/UpdateExternalId"
                    },
                    "updatePropertyProfile": {
                        "$ref": "#/components/schemas/UpdatePropertyProfile"
                    },
                    "updateAccountAlias": {
                        "$ref": "#/components/schemas/UpdateAccountAlias"
                    },
                    "changeBaseCurrency": {
                        "$ref": "#/components/schemas/ChangeBaseCurrency"
                    },
                    "abandonAccount": {
                        "$ref": "#/components/schemas/AbandonAccount"
                    },
                    "addNewUser": {
                        "$ref": "#/components/schemas/AddNewUser"
                    },
                    "addLevFxCapability": {
                        "$ref": "#/components/schemas/AddLEVFXCapability"
                    },
                    "addMiFirData": {
                        "$ref": "#/components/schemas/AddMiFIRData"
                    },
                    "addTradingPermissions": {
                        "$ref": "#/components/schemas/AddTradingPermissions"
                    },
                    "removeTradingPermissions": {
                        "$ref": "#/components/schemas/RemoveTradingPermissions"
                    },
                    "changeMarginType": {
                        "$ref": "#/components/schemas/ChangeMarginType"
                    },
                    "addCLPCapability": {
                        "$ref": "#/components/schemas/AddCLPCapability"
                    },
                    "changeFinancialInformation": {
                        "$ref": "#/components/schemas/ChangeFinancialInformation"
                    },
                    "resetAbandonedAccount": {
                        "$ref": "#/components/schemas/ResetAbandonedAccount"
                    },
                    "updateCredentials": {
                        "$ref": "#/components/schemas/UpdateCredentials"
                    },
                    "updateAccountRepresentatives": {
                        "$ref": "#/components/schemas/UpdateAccountRepresentatives"
                    },
                    "completeLoginMessage": {
                        "$ref": "#/components/schemas/CompleteLoginMessage"
                    },
                    "reopenAccount": {
                        "$ref": "#/components/schemas/ReopenAccount"
                    },
                    "enrollInSyep": {
                        "$ref": "#/components/schemas/EnrollInSYEP"
                    },
                    "leaveSyep": {
                        "$ref": "#/components/schemas/LeaveSYEP"
                    },
                    "enrollInDrip": {
                        "$ref": "#/components/schemas/EnrollInDRIP"
                    },
                    "leaveDrip": {
                        "$ref": "#/components/schemas/LeaveDRIP"
                    },
                    "updateW8Ben": {
                        "$ref": "#/components/schemas/UpdateW8BEN"
                    },
                    "yodleeSession": {
                        "$ref": "#/components/schemas/YodleeSession"
                    },
                    "enableAccountInBrokerage": {
                        "$ref": "#/components/schemas/EnableAccountInBrokerage"
                    },
                    "disableAccountInBrokerage": {
                        "$ref": "#/components/schemas/DisableAccountInBrokerage"
                    },
                    "linkDuplicateAccount": {
                        "$ref": "#/components/schemas/LinkDuplicateAccount"
                    },
                    "duplicateAccount": {
                        "$ref": "#/components/schemas/DuplicateAccount"
                    },
                    "achInstruction": {
                        "$ref": "#/components/schemas/ACHInstruction"
                    },
                    "recurringTransaction": {
                        "$ref": "#/components/schemas/RecurringTransaction"
                    },
                    "depositNotification": {
                        "$ref": "#/components/schemas/DepositNotification"
                    },
                    "documentSubmission": {
                        "$ref": "#/components/schemas/DocumentSubmission"
                    },
                    "processDocuments": {
                        "$ref": "#/components/schemas/ProcessDocuments"
                    },
                    "updateBcan": {
                        "$ref": "#/components/schemas/UpdateBCAN"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaire"
                    },
                    "updateWithholdingStatement": {
                        "$ref": "#/components/schemas/UpdateWithholdingStatement"
                    },
                    "accreditedInvestor": {
                        "$ref": "#/components/schemas/AccreditedInvestor"
                    },
                    "changeAccountHolderDetail": {
                        "$ref": "#/components/schemas/ChangeAccountHolderDetail"
                    },
                    "getJavaScript": {
                        "$ref": "#/components/schemas/GetJavaScript"
                    },
                    "updateUserAccessRights": {
                        "$ref": "#/components/schemas/UpdateUserAccessRights"
                    },
                    "informationChange": {
                        "$ref": "#/components/schemas/InformationChange"
                    },
                    "addAdditionalAccount": {
                        "$ref": "#/components/schemas/AddAdditionalAccount"
                    },
                    "accountConfiguration": {
                        "$ref": "#/components/schemas/AccountConfiguration"
                    },
                    "allocateVan": {
                        "$ref": "#/components/schemas/AllocateVAN"
                    },
                    "createUserForSecondHolder": {
                        "$ref": "#/components/schemas/CreateUserForSecondHolder"
                    },
                    "createUser": {
                        "$ref": "#/components/schemas/CreateUser"
                    },
                    "updateTaxForm": {
                        "$ref": "#/components/schemas/UpdateTaxForm"
                    },
                    "questionnaires": {
                        "$ref": "#/components/schemas/Questionnaires"
                    },
                    "securityQuestions": {
                        "$ref": "#/components/schemas/SecurityQuestions"
                    },
                    "applyFeeTemplate": {
                        "$ref": "#/components/schemas/ApplyFeeTemplate"
                    },
                    "accountClose": {
                        "$ref": "#/components/schemas/AccountClose"
                    },
                    "manageMarketDataSubscriptions": {
                        "$ref": "#/components/schemas/ManageMarketDataSubscriptions"
                    },
                    "quizQuestionnaires": {
                        "$ref": "#/components/schemas/QuizQuestionnaires"
                    }
                }
            },
            "AccountManagementRequestsPayload": {
                "type": "object",
                "properties": {
                    "accountManagementRequests": {
                        "$ref": "#/components/schemas/AccountManagementRequests"
                    }
                }
            },
            "AccountRep": {
                "type": "object",
                "properties": {
                    "repDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepDetail"
                        }
                    },
                    "included": {
                        "type": "boolean"
                    }
                }
            },
            "AccountStatusBulkResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountStatusResponse"
                        }
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AccountStatusRequest": {
                "required": [
                    "endDate",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "offset": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "N",
                            "O",
                            "P",
                            "C",
                            "A",
                            "E",
                            "F",
                            "I",
                            "J",
                            "L",
                            "M",
                            "R",
                            "W",
                            "Q"
                        ]
                    }
                }
            },
            "AccountStatusResponse": {
                "type": "object",
                "properties": {
                    "dateOpened": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateStarted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateClosed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "masterAccountId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "AccountSupportType": {
                "type": "object",
                "properties": {
                    "businessDescription": {
                        "type": "string"
                    },
                    "primaryContributor": {
                        "$ref": "#/components/schemas/PrimaryContributorType"
                    },
                    "administrator": {
                        "$ref": "#/components/schemas/AdministratorType"
                    },
                    "administratorContactPerson": {
                        "$ref": "#/components/schemas/AdministratorContactPersonType"
                    },
                    "ownersResideUS": {
                        "type": "boolean"
                    },
                    "solicitOwnersResideUS": {
                        "type": "boolean"
                    },
                    "acceptOwnersResideUS": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "FINANCIALINSTITUTION",
                            "PROPRIETARYTRADING",
                            "FAMILYINVVEHICLE",
                            "OPERATINGBUSINESS",
                            "BROKERDEALER",
                            "LICENSEDADVISOR"
                        ]
                    }
                }
            },
            "AccreditedInvestor": {
                "type": "object",
                "properties": {
                    "qualifiedPurchaser": {
                        "$ref": "#/components/schemas/QualifiedPurchaser"
                    },
                    "eligibleContractParticipant": {
                        "$ref": "#/components/schemas/EligibleContractParticipant"
                    },
                    "signedBy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "signature": {
                        "type": "string"
                    }
                }
            },
            "AccreditedInvestorInformation": {
                "type": "object",
                "properties": {
                    "q1": {
                        "type": "boolean"
                    },
                    "q2": {
                        "type": "boolean"
                    },
                    "q3": {
                        "type": "boolean"
                    },
                    "q4": {
                        "type": "boolean"
                    },
                    "q5": {
                        "type": "boolean"
                    }
                }
            },
            "AchInstruction": {
                "maxProperties": 7,
                "minProperties": 7,
                "required": [
                    "accountId",
                    "achType",
                    "bankInstructionCode",
                    "bankInstructionName",
                    "clientAccountInfo",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "bankInstructionCode": {
                        "type": "string",
                        "example": "USACH",
                        "enum": [
                            "CAACH",
                            "USACH"
                        ]
                    },
                    "achType": {
                        "type": "string",
                        "example": "DEBIT_CREDIT",
                        "enum": [
                            "DEBIT",
                            "CREDIT",
                            "DEBIT_CREDIT"
                        ]
                    },
                    "bankInstructionName": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "example": "TestInstr"
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U223454"
                    },
                    "clientAccountInfo": {
                        "maxProperties": 4,
                        "minProperties": 4,
                        "required": [
                            "bankAccountNumber",
                            "bankAccountTypeCode",
                            "bankName",
                            "bankRoutingNumber"
                        ],
                        "type": "object",
                        "properties": {
                            "bankRoutingNumber": {
                                "maxLength": 24,
                                "minLength": 1,
                                "type": "string",
                                "example": "202012983"
                            },
                            "bankAccountNumber": {
                                "maxLength": 32,
                                "minLength": 1,
                                "type": "string",
                                "example": "-1811638121"
                            },
                            "bankName": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string",
                                "example": "JPM Chase"
                            },
                            "bankAccountTypeCode": {
                                "type": "number",
                                "enum": [
                                    "0",
                                    "1",
                                    "2"
                                ]
                            }
                        }
                    }
                }
            },
            "AddAdditionalAccount": {
                "type": "object",
                "properties": {
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "AddCLPCapability": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                }
            },
            "AddEntity": {
                "type": "object",
                "properties": {
                    "addRelationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddRelationship"
                        }
                    },
                    "individual": {
                        "$ref": "#/components/schemas/Individual"
                    },
                    "legalEntity": {
                        "$ref": "#/components/schemas/LegalEntity"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                }
            },
            "AddLEVFXCapability": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "AddMiFIRData": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "identifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Identification"
                        }
                    }
                }
            },
            "AddNewUser": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "userDetails": {
                        "$ref": "#/components/schemas/UserDetails"
                    }
                }
            },
            "AddRelationship": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "Account_Holder",
                            "Spouse",
                            "Firstholder",
                            "Secondholder",
                            "Trader",
                            "Secretary",
                            "Treasurer",
                            "Ceo",
                            "Owner",
                            "Trustee",
                            "Beneficiary",
                            "Grantor",
                            "Director",
                            "Principal",
                            "Shareholder",
                            "Partner",
                            "Controlling_Officer",
                            "Beneficialowner",
                            "Signatory",
                            "Comp_Officer",
                            "Superv_Broker",
                            "Pooled_User",
                            "Financial_User",
                            "Contingent",
                            "Ira_Beneficiary",
                            "Employee",
                            "Non_Employee",
                            "Fund_Admin",
                            "Fund_Contact",
                            "Firm_Admin",
                            "Firm_Billing",
                            "Firm_Clearing",
                            "Firm_Sales",
                            "Firm_Trading",
                            "Firm_User",
                            "Account_Admin",
                            "Account_Billing",
                            "Account_Clearing",
                            "Account_Sales",
                            "Account_Trading",
                            "User_Individual",
                            "Fund_Manager",
                            "Investment_Advisor",
                            "Shf_Investmanager",
                            "Advisory_Principal",
                            "Advisory_Signatory",
                            "Associated_Fund",
                            "Primary_Contributor",
                            "Administrator",
                            "Contact",
                            "Lead_Compliance_Officer",
                            "Compliance_Officer",
                            "Other_Officer",
                            "Apply_User",
                            "Transfer_On_Death_Legator",
                            "Tod_Primary_Beneficiary",
                            "Tod_Contingent_Beneficiary",
                            "Nominee",
                            "Nominee_Guardian",
                            "Ira_Decedent",
                            "Authorized_Person",
                            "Promoter",
                            "Wholetime_Director",
                            "Nominee_Owner",
                            "Third_Party_Admin",
                            "Compliance_Contact",
                            "Trust_Controller",
                            "Trust_Applicant",
                            "Organization_Applicant",
                            "Mm_Contact",
                            "Reg_Rep",
                            "Plan_Sponsor",
                            "Plan_Sponsor_Officer",
                            "Pension_Admin",
                            "Pension_Admin_Contact",
                            "Accountant",
                            "Joint_Applicant",
                            "Custodian_Employee",
                            "Successor_Custodian",
                            "Custodian",
                            "Successor_Custodian_Employee",
                            "Chief_Compliance_Officer",
                            "Chief_Financial_Officer",
                            "Trading_Officer",
                            "Child",
                            "Parent",
                            "Sibling",
                            "Estate",
                            "As_Interest_May_Appear",
                            "Ira_Present_Trust",
                            "Other",
                            "Life_Partner",
                            "Common_Law_Partner",
                            "Grandchild",
                            "Charity",
                            "Trust_Ira",
                            "Successor_Holder",
                            "Head_Of_Desk",
                            "Cftc_Non_Applicant_Ocr_Contact",
                            "Ocr_Account_Controller",
                            "Cftc_Applicant_Ocr_Contact"
                        ]
                    },
                    "ownershipPercentage": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AddTradingPermissions": {
                "type": "object",
                "properties": {
                    "tradingPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradingPermission"
                        }
                    },
                    "documentSubmission": {
                        "$ref": "#/components/schemas/DocumentSubmission"
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "Address": {
                "type": "object",
                "properties": {
                    "street1": {
                        "type": "string"
                    },
                    "street2": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    }
                }
            },
            "AdministratorContactPersonType": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "middleInitial": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string",
                        "enum": [
                            "Jr.",
                            "Sr.",
                            "I",
                            "II",
                            "III",
                            "IV",
                            "V"
                        ]
                    },
                    "phoneNumber": {
                        "type": "string"
                    }
                }
            },
            "AdministratorType": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "middleInitial": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string",
                        "enum": [
                            "Jr.",
                            "Sr.",
                            "I",
                            "II",
                            "III",
                            "IV",
                            "V"
                        ]
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    }
                }
            },
            "AdvisorWrapFeesType": {
                "type": "object",
                "properties": {
                    "automatedFeesDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutomatedWrapFeeDetailsType"
                        }
                    },
                    "highWaterMarkConfigHwma": {
                        "$ref": "#/components/schemas/HighWaterMarkType"
                    },
                    "highWaterMarkConfigHwmq": {
                        "$ref": "#/components/schemas/HighWaterMarkType"
                    },
                    "strategy": {
                        "type": "string",
                        "enum": [
                            "AUTOMATED",
                            "DIRECTBILLING",
                            "NO_FEE"
                        ]
                    },
                    "chargeAdvisor": {
                        "type": "boolean"
                    },
                    "chargeOtherFeesToAdvisor": {
                        "type": "boolean"
                    }
                }
            },
            "AffiliationDetailsType": {
                "type": "object",
                "properties": {
                    "affiliationRelationship": {
                        "type": "string",
                        "enum": [
                            "Self",
                            "Spouse",
                            "Parent",
                            "Child",
                            "Other"
                        ]
                    },
                    "personName": {
                        "type": "string"
                    },
                    "companyId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "company": {
                        "type": "string"
                    },
                    "companyMailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "companyPhone": {
                        "type": "string"
                    },
                    "companyEmailAddress": {
                        "type": "string"
                    },
                    "duplicateStmtRequired": {
                        "type": "boolean"
                    }
                }
            },
            "AllocateVAN": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "JPY",
                            "HKD",
                            "AUD",
                            "CHF",
                            "MXN",
                            "SEK",
                            "NZD",
                            "HUF",
                            "CZK",
                            "CNH",
                            "DKK",
                            "RUB",
                            "ILS",
                            "NOK",
                            "SGD",
                            "PLN",
                            "ZAR",
                            "AED",
                            "KRW",
                            "SAR",
                            "TRY"
                        ]
                    },
                    "countryCode": {
                        "type": "string"
                    }
                }
            },
            "AllowedScopeSet": {
                "type": "object",
                "properties": {
                    "scopes": {
                        "$ref": "#/components/schemas/RegisteredScopeSet"
                    }
                }
            },
            "AmRequestStatusResponse": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "string"
                    },
                    "requestType": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "acctId": {
                        "type": "string"
                    }
                }
            },
            "AnnualBlendedPercentage": {
                "type": "object",
                "properties": {
                    "blendedFrom": {
                        "type": "string"
                    },
                    "blendedTo": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "string"
                    }
                }
            },
            "Answer": {
                "type": "object",
                "properties": {
                    "answerDetail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnswerDetail"
                        }
                    },
                    "detail": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "questionId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AnswerDetail": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    }
                }
            },
            "Application": {
                "type": "object",
                "properties": {
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "additionalAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddAdditionalAccount"
                        }
                    },
                    "masterAccountId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    },
                    "translation": {
                        "type": "boolean"
                    },
                    "paperAccount": {
                        "type": "boolean"
                    }
                }
            },
            "ApplicationPayload": {
                "type": "object",
                "properties": {
                    "application": {
                        "$ref": "#/components/schemas/Application"
                    }
                }
            },
            "ApplyFeeTemplate": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                }
            },
            "ApplyFeeTemplateInstruction": {
                "maxProperties": 3,
                "minProperties": 3,
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "templateName"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "templateName": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "Test template"
                    }
                }
            },
            "ArrayNode": {
                "type": "object"
            },
            "AssetExperience": {
                "type": "object",
                "properties": {
                    "assetClass": {
                        "type": "string",
                        "enum": [
                            "BILL",
                            "BOND",
                            "CASH",
                            "CFD",
                            "COMB",
                            "FOP",
                            "FUND",
                            "FUT",
                            "OPT",
                            "SSF",
                            "STK",
                            "WAR",
                            "MRGN"
                        ]
                    },
                    "yearsTrading": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "tradesPerYear": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "knowledgeLevel": {
                        "type": "string",
                        "enum": [
                            "Extensive",
                            "Good",
                            "Limited",
                            "None"
                        ]
                    }
                }
            },
            "AssociatedEntities": {
                "type": "object",
                "properties": {
                    "associatedIndividuals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedIndividual"
                        }
                    },
                    "associatedEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedEntity"
                        }
                    }
                }
            },
            "AssociatedEntity": {
                "type": "object",
                "properties": {
                    "entityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalCode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "organizationCountry": {
                        "type": "string"
                    },
                    "phones": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "residence": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "mailing": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "associations": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "identityDocuments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "taxTreatyDetails": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "AssociatedPersons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedPerson"
                        }
                    }
                }
            },
            "AssociatedIndividual": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "nativeName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "birthName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "motherMaidenName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the applicant. The applicant must be 18 years or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error will be triggered and the account will not be created.</li><li>If YYYY-MM-DD < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.</li><li>This application must be opened using the front-end application which is available within the IBKR Portal.</li><li>Assets held in a single account managed by a single Custodian user.</li><li>Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.</li></ul>",
                        "example": "1990-08-14"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "cityOfBirth": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "Male",
                            "Female"
                        ]
                    },
                    "maritalStatus": {
                        "type": "string",
                        "enum": [
                            "S",
                            "M",
                            "W",
                            "D",
                            "C"
                        ]
                    },
                    "numDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/ResidenceAddress"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "$ref": "#/components/schemas/EmploymentDetails"
                    },
                    "employeeTitle": {
                        "type": "string"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaireList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "authorizedToSignOnBehalfOfOwner": {
                        "type": "boolean"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    },
                    "primaryTrustee": {
                        "type": "boolean"
                    },
                    "ownershipPercentage": {
                        "type": "number"
                    },
                    "titles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Title"
                        }
                    },
                    "authorizedPerson": {
                        "type": "boolean"
                    },
                    "referenceUsername": {
                        "type": "string"
                    }
                }
            },
            "AssociatedPerson": {
                "type": "object",
                "properties": {
                    "entityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "middleInitial": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "passwordDate": {
                        "type": "string"
                    },
                    "userStatus": {
                        "type": "string"
                    },
                    "lastLogin": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "maritalStatus": {
                        "type": "string"
                    },
                    "salutation": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "countryOfCitizenship": {
                        "type": "string"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "motersMaidenName": {
                        "type": "string"
                    },
                    "numberOfDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "securityDevice": {
                        "type": "string"
                    },
                    "commercial": {
                        "type": "string"
                    },
                    "phones": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "residence": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "mailing": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "associations": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "identityDocuments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "subscribedServices": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "taxTreatyDetails": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "AssociationTypeEntities": {
                "type": "object",
                "properties": {
                    "individual": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedIndividual"
                        }
                    },
                    "legalEntity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalEntity"
                        }
                    }
                }
            },
            "AsynchronousInstructionResponse": {
                "$ref": "#/components/schemas/InstructionResponse"
            },
            "AttachedFileType": {
                "type": "object",
                "properties": {
                    "fileName": {
                        "type": "string"
                    },
                    "fileLength": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sha1Checksum": {
                        "type": "string"
                    }
                }
            },
            "Au10TixDetailResponse": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiryDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "AutomatedWrapFeeDetailsType": {
                "type": "object",
                "properties": {
                    "perTradeMarkups": {
                        "$ref": "#/components/schemas/CommissionScheduleType"
                    },
                    "annualBlendedPercentages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnnualBlendedPercentage"
                        }
                    },
                    "navRanges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NAVRangeType"
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ANNUALFLATFEE",
                            "ANNUALFLATFEE_MONTHLY",
                            "ANNUALFLATFEE_QUATERLY",
                            "PERCENTOFEQUITY",
                            "PERCENTOFEQUITY_MONTHLY",
                            "PERCENTOFEQUITY_QUATERLY",
                            "PERCENTOFEQUITY_QUARTERLY",
                            "BLENDEDPERCENTOFEQUITY",
                            "BLENDEDPERCENTOFEQUITY_MONTHLY",
                            "BLENDEDPERCENTOFEQUITY_QUARTERLY",
                            "PERCENTOFPROFIT",
                            "PERCENTOFPROFIT_QUARTER",
                            "INVOICE_LIMIT",
                            "INVOICE_LIMIT_Q",
                            "PERTRADE"
                        ]
                    },
                    "maxFee": {
                        "type": "number"
                    },
                    "numContracts": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "postFrequency": {
                        "type": "string"
                    },
                    "percentOfNLVCap": {
                        "type": "string"
                    },
                    "percentOfNLVCapQ": {
                        "type": "string"
                    }
                }
            },
            "AvailableStatementDatesData": {
                "type": "object",
                "properties": {
                    "dataType": {
                        "type": "string",
                        "example": "String"
                    },
                    "value": {
                        "type": "object",
                        "properties": {
                            "daily": {
                                "type": "object",
                                "properties": {
                                    "startDate": {
                                        "type": "string",
                                        "description": "daily report start date"
                                    },
                                    "endDate": {
                                        "type": "string",
                                        "description": "daily report end date"
                                    }
                                }
                            },
                            "monthly": {
                                "type": "array",
                                "description": "monthly available reports",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "annual": {
                                "type": "array",
                                "description": "annual available reports",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AvailableTaxFormsData": {
                "type": "object",
                "properties": {
                    "dataType": {
                        "type": "string",
                        "example": "String"
                    },
                    "value": {
                        "type": "object",
                        "properties": {
                            "forms": {
                                "type": "array",
                                "description": "available tax forms",
                                "items": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/TaxFormType"
                                }
                            }
                        }
                    }
                }
            },
            "Base64UrlString": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "BulkMultiStatusResponse": {
                "required": [
                    "instructionSetId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 207
                    },
                    "instructionSetId": {
                        "type": "number",
                        "example": -1988905739
                    },
                    "instructionResults": {
                        "type": "array"
                    }
                }
            },
            "BusinessRejectResponse": {
                "required": [
                    "instructionSetId",
                    "status",
                    "status",
                    "title",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Business Error"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 422
                    },
                    "instructionSetId": {
                        "type": "integer",
                        "format": "int32",
                        "example": 8389943
                    },
                    "instructionResult": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InstructionErrorResult"
                            }
                        ]
                    }
                }
            },
            "CancelInstruction": {
                "maxProperties": 3,
                "minProperties": 3,
                "required": [
                    "clientInstructionId",
                    "instructionId",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "instructionId": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 43085477
                    },
                    "reason": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string",
                        "example": "Testing"
                    }
                }
            },
            "ChangeAccountHolderDetail": {
                "type": "object",
                "properties": {
                    "newAccountHolderDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedIndividual"
                        }
                    },
                    "documents": {
                        "$ref": "#/components/schemas/DocumentSubmission"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "referenceUserName": {
                        "type": "string"
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    },
                    "translation": {
                        "type": "boolean"
                    }
                }
            },
            "ChangeBaseCurrency": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "newBaseCurrency": {
                        "type": "string"
                    }
                }
            },
            "ChangeFinancialInformation": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "referenceUserName": {
                        "type": "string"
                    },
                    "newFinancialInformation": {
                        "$ref": "#/components/schemas/FinancialInformation"
                    }
                }
            },
            "ChangeMarginType": {
                "type": "object",
                "properties": {
                    "documentSubmission": {
                        "$ref": "#/components/schemas/DocumentSubmission"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "newMargin": {
                        "type": "string"
                    }
                }
            },
            "CheckDetails": {
                "type": "object",
                "properties": {
                    "checkNumber": {
                        "type": "string"
                    },
                    "routingNumber": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    }
                }
            },
            "ClientPublicKey": {
                "required": [
                    "keyId"
                ],
                "type": "object",
                "properties": {
                    "keyId": {
                        "type": "string"
                    },
                    "keyBitSize": {
                        "minimum": 3072,
                        "type": "integer",
                        "format": "int32"
                    },
                    "keyStatus": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "symmetric": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "asymmetric": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "ClientPublicKeySet": {
                "required": [
                    "keys"
                ],
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClientPublicKey"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "CommissionConfig": {
                "type": "object",
                "properties": {
                    "style": {
                        "type": "string",
                        "enum": [
                            "Bundled",
                            "Unbundled"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Commodities",
                            "Securities"
                        ]
                    }
                }
            },
            "CommissionMarkupType": {
                "type": "object",
                "properties": {
                    "stairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarkupStaircaseType"
                        }
                    },
                    "code": {
                        "type": "string"
                    },
                    "minimum": {
                        "type": "number"
                    },
                    "maximum": {
                        "type": "number"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "FA",
                            "FM",
                            "PM"
                        ]
                    },
                    "amount": {
                        "type": "number"
                    },
                    "plusCost": {
                        "type": "boolean"
                    },
                    "ticketCharge": {
                        "type": "number"
                    }
                }
            },
            "CommissionScheduleType": {
                "type": "object",
                "properties": {
                    "markups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommissionMarkupType"
                        }
                    },
                    "pricingStructure": {
                        "type": "string",
                        "enum": [
                            "FIXED",
                            "TIERED"
                        ]
                    }
                }
            },
            "CompleteLoginMessage": {
                "type": "object",
                "properties": {
                    "loginMessageIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "ComplexAssetTransferInstruction": {
                "maxProperties": 7,
                "minProperties": 6,
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "contraBrokerInfo",
                    "direction",
                    "quantity",
                    "tradingInstrument"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "direction": {
                        "type": "string",
                        "example": "IN",
                        "enum": [
                            "IN",
                            "OUT"
                        ]
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "quantity": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 1000
                    },
                    "tradingInstrument": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TradingInstrument"
                            }
                        ]
                    },
                    "contraBrokerInfo": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContraBrokerInfo"
                            }
                        ]
                    },
                    "nonDisclosedDetail": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NonDisclosedDetail"
                            }
                        ]
                    }
                }
            },
            "Conid": {
                "type": "number",
                "description": "IB Contract Numeric Id (conid)",
                "example": 123456
            },
            "ContraBrokerInfo": {
                "maxProperties": 8,
                "minProperties": 7,
                "required": [
                    "accountType",
                    "brokerAccountId",
                    "brokerName",
                    "contactEmail",
                    "contactPhone",
                    "country",
                    "depositoryId"
                ],
                "type": "object",
                "properties": {
                    "accountType": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "ORG"
                    },
                    "brokerName": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "example": "JP MORGAN"
                    },
                    "depositoryId": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "1234"
                    },
                    "brokerAccountId": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "as3456567678578N"
                    },
                    "country": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "United States"
                    },
                    "contactName": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "as"
                    },
                    "contactEmail": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "a@gmail.com"
                    },
                    "contactPhone": {
                        "maxLength": 16,
                        "minLength": 1,
                        "type": "number",
                        "example": 2039126155
                    }
                }
            },
            "CounterpartyPermission": {
                "required": [
                    "permission_name"
                ],
                "type": "object",
                "properties": {
                    "permission_name": {
                        "type": "string"
                    },
                    "instruction_type_name": {
                        "type": "string"
                    },
                    "permission_status": {
                        "type": "string",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "DISABLED",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "CreateBrowserSessionRequest": {
                "required": [
                    "credential",
                    "ip"
                ],
                "type": "object",
                "properties": {
                    "credential": {
                        "type": "string",
                        "example": "ddowney2"
                    },
                    "ip": {
                        "type": "string",
                        "example": "10.10.10.10"
                    }
                }
            },
            "CreateBrowserSessionResponse": {
                "required": [
                    "access_token"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string",
                        "example": "https://www.interactivebrokers.com/sso/..."
                    }
                }
            },
            "CreateSessionRequest": {
                "required": [
                    "credential",
                    "ip"
                ],
                "type": "object",
                "properties": {
                    "credential": {
                        "type": "string",
                        "example": "ddowney2"
                    },
                    "ip": {
                        "type": "string",
                        "example": "10.10.10.10"
                    },
                    "service": {
                        "type": "string"
                    },
                    "alternativeIps": {
                        "type": "array",
                        "example": [
                            "10.10.10.11",
                            "10.10.10.12"
                        ],
                        "items": {
                            "type": "string",
                            "example": "10.10.10.11"
                        }
                    }
                }
            },
            "CreateSessionResponse": {
                "required": [
                    "access_token"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "access_token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1..."
                    },
                    "token_type": {
                        "type": "string",
                        "example": "Bearer"
                    }
                }
            },
            "CreateUser": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    }
                }
            },
            "CreateUserForSecondHolder": {
                "type": "object",
                "properties": {
                    "userName": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "CustodianType": {
                "type": "object",
                "properties": {
                    "individual": {
                        "$ref": "#/components/schemas/Individual"
                    },
                    "legalEntity": {
                        "$ref": "#/components/schemas/LegalEntity"
                    },
                    "employee": {
                        "$ref": "#/components/schemas/Individual"
                    }
                }
            },
            "Customer": {
                "type": "object",
                "properties": {
                    "organization": {
                        "$ref": "#/components/schemas/OrganizationApplicant"
                    },
                    "accountHolder": {
                        "$ref": "#/components/schemas/IndividualApplicant"
                    },
                    "jointHolders": {
                        "$ref": "#/components/schemas/JointApplicant"
                    },
                    "trust": {
                        "$ref": "#/components/schemas/TrustApplicant"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "transferUsMicroCapStock": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "INDIVIDUAL",
                            "JOINT",
                            "TRUST",
                            "UGMA",
                            "UTMA",
                            "ORG",
                            "IRA"
                        ]
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "userNameAlias": {
                        "type": "string"
                    },
                    "userNameSource": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "mdStatusNonPro": {
                        "type": "boolean"
                    },
                    "preferredPrimaryLanguage": {
                        "type": "string"
                    },
                    "preferredSecondaryLanguage": {
                        "type": "string"
                    },
                    "legalResidenceCountry": {
                        "type": "string"
                    },
                    "taxTreatyCountry": {
                        "type": "string"
                    },
                    "meetAmlStandard": {
                        "type": "string"
                    },
                    "meetsAmlStandard": {
                        "type": "string"
                    },
                    "directTradingAccess": {
                        "type": "boolean"
                    },
                    "originCountry": {
                        "type": "string"
                    },
                    "terminationAge": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "governingState": {
                        "type": "string"
                    },
                    "optForDebitCard": {
                        "type": "boolean"
                    },
                    "roboFaClient": {
                        "type": "boolean"
                    },
                    "independentAccount": {
                        "type": "boolean"
                    },
                    "paperAccount": {
                        "type": "boolean"
                    }
                }
            },
            "DVPInstruction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "externalAccountID": {
                        "type": "string"
                    },
                    "accountID": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "DTCID",
                            "NSCC",
                            "CMTA",
                            "GUS",
                            "OCCSSF"
                        ]
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "E",
                            "C",
                            "B"
                        ]
                    },
                    "agentID": {
                        "type": "string"
                    },
                    "firmID": {
                        "type": "string"
                    },
                    "agentName": {
                        "type": "string"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "dayDoID": {
                        "type": "string"
                    },
                    "txGroupCode": {
                        "type": "string",
                        "enum": [
                            "G",
                            "Z",
                            "R",
                            "N"
                        ]
                    },
                    "brokerCode": {
                        "type": "string"
                    },
                    "assetClass": {
                        "type": "string",
                        "enum": [
                            "BILL",
                            "BOND",
                            "CASH",
                            "CFD",
                            "COMB",
                            "FOP",
                            "FUND",
                            "FUT",
                            "OPT",
                            "SSF",
                            "STK",
                            "WAR",
                            "MRGN"
                        ]
                    },
                    "exchange": {
                        "type": "string",
                        "enum": [
                            "NYSE",
                            "AMEX",
                            "NASDAQ",
                            "CBOE",
                            "ISE",
                            "BOX",
                            "PHLX",
                            "PSE"
                        ]
                    },
                    "prepayTax": {
                        "type": "boolean"
                    },
                    "prepayCommission": {
                        "type": "boolean"
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date"
                    },
                    "default": {
                        "type": "boolean"
                    }
                }
            },
            "DateOfBirth": {
                "type": "object",
                "properties": {
                    "dateOfBirth": {
                        "type": "string"
                    }
                }
            },
            "DayQuantityLimit": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string",
                        "enum": [
                            "BILL",
                            "BOND",
                            "CASH",
                            "CFD",
                            "COMB",
                            "FOP",
                            "FUND",
                            "FUT",
                            "OPT",
                            "SSF",
                            "STK",
                            "WAR",
                            "MRGN"
                        ]
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DeleteBankInstruction": {
                "maxProperties": 5,
                "minProperties": 5,
                "required": [
                    "accountId",
                    "bankInstructionMethod",
                    "bankInstructionName",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U32343"
                    },
                    "bankInstructionName": {
                        "maxLength": 150,
                        "minLength": 1,
                        "type": "string",
                        "example": "Test-instruction"
                    },
                    "bankInstructionMethod": {
                        "type": "string",
                        "example": "WIRE",
                        "enum": [
                            "WIRE",
                            "ACH"
                        ]
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    }
                }
            },
            "DeleteEntity": {
                "type": "object",
                "properties": {
                    "ibEntityId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DeleteRelationship": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "Account_Holder",
                            "Spouse",
                            "Firstholder",
                            "Secondholder",
                            "Trader",
                            "Secretary",
                            "Treasurer",
                            "Ceo",
                            "Owner",
                            "Trustee",
                            "Beneficiary",
                            "Grantor",
                            "Director",
                            "Principal",
                            "Shareholder",
                            "Partner",
                            "Controlling_Officer",
                            "Beneficialowner",
                            "Signatory",
                            "Comp_Officer",
                            "Superv_Broker",
                            "Pooled_User",
                            "Financial_User",
                            "Contingent",
                            "Ira_Beneficiary",
                            "Employee",
                            "Non_Employee",
                            "Fund_Admin",
                            "Fund_Contact",
                            "Firm_Admin",
                            "Firm_Billing",
                            "Firm_Clearing",
                            "Firm_Sales",
                            "Firm_Trading",
                            "Firm_User",
                            "Account_Admin",
                            "Account_Billing",
                            "Account_Clearing",
                            "Account_Sales",
                            "Account_Trading",
                            "User_Individual",
                            "Fund_Manager",
                            "Investment_Advisor",
                            "Shf_Investmanager",
                            "Advisory_Principal",
                            "Advisory_Signatory",
                            "Associated_Fund",
                            "Primary_Contributor",
                            "Administrator",
                            "Contact",
                            "Lead_Compliance_Officer",
                            "Compliance_Officer",
                            "Other_Officer",
                            "Apply_User",
                            "Transfer_On_Death_Legator",
                            "Tod_Primary_Beneficiary",
                            "Tod_Contingent_Beneficiary",
                            "Nominee",
                            "Nominee_Guardian",
                            "Ira_Decedent",
                            "Authorized_Person",
                            "Promoter",
                            "Wholetime_Director",
                            "Nominee_Owner",
                            "Third_Party_Admin",
                            "Compliance_Contact",
                            "Trust_Controller",
                            "Trust_Applicant",
                            "Organization_Applicant",
                            "Mm_Contact",
                            "Reg_Rep",
                            "Plan_Sponsor",
                            "Plan_Sponsor_Officer",
                            "Pension_Admin",
                            "Pension_Admin_Contact",
                            "Accountant",
                            "Joint_Applicant",
                            "Custodian_Employee",
                            "Successor_Custodian",
                            "Custodian",
                            "Successor_Custodian_Employee",
                            "Chief_Compliance_Officer",
                            "Chief_Financial_Officer",
                            "Trading_Officer",
                            "Child",
                            "Parent",
                            "Sibling",
                            "Estate",
                            "As_Interest_May_Appear",
                            "Ira_Present_Trust",
                            "Other",
                            "Life_Partner",
                            "Common_Law_Partner",
                            "Grandchild",
                            "Charity",
                            "Trust_Ira",
                            "Successor_Holder",
                            "Head_Of_Desk",
                            "Cftc_Non_Applicant_Ocr_Contact",
                            "Ocr_Account_Controller",
                            "Cftc_Applicant_Ocr_Contact"
                        ]
                    }
                }
            },
            "DepositFundsInstruction": {
                "maxProperties": 12,
                "minProperties": 5,
                "required": [
                    "accountId",
                    "amount",
                    "bankInstructionMethod",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    },
                    "amount": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 100
                    },
                    "bankInstructionMethod": {
                        "type": "string",
                        "example": "WIRE",
                        "enum": [
                            "ACH",
                            "WIRE",
                            "eDDA"
                        ]
                    },
                    "sendingInstitution": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "example": "Sending Institution name"
                    },
                    "identifier": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "example": "indentifier"
                    },
                    "specialInstruction": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "example": "U46377"
                    },
                    "bankInstructionName": {
                        "maxLength": 150,
                        "minLength": 0,
                        "type": "string",
                        "example": "Instruction"
                    },
                    "senderInstitutionName": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "example": "Senders Institution name"
                    },
                    "iraDepositDetail": {
                        "required": [
                            "fromIraType",
                            "iraContributionType",
                            "iraTaxYearType"
                        ],
                        "type": "object",
                        "properties": {
                            "iraContributionType": {
                                "type": "string",
                                "example": "ROLLOVER",
                                "enum": [
                                    "ROLLOVER",
                                    "LATE_ROLLOVER",
                                    "DIRECT_ROLLOVER",
                                    "CONTRIBUTION",
                                    "SPOUSAL_CONTRIBUTION",
                                    "EMPLOYER_SEP_CONTRIBUTION"
                                ]
                            },
                            "iraTaxYearType": {
                                "type": "string",
                                "example": "CURRENT",
                                "enum": [
                                    "CURRENT",
                                    "PRIOR"
                                ]
                            },
                            "fromIraType": {
                                "type": "string",
                                "example": "TRADITIONAL",
                                "enum": [
                                    "NONE",
                                    "TRADITIONAL",
                                    "ROLLOVER",
                                    "ROTH",
                                    "SEP",
                                    "EDUCATION",
                                    "TRADITIONAL_INHERITED",
                                    "ROTH_INHERITED",
                                    "SEP_INHERITED",
                                    "RETIREMENT_SAVING_PLAN",
                                    "SPOUSAL_RETIREMENT_SAVING_PLAN",
                                    "TAX_FREE_SAVING_ACCOUNT"
                                ]
                            }
                        }
                    },
                    "recurringInstructionDetail": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringInstructionDetail"
                            }
                        ]
                    }
                }
            },
            "DepositFundsPollingResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionPollingResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "instructionResult": {
                                "$ref": "#/components/schemas/DepositFundsPollingResult"
                            }
                        }
                    }
                ]
            },
            "DepositFundsPollingResult": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PollingInstructionResult"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "depositDetails": {
                                "required": [
                                    "amount",
                                    "currency",
                                    "whenAvailable"
                                ],
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number"
                                    },
                                    "currency": {
                                        "type": "string"
                                    },
                                    "whenAvailable": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "DepositNotification": {
                "type": "object",
                "properties": {
                    "checkDetails": {
                        "$ref": "#/components/schemas/CheckDetails"
                    },
                    "wireDetails": {
                        "$ref": "#/components/schemas/WireDetails"
                    },
                    "achDetails": {
                        "$ref": "#/components/schemas/ACHDetails"
                    },
                    "iraDepositDetails": {
                        "$ref": "#/components/schemas/IRADepositDetails"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "CHECK",
                            "WIRE",
                            "ACH",
                            "SKIP_DEPOSIT"
                        ]
                    },
                    "amount": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "JPY",
                            "HKD",
                            "AUD",
                            "CHF",
                            "MXN",
                            "SEK",
                            "NZD",
                            "HUF",
                            "CZK",
                            "CNH",
                            "DKK",
                            "RUB",
                            "ILS",
                            "NOK",
                            "SGD",
                            "PLN",
                            "ZAR",
                            "AED",
                            "KRW",
                            "SAR",
                            "TRY"
                        ]
                    },
                    "ibAccount": {
                        "type": "string"
                    }
                }
            },
            "Details": {
                "type": "object",
                "properties": {
                    "question": {
                        "type": "string"
                    },
                    "answer": {
                        "type": "string"
                    }
                }
            },
            "DisableAccountInBrokerage": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "Document": {
                "type": "object",
                "properties": {
                    "signedBy": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachedFile": {
                        "$ref": "#/components/schemas/AttachedFileType"
                    },
                    "formNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "validAddress": {
                        "type": "boolean"
                    },
                    "execLoginTimestamp": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "execTimestamp": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "documentType": {
                        "type": "string",
                        "enum": [
                            "Check",
                            "Company Ownership",
                            "Divorce Settlement",
                            "Employer Confirmation",
                            "Entitlement to Payments",
                            "Letter",
                            "Ownership",
                            "Pay Slip",
                            "Proof of Sale",
                            "Proof of Winnings",
                            "Severance",
                            "Tax Return",
                            "Will",
                            "Bank Statement",
                            "Brokerage Statement",
                            "Current Lease",
                            "Financial Statement",
                            "Certificate of Incorporation/Formation",
                            "Certificate of Registratios",
                            "Company Charter",
                            "Certificate of Good Standing",
                            "Government-issued Business License",
                            "Corporate Charter",
                            "Articles of Incorporation",
                            "Bank Passbook/Statement",
                            "Certified Proof of Identity",
                            "Certified Proof of Address",
                            "Income Tax Return",
                            "Additional Proof of Identity Document",
                            "Proof of Principal Place of Business and Registration",
                            "Utility Bill",
                            "Evidence of Ownership of Property",
                            "Authorization to Open Account - Evidence",
                            "Authorization to Open Account - Certification",
                            "Italian Health Card (Tessera Sanitaria)",
                            "CRS card of Lombardy",
                            "Italian Electronic ID Card - CIE",
                            "Court- or Govt-issued document",
                            "Copy of Passport, National Id or Driver's License",
                            "Passport",
                            "National ID"
                        ]
                    },
                    "signature": {
                        "type": "string"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "externalIndividualId": {
                        "type": "string"
                    },
                    "proofOfIdentityType": {
                        "type": "string",
                        "enum": [
                            "Driver License",
                            "Passport",
                            "Alien ID Card",
                            "National ID Card",
                            "Bank Statement",
                            "Evidence of Ownership of Property",
                            "Credit Card Statement",
                            "Utility Bill",
                            "Brokerage Statement",
                            "T4 Statement",
                            "CRA Assessment",
                            "Hong Kong and Macao Entry Permit"
                        ]
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "proofOfAddressType": {
                        "type": "string",
                        "enum": [
                            "Driver License",
                            "Bank Statement",
                            "Brokerage Statement",
                            "Homeowner Insurance Policy Bill",
                            "Homeowner Insurance Policy Document",
                            "Renter Insurance Policy bill",
                            "Renter Insurance Policy Document",
                            "Security System Bill",
                            "Government Issued Letters",
                            "Utility Bill",
                            "Current Lease",
                            "Evidence of Ownership of Property",
                            "Other Document"
                        ]
                    },
                    "payload": {
                        "$ref": "#/components/schemas/FilePayload"
                    }
                }
            },
            "DocumentSubmission": {
                "type": "object",
                "properties": {
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    },
                    "translation": {
                        "type": "boolean"
                    }
                }
            },
            "DuplicateAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "numberOfDuplicates": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "DwacInstruction": {
                "maxProperties": 9,
                "minProperties": 6,
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "contraBrokerAccountId",
                    "contraBrokerTaxId",
                    "direction",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "direction": {
                        "type": "string",
                        "example": "IN",
                        "enum": [
                            "IN",
                            "OUT"
                        ]
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "contraBrokerAccountId": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "example": "12345678A"
                    },
                    "contraBrokerTaxId": {
                        "maxLength": 25,
                        "minLength": 1,
                        "type": "string",
                        "example": "123456789"
                    },
                    "quantity": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 1000
                    },
                    "tradingInstrument": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TradingInstrument"
                            }
                        ]
                    },
                    "accountTitle": {
                        "maxLength": 140,
                        "minLength": 0,
                        "type": "string",
                        "example": "Title"
                    },
                    "refrenceId": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string",
                        "example": "refId"
                    }
                }
            },
            "EFPQuantityLimits": {
                "type": "object",
                "properties": {
                    "maxNominalEfpPerOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxNetEfpTrades": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maxGrossEfpTrades": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "EchoResponse": {
                "required": [
                    "requestMethod",
                    "securityPolicy"
                ],
                "type": "object",
                "properties": {
                    "requestMethod": {
                        "type": "string",
                        "example": "GET",
                        "enum": [
                            "GET",
                            "POST",
                            "PATCH",
                            "PUT"
                        ]
                    },
                    "securityPolicy": {
                        "type": "string",
                        "example": "HTTPS",
                        "enum": [
                            "HTTPS",
                            "SIGNED_JWT",
                            "ENCRYPTED_JWE"
                        ]
                    },
                    "queryParameters": {
                        "type": "object",
                        "example": {}
                    }
                }
            },
            "EddaInstruction": {
                "maxProperties": 8,
                "minProperties": 8,
                "required": [
                    "accountId",
                    "bankAccountNumber",
                    "bankBranchCode",
                    "bankClearingCode",
                    "bankInstructionName",
                    "clientInstructionId",
                    "currency",
                    "debtorIdentificationDocumentType"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "bankInstructionName": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "example": "Instruction Name"
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "CNH"
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U2323232"
                    },
                    "bankBranchCode": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "003"
                    },
                    "bankAccountNumber": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "132456"
                    },
                    "bankClearingCode": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "003"
                    },
                    "debtorIdentificationDocumentType": {
                        "type": "string",
                        "example": "hkId",
                        "enum": [
                            "hkId",
                            "passport",
                            "chinaId",
                            "hkMacaoEntryPermit"
                        ]
                    }
                }
            },
            "EligibleContractParticipant": {
                "type": "object",
                "properties": {
                    "eligibleContractParticipantDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EligibleContractParticipantDetails"
                        }
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "EligibleContractParticipantDetails": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "DiscretionaryBasis",
                            "HighRisk"
                        ]
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "EmploymentDetails": {
                "type": "object",
                "properties": {
                    "employer": {
                        "type": "string"
                    },
                    "occupation": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "employerBusiness": {
                        "type": "string"
                    },
                    "employerAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "employerPhone": {
                        "type": "string"
                    },
                    "emplCountryResCountryDetails": {
                        "type": "string"
                    }
                }
            },
            "EnableAccountInBrokerage": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "EnrollInDRIP": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "EnrollInSYEP": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    }
                }
            },
            "EntityIRABene": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "location": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "articleOfWill": {
                        "type": "string"
                    }
                }
            },
            "EnumerationResponse": {
                "type": "object",
                "properties": {
                    "enumerationsType": {
                        "type": "string"
                    },
                    "formNumber": {
                        "type": "string"
                    },
                    "jsonData": {
                        "$ref": "#/components/schemas/ArrayNode"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    }
                }
            },
            "ExchangeAccess": {
                "type": "object",
                "properties": {
                    "assetClass": {
                        "type": "string",
                        "enum": [
                            "BILL",
                            "BOND",
                            "CASH",
                            "CFD",
                            "COMB",
                            "FOP",
                            "FUND",
                            "FUT",
                            "OPT",
                            "SSF",
                            "STK",
                            "WAR",
                            "MRGN"
                        ]
                    },
                    "exchange": {
                        "type": "string",
                        "enum": [
                            "NYSE",
                            "AMEX",
                            "NASDAQ",
                            "CBOE",
                            "ISE",
                            "BOX",
                            "PHLX",
                            "PSE"
                        ]
                    }
                }
            },
            "ExtPositionsTransferType": {
                "type": "object",
                "properties": {
                    "partialStockPositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartialStockPosition"
                        }
                    },
                    "partialBondPositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartialBondPosition"
                        }
                    },
                    "partialOptionPositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartialOptionPosition"
                        }
                    },
                    "partialWarrantPositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartialWarrantPosition"
                        }
                    },
                    "partialFundPositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartialFundPosition"
                        }
                    },
                    "partialCashPositions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PartialCashPosition"
                        }
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "FULL",
                            "PARTIAL"
                        ]
                    },
                    "subType": {
                        "type": "string",
                        "enum": [
                            "ACATS",
                            "ATON"
                        ]
                    },
                    "brokerId": {
                        "type": "string"
                    },
                    "brokerName": {
                        "type": "string"
                    },
                    "accountAtBroker": {
                        "type": "string"
                    },
                    "srcIRAType": {
                        "type": "string",
                        "enum": [
                            "RI",
                            "RO",
                            "RT",
                            "SP",
                            "ED",
                            "TH",
                            "RH",
                            "SH",
                            "RRSP",
                            "SRRSP",
                            "TFSA",
                            "SIMPLE",
                            "ISA"
                        ]
                    },
                    "marginLoan": {
                        "type": "boolean"
                    },
                    "shortPos": {
                        "type": "boolean"
                    },
                    "optionPos": {
                        "type": "boolean"
                    },
                    "ibAccount": {
                        "type": "string"
                    },
                    "thirdPartyType": {
                        "type": "string"
                    },
                    "approximateAccountValue": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ssn": {
                        "type": "string"
                    },
                    "ein": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "authorizeToRemoveFund": {
                        "type": "boolean"
                    }
                }
            },
            "ExternalPositionTransfer": {
                "maxProperties": 9,
                "minProperties": 9,
                "required": [
                    "accountAtBroker",
                    "accountId",
                    "brokerId",
                    "brokerName",
                    "clientInstructionId",
                    "signature",
                    "subtype",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "type": {
                        "type": "string",
                        "example": "FULL",
                        "enum": [
                            "FULL"
                        ]
                    },
                    "subtype": {
                        "type": "string",
                        "example": "ACATS",
                        "enum": [
                            "ACATS",
                            "ATON"
                        ]
                    },
                    "brokerId": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "example": "0226"
                    },
                    "brokerName": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string",
                        "example": "Wall Street Financial Group"
                    },
                    "accountAtBroker": {
                        "maxLength": 34,
                        "minLength": 1,
                        "type": "string",
                        "example": "SOL12345"
                    },
                    "sourceIRAType": {
                        "type": "string",
                        "example": "RO",
                        "enum": [
                            "RO",
                            "RI",
                            "RT",
                            "SP",
                            "ED",
                            "TH",
                            "RH",
                            "SH"
                        ]
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U2323232"
                    },
                    "signature": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string",
                        "example": "sample signature"
                    }
                }
            },
            "FileData": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "FileDetailsResponse": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "requestFileName": {
                        "type": "string"
                    },
                    "responseFileName": {
                        "type": "string"
                    }
                }
            },
            "FilePayload": {
                "type": "object",
                "properties": {
                    "mimeType": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "FinancialInformation": {
                "type": "object",
                "properties": {
                    "investmentExperience": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssetExperience"
                        }
                    },
                    "investmentObjectives": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "Trading",
                                "Growth",
                                "Speculation",
                                "Hedging",
                                "Preservation",
                                "Income"
                            ]
                        }
                    },
                    "additionalSourcesOfIncome": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SourceOfIncomeType"
                        }
                    },
                    "sourcesOfWealth": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SourceOfWealthType"
                        }
                    },
                    "soiQuestionnaire": {
                        "$ref": "#/components/schemas/SOIQuestionnaire"
                    },
                    "questionnaires": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QuestionnaireType"
                        }
                    },
                    "netWorth": {
                        "type": "number"
                    },
                    "liquidNetWorth": {
                        "type": "number"
                    },
                    "annualNetIncome": {
                        "type": "number"
                    },
                    "totalAssets": {
                        "type": "number"
                    },
                    "sourceOfFunds": {
                        "type": "string"
                    },
                    "translated": {
                        "type": "boolean"
                    }
                }
            },
            "FopInstruction": {
                "maxProperties": 7,
                "minProperties": 6,
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "contraBrokerAccountId",
                    "contraBrokerDtcCode",
                    "direction",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "direction": {
                        "type": "string",
                        "example": "IN",
                        "enum": [
                            "IN",
                            "OUT"
                        ]
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "contraBrokerAccountId": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "example": "12345678A"
                    },
                    "contraBrokerDtcCode": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "example": "348"
                    },
                    "quantity": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 1000
                    },
                    "tradingInstrument": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TradingInstrument"
                            }
                        ]
                    }
                }
            },
            "ForbiddenInstructionResponse": {
                "$ref": "#/components/schemas/ForbiddenRequestResponse"
            },
            "ForbiddenRequestResponse": {
                "required": [
                    "detail",
                    "instructionResult",
                    "instructionSetId",
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/invalid-argument"
                    },
                    "title": {
                        "type": "string",
                        "example": "Bad Request"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 400
                    },
                    "detail": {
                        "type": "string",
                        "example": "Input is not a JSON Object or doesn't contain all expected fields"
                    },
                    "instructionSetId": {
                        "type": "integer",
                        "format": "int32",
                        "example": 8389943
                    },
                    "instructionResult": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InstructionErrorResult"
                            }
                        ]
                    }
                }
            },
            "FormCRS": {
                "type": "object",
                "properties": {
                    "controllingPersonDesignation": {
                        "type": "string",
                        "enum": [
                            "SENIOR_MGMT_OFFICER",
                            "BY_OWNERSHIP",
                            "BY_OTHER_MEANS"
                        ]
                    },
                    "oecdStatus": {
                        "type": "string",
                        "enum": [
                            "DEPOSITORY_INSTITUTION",
                            "CUSTODIAL_INSTITUTION",
                            "SPECIFIED_INSURANCE_COMPANY",
                            "INVESTMENT_ENTITY_IN_NONPARTICIPATING_JURISDICTION",
                            "INVESTMENT_ENTITY_NOT_LISTED",
                            "PUBLICLY_TRADED_CORPORATION_OR_AFFILIATE",
                            "OTHER_ACTIVE_NON_FINANCIAL_ENTITY",
                            "PASSIVE_NON_FINANCIAL_ENTITY",
                            "EXEMPT_RETIREMENT_PLAN",
                            "NON_REPORTING_FI",
                            "OTHER_INVESTMENT_ENTITY",
                            "FINANCIAL_INSTITUTION",
                            "NON_REPORTING_FINANCIAL_INSTITUTION"
                        ]
                    }
                }
            },
            "FormDetails": {
                "type": "object",
                "properties": {
                    "formNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sha1Checksum": {
                        "type": "string"
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "formName": {
                        "type": "string"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/FormPayload"
                    },
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "fileLength": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "FormFileResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "fileData": {
                        "$ref": "#/components/schemas/FileData"
                    },
                    "formDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormDetails"
                        }
                    }
                }
            },
            "FormPayload": {
                "type": "object",
                "properties": {
                    "mimeType": {
                        "type": "string"
                    },
                    "data": {
                        "type": "string"
                    }
                }
            },
            "FormW8BEN": {
                "type": "object",
                "properties": {
                    "localTaxForms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalTaxForm"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "tin": {
                        "type": "string"
                    },
                    "foreignTaxId": {
                        "type": "string"
                    },
                    "tinOrExplanationRequired": {
                        "type": "boolean"
                    },
                    "explanation": {
                        "type": "string",
                        "enum": [
                            "US_TIN",
                            "TIN_NOT_DISCLOSED",
                            "TIN_NOT_REQUIRED",
                            "TIN_NOT_ISSUED"
                        ]
                    },
                    "referenceNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "part29ACountry": {
                        "type": "string"
                    },
                    "cert": {
                        "type": "boolean"
                    },
                    "signatureType": {
                        "type": "string",
                        "enum": [
                            "Electronic",
                            "Physical"
                        ]
                    },
                    "blankForm": {
                        "type": "boolean"
                    },
                    "taxFormFile": {
                        "type": "string"
                    },
                    "proprietaryFormNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "electronicFormat": {
                        "type": "boolean"
                    },
                    "submitDate": {
                        "type": "string"
                    }
                }
            },
            "FormW8BENE": {
                "type": "object",
                "properties": {
                    "substantialUsOwnerExternalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "countryOfOrganization": {
                        "type": "string"
                    },
                    "disregardedEntityName": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "enum": [
                            "CORPORATION",
                            "DISREGARDED_ENTITY",
                            "PARTNERSHIP",
                            "SIMPLE_TRUST",
                            "GRANTOR_TRUST",
                            "COMPLEX_TRUST",
                            "ESTATE",
                            "GOVERNMENT",
                            "CENTRAL_BANK_OF_ISSUE",
                            "TAX_EXEMPT_ORGANIZATION",
                            "PRIVATE_FOUNDATION"
                        ]
                    },
                    "fatcaStatus": {
                        "type": "string",
                        "enum": [
                            "NONPARTICIPATING_FFI",
                            "PARICIPATING_FFI",
                            "REPORTING_MODEL_1_FFI",
                            "REPORTING_MODEL_2_FFI",
                            "REGISTERED_DEEMED_COMPLIANT_FFI",
                            "SPONSORED_FFI",
                            "CERTIFIED_DEEMED_COMPLIANT_NONREGISTERING_LOCAL_BANK",
                            "CERTIFIED_DEEMED_COMPLIANT_FFI",
                            "CERTIFIED_DEEMED_COMPLIANT_SPONSORED_VEHICLE",
                            "CERTIFIED_DEEMED_COMPLIANT_LIMITED_LIFE_DEBT",
                            "CERTIFIED_DEEMED_COMPLIANT_INVESTMENT_ADVISORS",
                            "OWNER_DOCUMENTED_FFI",
                            "RESTRICTED_DISTRIBUTOR",
                            "NONREPORTING_IGA_FFI",
                            "FOREIGN_GOVERNMENT",
                            "INTERNATIONAL_ORGANIZATION",
                            "EXEMPT_RETIREMENT_PLANS",
                            "ENTITY_OWNED_BY_EXEMPT_BENEFICIAL_OWNERS",
                            "TERRITORY_FINANCIAL_INSTITUTION",
                            "NONFINANCIAL_GROUP",
                            "EXCEPTED_NONFINANCIAL_STARTUP",
                            "EXCEPTED_NONFINANCIAL_ENTITY",
                            "AN_501_C_ORGANIZATION",
                            "NONPROFIT_ORGANIZATION",
                            "PUBLICLY_TRADED_NFFE",
                            "EXCEPTED_TERRITORY_NFFE",
                            "ACTIVE_NFFE",
                            "PASSIVE_NFFE",
                            "EXCEPTED_INTER_AFFILIATE_FFI",
                            "DIRECT_REPORTING_NFFE",
                            "SPONSORED_DIRECT_REPORTING_NFFE"
                        ]
                    },
                    "usTin": {
                        "type": "string"
                    },
                    "giin": {
                        "type": "string"
                    },
                    "foreignTin": {
                        "type": "string"
                    },
                    "tinOrExplanationRequired": {
                        "type": "boolean"
                    },
                    "explanation": {
                        "type": "string",
                        "enum": [
                            "US_TIN",
                            "TIN_NOT_DISCLOSED",
                            "TIN_NOT_REQUIRED",
                            "TIN_NOT_ISSUED"
                        ]
                    },
                    "referenceNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "submitDate": {
                        "type": "string"
                    },
                    "box11Status": {
                        "type": "string",
                        "enum": [
                            "LIMITED_BRANCH",
                            "US_BRANCH",
                            "PARTICIPATING_FFI",
                            "REPORTING_MODEL_1_FFI",
                            "REPORTING_MODEL_2_FFI"
                        ]
                    },
                    "part314A": {
                        "type": "boolean"
                    },
                    "part314ACountry": {
                        "type": "string"
                    },
                    "part314B": {
                        "type": "string",
                        "enum": [
                            "CompanyMeetsOwnershipAndBaseErosionTest",
                            "TaxExemptPensionTrustOrPensionFund",
                            "CompanyMeetsDerivativeBenefitsTest",
                            "TaxExemptOrganization",
                            "CompanyWithIncomeActiveBusiness",
                            "PubliclyTradedCorporation",
                            "FavorableDiscretionaryDetermination",
                            "SubsidiaryOfAPubliclyTradedCorporation",
                            "Government",
                            "NoLobArticleInTreaty",
                            "Other"
                        ]
                    },
                    "part314C": {
                        "type": "boolean"
                    },
                    "part416": {
                        "type": "string"
                    },
                    "part417I": {
                        "type": "boolean"
                    },
                    "part417Ii": {
                        "type": "boolean"
                    },
                    "part518": {
                        "type": "boolean"
                    },
                    "part619": {
                        "type": "boolean"
                    },
                    "part720": {
                        "type": "string"
                    },
                    "part721": {
                        "type": "boolean"
                    },
                    "part822": {
                        "type": "boolean"
                    },
                    "part923": {
                        "type": "boolean"
                    },
                    "part1024A": {
                        "type": "boolean"
                    },
                    "part1024B": {
                        "type": "boolean"
                    },
                    "part1024C": {
                        "type": "boolean"
                    },
                    "part1024D": {
                        "type": "boolean"
                    },
                    "part1125A": {
                        "type": "boolean"
                    },
                    "part1125B": {
                        "type": "boolean"
                    },
                    "part1125C": {
                        "type": "boolean"
                    },
                    "part1226": {
                        "type": "boolean"
                    },
                    "part1226Desc1": {
                        "type": "string"
                    },
                    "part1226Desc2": {
                        "type": "string"
                    },
                    "part1226Desc3": {
                        "type": "string",
                        "enum": [
                            "CollectiveInvestmentVehicle",
                            "ExemptBeneficialOwner-RetirementPlan",
                            "FinancialInstitutionwithlocalClientBase",
                            "InvestmentAdvisorsandManagers",
                            "LocalBank",
                            "SponsoredCloselyHeldInvestmentVehicle",
                            "SponsoredInvestmentEntity",
                            "TrusteeDocumentedTrust"
                        ]
                    },
                    "part1226Desc4": {
                        "type": "string"
                    },
                    "part1327": {
                        "type": "boolean"
                    },
                    "part1428A": {
                        "type": "boolean"
                    },
                    "part1428B": {
                        "type": "boolean"
                    },
                    "part1529A": {
                        "type": "boolean"
                    },
                    "part1529B": {
                        "type": "boolean"
                    },
                    "part1529C": {
                        "type": "boolean"
                    },
                    "part1529D": {
                        "type": "boolean"
                    },
                    "part1529E": {
                        "type": "boolean"
                    },
                    "part1529F": {
                        "type": "boolean"
                    },
                    "part1630": {
                        "type": "boolean"
                    },
                    "part1731": {
                        "type": "boolean"
                    },
                    "part1832": {
                        "type": "boolean"
                    },
                    "part1933": {
                        "type": "boolean"
                    },
                    "part2034": {
                        "type": "boolean"
                    },
                    "part2135": {
                        "type": "boolean"
                    },
                    "part2135Date": {
                        "type": "string"
                    },
                    "part2236": {
                        "type": "boolean"
                    },
                    "part2337A": {
                        "type": "boolean"
                    },
                    "part2337ADesc": {
                        "type": "string"
                    },
                    "part2337B": {
                        "type": "boolean"
                    },
                    "part2337BDesc1": {
                        "type": "string"
                    },
                    "part2337BDesc2": {
                        "type": "string"
                    },
                    "part2438": {
                        "type": "boolean"
                    },
                    "part2539": {
                        "type": "boolean"
                    },
                    "part2640A": {
                        "type": "boolean"
                    },
                    "part2640B": {
                        "type": "boolean"
                    },
                    "part2640C": {
                        "type": "boolean"
                    },
                    "part2741": {
                        "type": "boolean"
                    },
                    "part2842": {
                        "type": "string"
                    },
                    "part2843": {
                        "type": "boolean"
                    },
                    "cert": {
                        "type": "boolean"
                    },
                    "signatureType": {
                        "type": "string",
                        "enum": [
                            "Electronic",
                            "Physical"
                        ]
                    },
                    "blankForm": {
                        "type": "boolean"
                    },
                    "taxFormFile": {
                        "type": "string"
                    },
                    "proprietaryFormNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "electronicFormat": {
                        "type": "boolean"
                    }
                }
            },
            "FormW8IMY": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "countryOfIncorporation": {
                        "type": "string"
                    },
                    "disregardedEntityName": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "enum": [
                            "QUALIFIED_INTERMEDIARY",
                            "NONQUALIFIED_INTERMEDIARY",
                            "TERRITORY_FINANCIAL",
                            "US_BRANCH",
                            "WITHHOLDING_FOREIGN_PARTNERSHIP",
                            "WITHHOLDING_FOREIGN_TRUST",
                            "NONWITHHOLDING_FOREIGN_PARTNERSHIP",
                            "NONWITHHOLDING_FOREIGN_SIMPLE_TRUST",
                            "NONWITHHOLDING_FOREIGN_GRANTOR_TRUST"
                        ]
                    },
                    "fatcaStatus": {
                        "type": "string",
                        "enum": [
                            "NONPARTICIPATING_FFI",
                            "PARTICIPATING_FFI",
                            "REPORTING_MODEL1_FFI",
                            "REPORTING_MODEL2_FFI",
                            "REGISTERED_DEEMED_COMPLAINT",
                            "TERRITORY_FINANCIAL_INSTITUTION",
                            "SPONSORED_FFI",
                            "CERTIFIED_DEEMED_COMPLAINT_FFI",
                            "CERTIFIED_DEEMED_COMPLAINT_SPONSORED",
                            "CERTIFIED_DEEMED_COMPLAINT_LIMITED_LIFE_DEBT",
                            "OWNER_DOCUMENTED_FFI",
                            "RESTRICTED_DISTRIBUTOR",
                            "FOREIGN_CENTRAL_BANK_ISSUE",
                            "NONREPORTING_IGA_FFO",
                            "EXEMPT_RETIREMENT_PLAN",
                            "EXCEPTED_NONFINANCIAL_GROUP_ENTITY",
                            "EXCEPTED_NONFINANCIAL_STARTUP_COMPANY",
                            "EXCEPTED_NONFINANCIAL_ENTITY_IN_LIQUIDATION",
                            "PUBLICLY_TRADED_NFFE",
                            "EXCEPTED_TERRITORY_NFFE",
                            "ACTIVE_NFFE",
                            "PASSIVE_NFFE",
                            "DIRECT_REPORTING_NFFE",
                            "SPONSORED_DIRECT_REPORTING_NFFE"
                        ]
                    },
                    "usTin": {
                        "type": "string"
                    },
                    "usTinType": {
                        "type": "string",
                        "enum": [
                            "QI-EIN",
                            "WP-EIN",
                            "WT-EIN",
                            "EIN",
                            "SSN",
                            "ITIN"
                        ]
                    },
                    "giin": {
                        "type": "string"
                    },
                    "referenceNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "box11Status": {
                        "type": "string",
                        "enum": [
                            "LIMITED_BRANCH",
                            "US_BRANCH",
                            "PARTICIPATING_FFI",
                            "REPORTING_MODEL_1_FFI",
                            "REPORTING_MODEL_2_FFI"
                        ]
                    },
                    "part314A": {
                        "type": "boolean"
                    },
                    "part314B": {
                        "type": "boolean"
                    },
                    "part314C": {
                        "type": "boolean"
                    },
                    "part314CDesc": {
                        "type": "string"
                    },
                    "part314D": {
                        "type": "boolean"
                    },
                    "part314DDesc": {
                        "type": "string"
                    },
                    "part314E": {
                        "type": "boolean"
                    },
                    "part314EDesc": {
                        "type": "string"
                    },
                    "part314EI": {
                        "type": "boolean"
                    },
                    "part314EIi": {
                        "type": "boolean"
                    },
                    "part415A": {
                        "type": "boolean"
                    },
                    "part415B": {
                        "type": "boolean"
                    },
                    "part415C": {
                        "type": "boolean"
                    },
                    "part415D": {
                        "type": "boolean"
                    },
                    "part516A": {
                        "type": "boolean"
                    },
                    "part516B": {
                        "type": "boolean"
                    },
                    "part516C": {
                        "type": "boolean"
                    },
                    "part617A": {
                        "type": "boolean"
                    },
                    "part617B": {
                        "type": "boolean"
                    },
                    "part617C": {
                        "type": "boolean"
                    },
                    "part718": {
                        "type": "boolean"
                    },
                    "part819": {
                        "type": "boolean"
                    },
                    "part920": {
                        "type": "boolean"
                    },
                    "part1021": {
                        "type": "string"
                    },
                    "part1021A": {
                        "type": "string"
                    },
                    "part1021B": {
                        "type": "boolean"
                    },
                    "part1021C": {
                        "type": "boolean"
                    },
                    "part1122A": {
                        "type": "boolean"
                    },
                    "part1122B": {
                        "type": "boolean"
                    },
                    "part1122C": {
                        "type": "boolean"
                    },
                    "part1223": {
                        "type": "boolean"
                    },
                    "part1324": {
                        "type": "boolean"
                    },
                    "part1425A": {
                        "type": "string"
                    },
                    "part1425B": {
                        "type": "boolean"
                    },
                    "part1526": {
                        "type": "boolean"
                    },
                    "part1627A": {
                        "type": "boolean"
                    },
                    "part1627B": {
                        "type": "boolean"
                    },
                    "part1627C": {
                        "type": "boolean"
                    },
                    "part1728": {
                        "type": "boolean"
                    },
                    "part1829": {
                        "type": "boolean"
                    },
                    "part1829Desc1": {
                        "type": "string"
                    },
                    "part1829Desc2": {
                        "type": "string"
                    },
                    "part1829Desc3": {
                        "type": "string"
                    },
                    "part1930A": {
                        "type": "boolean"
                    },
                    "part1930B": {
                        "type": "boolean"
                    },
                    "part1930C": {
                        "type": "boolean"
                    },
                    "part1930D": {
                        "type": "boolean"
                    },
                    "part1930E": {
                        "type": "boolean"
                    },
                    "part1930F": {
                        "type": "boolean"
                    },
                    "part2031": {
                        "type": "boolean"
                    },
                    "part2132": {
                        "type": "boolean"
                    },
                    "part2132Desc": {
                        "type": "string"
                    },
                    "part2233": {
                        "type": "boolean"
                    },
                    "part2233Desc": {
                        "type": "string"
                    },
                    "part2334A": {
                        "type": "boolean"
                    },
                    "part2334ADesc": {
                        "type": "string"
                    },
                    "part2334B": {
                        "type": "boolean"
                    },
                    "part2334BDesc": {
                        "type": "string"
                    },
                    "part2435": {
                        "type": "boolean"
                    },
                    "part2536": {
                        "type": "boolean"
                    },
                    "part2637": {
                        "type": "boolean"
                    },
                    "part2738": {
                        "type": "string"
                    },
                    "part2739": {
                        "type": "boolean"
                    },
                    "cert": {
                        "type": "boolean"
                    }
                }
            },
            "FormW9": {
                "type": "object",
                "properties": {
                    "localTaxForms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalTaxForm"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "businessName": {
                        "type": "string"
                    },
                    "customerType": {
                        "type": "string",
                        "enum": [
                            "Individual",
                            "Corporation",
                            "Partnership",
                            "LLC",
                            "Other"
                        ]
                    },
                    "taxClassification": {
                        "type": "string"
                    },
                    "otherCustomerType": {
                        "type": "string"
                    },
                    "tin": {
                        "type": "string"
                    },
                    "tinType": {
                        "type": "string",
                        "enum": [
                            "SSN",
                            "EIN",
                            "NonUS_NationalId"
                        ]
                    },
                    "cert1": {
                        "type": "boolean"
                    },
                    "cert2": {
                        "type": "boolean"
                    },
                    "cert3": {
                        "type": "boolean"
                    },
                    "cert4": {
                        "type": "boolean"
                    },
                    "signatureType": {
                        "type": "string",
                        "enum": [
                            "Electronic",
                            "Physical"
                        ]
                    },
                    "blankForm": {
                        "type": "boolean"
                    },
                    "taxFormFile": {
                        "type": "string"
                    },
                    "proprietaryFormNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "GetAvailableStmtDatesResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/AvailableStatementDatesData"
                    }
                }
            },
            "GetAvailableTaxFormsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/AvailableTaxFormsData"
                    }
                }
            },
            "GetBrokerListResponse": {
                "required": [
                    "brokers",
                    "instructionType"
                ],
                "type": "object",
                "properties": {
                    "instructionType": {
                        "type": "string",
                        "example": "COMPLEX_ASSET_TRANSFER"
                    },
                    "brokers": {
                        "type": "object"
                    }
                }
            },
            "GetInstructionSetResponse": {
                "$ref": "#/components/schemas/BulkMultiStatusResponse"
            },
            "GetJavaScript": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string"
                    }
                }
            },
            "GetParticipatingListResponse": {
                "required": [
                    "participatingBanks",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "eDDA"
                    },
                    "participatingBanks": {
                        "required": [
                            "BIC",
                            "clearingCode",
                            "institutionName"
                        ],
                        "type": "object",
                        "properties": {
                            "institutionName": {
                                "type": "string",
                                "example": "WELAB BANK LIMITED"
                            },
                            "clearingCode": {
                                "type": "string",
                                "example": "390"
                            },
                            "BIC": {
                                "type": "string",
                                "example": "WEDIHKHHXXX"
                            }
                        }
                    }
                }
            },
            "GetStatementsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "dataType": {
                                "type": "string",
                                "description": "the data type of the value after decoding"
                            },
                            "encoding": {
                                "type": "string",
                                "description": "encoding used for the value"
                            },
                            "value": {
                                "type": "string",
                                "description": "Base 64 encoded String of byte[]. Byte[] represents compressed data when gzip is true"
                            },
                            "mimeType": {
                                "type": "string",
                                "description": "mimeType of document after decoding and serializing the value"
                            },
                            "gzip": {
                                "type": "boolean",
                                "description": "content encoding flag. Represents whether the response is compressed"
                            },
                            "accept": {
                                "type": "string",
                                "description": "specify response media types that are acceptable"
                            }
                        }
                    }
                }
            },
            "HighWaterMarkConfigurationType": {
                "type": "object",
                "properties": {
                    "numberOfPeriods": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "prorateForWithdrawals": {
                        "type": "boolean"
                    }
                }
            },
            "HighWaterMarkType": {
                "type": "object",
                "properties": {
                    "hwm": {
                        "$ref": "#/components/schemas/HighWaterMarkConfigurationType"
                    },
                    "previousLosses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreviousLossesType"
                        }
                    }
                }
            },
            "IRABeneficiariesType": {
                "type": "object",
                "properties": {
                    "primaryBeneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IRAPrimaryBeneficiary"
                        }
                    },
                    "primaryBeneficiaryEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IRAPrimaryBeneficiaryEntity"
                        }
                    },
                    "contingentBeneficiaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IRAContingentBeneficiary"
                        }
                    },
                    "contingentBeneficiaryEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IRAContingentBeneficiaryEntity"
                        }
                    },
                    "spousePrimaryBeneficary": {
                        "type": "boolean"
                    },
                    "successor": {
                        "type": "boolean"
                    }
                }
            },
            "IRAContingentBeneficiary": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "nativeName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "birthName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "motherMaidenName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the applicant. The applicant must be 18 years or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error will be triggered and the account will not be created.</li><li>If YYYY-MM-DD < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.</li><li>This application must be opened using the front-end application which is available within the IBKR Portal.</li><li>Assets held in a single account managed by a single Custodian user.</li><li>Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.</li></ul>",
                        "example": "1990-08-14"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "cityOfBirth": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "Male",
                            "Female"
                        ]
                    },
                    "maritalStatus": {
                        "type": "string",
                        "enum": [
                            "S",
                            "M",
                            "W",
                            "D",
                            "C"
                        ]
                    },
                    "numDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/ResidenceAddress"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "$ref": "#/components/schemas/EmploymentDetails"
                    },
                    "employeeTitle": {
                        "type": "string"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaireList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "authorizedToSignOnBehalfOfOwner": {
                        "type": "boolean"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    },
                    "primaryTrustee": {
                        "type": "boolean"
                    },
                    "ownershipPercentage": {
                        "type": "number"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "relationship": {
                        "type": "string",
                        "enum": [
                            "Brother",
                            "Daughter",
                            "Estate",
                            "Father",
                            "Husband",
                            "Mother",
                            "Other",
                            "Sister",
                            "Son",
                            "Wife",
                            "Charity",
                            "Trust",
                            "Spouse",
                            "Child",
                            "Sibling",
                            "Parent",
                            "Grandchild",
                            "Common Law Partner"
                        ]
                    }
                }
            },
            "IRAContingentBeneficiaryEntity": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "ownershipPercentage": {
                        "type": "number"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "relationship": {
                        "type": "string",
                        "enum": [
                            "Brother",
                            "Daughter",
                            "Estate",
                            "Father",
                            "Husband",
                            "Mother",
                            "Other",
                            "Sister",
                            "Son",
                            "Wife",
                            "Charity",
                            "Trust",
                            "Spouse",
                            "Child",
                            "Sibling",
                            "Parent",
                            "Grandchild",
                            "Common Law Partner"
                        ]
                    },
                    "executor": {
                        "$ref": "#/components/schemas/Individual"
                    },
                    "executionDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "articleOfWill": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "enum": [
                            "Trust",
                            "Estate",
                            "Charity"
                        ]
                    }
                }
            },
            "IRADecedent": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "nativeName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "birthName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "motherMaidenName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the applicant. The applicant must be 18 years or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error will be triggered and the account will not be created.</li><li>If YYYY-MM-DD < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.</li><li>This application must be opened using the front-end application which is available within the IBKR Portal.</li><li>Assets held in a single account managed by a single Custodian user.</li><li>Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.</li></ul>",
                        "example": "1990-08-14"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "cityOfBirth": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "Male",
                            "Female"
                        ]
                    },
                    "maritalStatus": {
                        "type": "string",
                        "enum": [
                            "S",
                            "M",
                            "W",
                            "D",
                            "C"
                        ]
                    },
                    "numDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/ResidenceAddress"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "$ref": "#/components/schemas/EmploymentDetails"
                    },
                    "employeeTitle": {
                        "type": "string"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaireList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "authorizedToSignOnBehalfOfOwner": {
                        "type": "boolean"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    },
                    "primaryTrustee": {
                        "type": "boolean"
                    },
                    "dateOfDeath": {
                        "type": "string",
                        "format": "date"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "inheritorType": {
                        "type": "string",
                        "enum": [
                            "S",
                            "I",
                            "T",
                            "O"
                        ]
                    },
                    "relationship": {
                        "type": "string",
                        "enum": [
                            "Other",
                            "Trust",
                            "Spouse",
                            "Individual"
                        ]
                    }
                }
            },
            "IRADepositDetails": {
                "type": "object",
                "properties": {
                    "depositType": {
                        "type": "string",
                        "enum": [
                            "contribution",
                            "rollover"
                        ]
                    },
                    "taxYear": {
                        "type": "string",
                        "enum": [
                            "current",
                            "prior"
                        ]
                    },
                    "fromIraType": {
                        "type": "string",
                        "enum": [
                            "RI",
                            "RO",
                            "RT",
                            "SP",
                            "ED",
                            "TH",
                            "RH",
                            "SH",
                            "RRSP",
                            "SRRSP",
                            "TFSA",
                            "SIMPLE",
                            "ISA"
                        ]
                    }
                }
            },
            "IRAPrimaryBeneficiary": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "nativeName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "birthName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "motherMaidenName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the applicant. The applicant must be 18 years or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error will be triggered and the account will not be created.</li><li>If YYYY-MM-DD < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.</li><li>This application must be opened using the front-end application which is available within the IBKR Portal.</li><li>Assets held in a single account managed by a single Custodian user.</li><li>Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.</li></ul>",
                        "example": "1990-08-14"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "cityOfBirth": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "Male",
                            "Female"
                        ]
                    },
                    "maritalStatus": {
                        "type": "string",
                        "enum": [
                            "S",
                            "M",
                            "W",
                            "D",
                            "C"
                        ]
                    },
                    "numDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/ResidenceAddress"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "$ref": "#/components/schemas/EmploymentDetails"
                    },
                    "employeeTitle": {
                        "type": "string"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaireList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "authorizedToSignOnBehalfOfOwner": {
                        "type": "boolean"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    },
                    "primaryTrustee": {
                        "type": "boolean"
                    },
                    "ownershipPercentage": {
                        "type": "number"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "relationship": {
                        "type": "string",
                        "enum": [
                            "Brother",
                            "Daughter",
                            "Estate",
                            "Father",
                            "Husband",
                            "Mother",
                            "Other",
                            "Sister",
                            "Son",
                            "Wife",
                            "Charity",
                            "Trust",
                            "Spouse",
                            "Child",
                            "Sibling",
                            "Parent",
                            "Grandchild",
                            "Common Law Partner"
                        ]
                    }
                }
            },
            "IRAPrimaryBeneficiaryEntity": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "ownershipPercentage": {
                        "type": "number"
                    },
                    "title": {
                        "$ref": "#/components/schemas/Title"
                    },
                    "relationship": {
                        "type": "string",
                        "enum": [
                            "Brother",
                            "Daughter",
                            "Estate",
                            "Father",
                            "Husband",
                            "Mother",
                            "Other",
                            "Sister",
                            "Son",
                            "Wife",
                            "Charity",
                            "Trust",
                            "Spouse",
                            "Child",
                            "Sibling",
                            "Parent",
                            "Grandchild",
                            "Common Law Partner"
                        ]
                    },
                    "executor": {
                        "$ref": "#/components/schemas/Individual"
                    },
                    "executionDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "articleOfWill": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string",
                        "enum": [
                            "Trust",
                            "Estate",
                            "Charity"
                        ]
                    },
                    "charityNumber": {
                        "type": "string"
                    }
                }
            },
            "IRAWithdrawalDetails": {
                "type": "object",
                "properties": {
                    "distributionType": {
                        "type": "string",
                        "enum": [
                            "NORMAL",
                            "EARLY",
                            "EARLY_EXCEPT",
                            "DEATH",
                            "DISABILITY",
                            "EXCESS_CONTRIB"
                        ]
                    },
                    "excessContribYr": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fedTaxRate": {
                        "type": "number"
                    },
                    "legalResidenceState": {
                        "type": "string"
                    },
                    "stateTaxRate": {
                        "type": "number"
                    }
                }
            },
            "Identification": {
                "type": "object",
                "properties": {
                    "citizenship": {
                        "type": "string",
                        "description": "Citizenship of the applicant.<br>If citizenship, citizenship2, OR citizenship3 is classified as a ‘Prohibited Country', THEN ProhibitedCountryQuestionnaire is required.<br>List of Prohibited Countries an be obtained using /getEnumerations<br>Preferred id document by IssuingCountry"
                    },
                    "citizenship2": {
                        "type": "string",
                        "description": "If the applicant has multiple citizenship, provide the additional citizenship of the applicant.<br>If citizenship, citizenship2, OR citizenship3 is classified as a ‘Prohibited Country', THEN ProhibitedCountryQuestionnaire is required.<br>List of Prohibited Countries an be obtained using /getEnumerations<br>Preferred id document by IssuingCountry"
                    },
                    "citizenship3": {
                        "type": "string",
                        "description": "If the applicant has multiple citizenship, provide the additional citizenship of the applicant.<br>If citizenship, citizenship2, OR citizenship3 is classified as a ‘Prohibited Country', THEN ProhibitedCountryQuestionnaire is required.<br>List of Prohibited Countries an be obtained using /getEnumerations<br>Preferred id document by IssuingCountry"
                    },
                    "ssn": {
                        "type": "string",
                        "description": "Social security number, required for US Residents and citizens."
                    },
                    "sin": {
                        "type": "string",
                        "description": "Social insurance number, required for Canada Residents and citizens."
                    },
                    "driversLicense": {
                        "type": "string",
                        "description": "Drivers License<br>Pattern for AUS: ^.{0,64}$<br>Pattern for NZL: ^[A-Z]{2}\\d{6}$"
                    },
                    "passport": {
                        "type": "string",
                        "description": "Passport"
                    },
                    "alienCard": {
                        "type": "string",
                        "description": "Alien Card"
                    },
                    "medicareCard": {
                        "type": "string",
                        "description": "Only applicable for Australia residents."
                    },
                    "cardColor": {
                        "type": "string",
                        "description": "Required if MedicareCard is provided.",
                        "enum": [
                            "BLUE",
                            "GREEN",
                            "YELLOW"
                        ]
                    },
                    "medicareReference": {
                        "type": "string",
                        "description": "Required if MedicareCard is provided."
                    },
                    "nationalCard": {
                        "type": "string",
                        "description": "National Identification Card<br>Pattern by Country-<br> ARG: ^\\d{8}$<br>AUS: ^(\\d{8}|\\d{9})$<br>BRA: ^\\d{11}$<br>CHN: ^\\d{17}(\\d|X)$<br>DNK: ^\\d{10}$<br>ESP: ^\\d{8}[A-Z]$<br>FRA: ^\\d{15}$<br>FRA: ^\\d{4}([A-Z]|\\d){3}\\d{5}$<br>ITA: ^([A-Z]{2}\\d{7}|\\d{7}[A-Z]{2}|[A-Z]{2}\\d{5}[A-Z]{2})$<br>ITA: ^[A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z]$<br>MEX: ^[A-Z]{4}\\d{6}[A-Z]{6}\\d{2}$<br>MYZ: ^\\d{12}$<br>RUS: ^\\d{10}$<br>RUS: ^\\d{9}$<br>SGP: ^[A-Z]\\d{7}[A-Z]$<br>SWE: ^(\\d{10}|\\d{12})$<br>TUR: ^\\d{11}$<br>ZAF: ^\\d{13}$"
                    },
                    "issuingCountry": {
                        "type": "string",
                        "description": "Issuing country of the ID document."
                    },
                    "issuingState": {
                        "type": "string",
                        "description": "Issuing state of the ID document."
                    },
                    "rta": {
                        "type": "string",
                        "description": "Only applicable IF ID_Type=DriversLicense AND IssuingCountry=AUS"
                    },
                    "legalResidenceCountry": {
                        "type": "string"
                    },
                    "legalResidenceState": {
                        "type": "string"
                    },
                    "educationalQualification": {
                        "type": "string"
                    },
                    "fathersName": {
                        "type": "string"
                    },
                    "greenCard": {
                        "type": "boolean"
                    },
                    "panNumber": {
                        "type": "string",
                        "description": "India PanCard, required for India Residents and citizens."
                    },
                    "taxId": {
                        "type": "string",
                        "description": "Tax ID TIN within <TaxResidencies>foreign_tax_id within <W8Ben>"
                    },
                    "proofOfAgeCard": {
                        "type": "string"
                    },
                    "expire": {
                        "type": "boolean",
                        "description": "Indicate IF ID document has an ExpirationDate."
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "Provide expiration date of the ID document. Cannot be past date.",
                        "format": "date"
                    }
                },
                "description": "Identification information of the associated person.",
                "example": {
                    "citizenship": "AUS",
                    "driversLicense": "989444798",
                    "issuingCountry": "AUS",
                    "hasExpirationDate": true,
                    "expirationDate": "2029-03-22",
                    "rta": "9999999",
                    "issuingState": "AU-QLD"
                }
            },
            "Individual": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "nativeName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "birthName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "motherMaidenName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the applicant. The applicant must be 18 years or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error will be triggered and the account will not be created.</li><li>If YYYY-MM-DD < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.</li><li>This application must be opened using the front-end application which is available within the IBKR Portal.</li><li>Assets held in a single account managed by a single Custodian user.</li><li>Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.</li></ul>",
                        "example": "1990-08-14"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "cityOfBirth": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "Male",
                            "Female"
                        ]
                    },
                    "maritalStatus": {
                        "type": "string",
                        "enum": [
                            "S",
                            "M",
                            "W",
                            "D",
                            "C"
                        ]
                    },
                    "numDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/ResidenceAddress"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "$ref": "#/components/schemas/EmploymentDetails"
                    },
                    "employeeTitle": {
                        "type": "string"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaireList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "authorizedToSignOnBehalfOfOwner": {
                        "type": "boolean"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    },
                    "primaryTrustee": {
                        "type": "boolean"
                    }
                }
            },
            "IndividualApplicant": {
                "type": "object",
                "properties": {
                    "accountHolderDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedIndividual"
                        }
                    },
                    "financialInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialInformation"
                        }
                    },
                    "regulatoryInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryInformation"
                        }
                    },
                    "regulatedMemberships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatedMembership"
                        }
                    },
                    "accreditedInvestorInformation": {
                        "$ref": "#/components/schemas/AccreditedInvestorInformation"
                    },
                    "taxInformation": {
                        "$ref": "#/components/schemas/IndividualTaxInformation"
                    },
                    "withholdingStatement": {
                        "$ref": "#/components/schemas/WithholdingStatementType"
                    }
                }
            },
            "IndividualIRABene": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "dateOfBirth": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "identification": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "location": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "relationship": {
                        "type": "string"
                    },
                    "ownership": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "perStripes": {
                        "type": "string"
                    }
                }
            },
            "IndividualName": {
                "type": "object",
                "properties": {
                    "salutation": {
                        "type": "string",
                        "enum": [
                            "Mr.",
                            "Mrs.",
                            "Ms.",
                            "Dr.",
                            "Mx.",
                            "Ind."
                        ]
                    },
                    "first": {
                        "type": "string"
                    },
                    "last": {
                        "type": "string"
                    },
                    "middle": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string",
                        "enum": [
                            "Jr.",
                            "Sr.",
                            "I",
                            "II",
                            "III",
                            "IV",
                            "V"
                        ]
                    },
                    "title": {
                        "type": "string"
                    }
                }
            },
            "IndividualTaxInformation": {
                "type": "object",
                "properties": {
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "w8BenE": {
                        "$ref": "#/components/schemas/FormW8BENE"
                    }
                }
            },
            "InformationChange": {
                "type": "object",
                "properties": {
                    "addEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddEntity"
                        }
                    },
                    "updateEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpdateEntity"
                        }
                    },
                    "deleteEntities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeleteEntity"
                        }
                    },
                    "ibAccountId": {
                        "type": "string"
                    }
                }
            },
            "InstructionErrorResult": {
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "required": [
                            "errorCode",
                            "errorMessage"
                        ],
                        "type": "object",
                        "properties": {
                            "errorCode": {
                                "type": "string"
                            },
                            "errorMessage": {
                                "type": "string"
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionResult"
                    }
                ]
            },
            "InstructionPollingResponse": {
                "required": [
                    "instructionSetId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "number",
                        "example": 202
                    },
                    "instructionSetId": {
                        "type": "number",
                        "example": -1988905739
                    },
                    "instructionResult": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PollingInstructionResult"
                            }
                        ]
                    }
                }
            },
            "InstructionResponse": {
                "required": [
                    "instructionSetId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "number",
                        "example": 202
                    },
                    "instructionSetId": {
                        "type": "number",
                        "example": -1988905739
                    },
                    "instructionResult": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InstructionResult"
                            }
                        ]
                    }
                }
            },
            "InstructionResult": {
                "required": [
                    "clientInstructionId",
                    "instructionId",
                    "instructionStatus",
                    "instructionType"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "string",
                        "example": "1012983"
                    },
                    "instructionType": {
                        "type": "string",
                        "example": "INTERNAL_CASH_TRANSFER",
                        "enum": [
                            "ACCOUNT_CLOSE",
                            "ACH_INSTRUCTION",
                            "APPLY_FEE_TEMPLATE",
                            "CANCEL_INSTRUCTION",
                            "COMPLEX_ASSET_TRANSFER",
                            "DELETE_BANK_INSTRUCTION",
                            "DEPOSIT",
                            "DWAC",
                            "EXTERNAL_POSITION_TRANSFER",
                            "FOP",
                            "QUERY_RECENT_INSTRUCTIONS",
                            "QUERY_WITHDAWABLE_FUNDS INTERNAL_POSITION_TRANSFER",
                            "INTERNAL_CASH_TRANSFER",
                            "MICRO_AMOUNT",
                            "PREDEFINED_DESTINATION_INSTRUCTION TRADITIONAL_BANK_INSTRUCTION_VERIFICATION",
                            "WITHDRAWAL",
                            "QUERY_IRA_CONTRIBUTIONS"
                        ]
                    },
                    "instructionStatus": {
                        "type": "string",
                        "example": "PENDING",
                        "enum": [
                            "PENDING",
                            "PROCESSED"
                        ]
                    },
                    "instructionId": {
                        "type": "number",
                        "example": 45123654
                    },
                    "ibReferenceId": {
                        "type": "number",
                        "example": 23456745
                    },
                    "description": {
                        "type": "string",
                        "example": "Please poll for status after 10 minutes"
                    }
                }
            },
            "InsufficientScopeResponse": {
                "required": [
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Forbidden"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 403
                    },
                    "detail": {
                        "type": "string",
                        "example": "The access token fails to have sufficient scope"
                    }
                }
            },
            "InterestMarkupType": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "JPY",
                            "HKD",
                            "AUD",
                            "CHF",
                            "MXN",
                            "SEK",
                            "NZD",
                            "HUF",
                            "CZK",
                            "CNH",
                            "DKK",
                            "RUB",
                            "ILS",
                            "NOK",
                            "SGD",
                            "PLN",
                            "ZAR",
                            "AED",
                            "KRW",
                            "SAR",
                            "TRY"
                        ]
                    },
                    "debitMarkup": {
                        "type": "number"
                    },
                    "ibDebitMarkup": {
                        "type": "number"
                    },
                    "creditMarkdown": {
                        "type": "number"
                    },
                    "shortCreditMarkdown": {
                        "type": "number"
                    },
                    "shortCfdCreditMarkdown": {
                        "type": "number"
                    },
                    "longCfdDebitMarkdown": {
                        "type": "number"
                    },
                    "shortIndexCfdCreditMarkdown": {
                        "type": "number"
                    },
                    "longIndexCfdDebitMarkdown": {
                        "type": "number"
                    },
                    "shortFxCfdMarkup": {
                        "type": "number"
                    },
                    "longFxCfdMarkdown": {
                        "type": "number"
                    }
                }
            },
            "InternalCashTransferInstruction": {
                "maxProperties": 6,
                "minProperties": 5,
                "required": [
                    "amount",
                    "clientInstructionId",
                    "currency",
                    "sourceAccountId",
                    "targetAccountId"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "sourceAccountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "targetAccountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U15667"
                    },
                    "amount": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 123
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "GBP"
                    },
                    "dateTimeToOccur": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "InternalPositionTransferInstruction": {
                "maxProperties": 5,
                "minProperties": 5,
                "required": [
                    "clientInstructionId",
                    "sourceAccountId",
                    "targetAccountId",
                    "tradingInstrument",
                    "transferQuantity"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "sourceAccountId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "targetAccountId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "U463756"
                    },
                    "transferQuantity": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 100
                    },
                    "tradingInstrument": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TradingInstrument"
                            }
                        ]
                    }
                }
            },
            "InternalServerErrorResponse": {
                "required": [
                    "status",
                    "title",
                    "type"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Internal Server Error"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 500
                    }
                }
            },
            "InvalidAccessTokenResponse": {
                "required": [
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 401
                    },
                    "detail": {
                        "type": "string",
                        "example": "The access token request is invalid"
                    }
                }
            },
            "InvalidArgument": {
                "required": [
                    "field"
                ],
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string",
                        "example": "accountId"
                    },
                    "description": {
                        "type": "string",
                        "example": "Missing required parameter"
                    }
                }
            },
            "JointApplicant": {
                "type": "object",
                "properties": {
                    "firstHolderDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedIndividual"
                        }
                    },
                    "secondHolderDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssociatedIndividual"
                        }
                    },
                    "financialInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialInformation"
                        }
                    },
                    "regulatoryInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryInformation"
                        }
                    },
                    "regulatedMemberships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatedMembership"
                        }
                    },
                    "accreditedInvestorInformation": {
                        "$ref": "#/components/schemas/AccreditedInvestorInformation"
                    },
                    "taxInformation": {
                        "$ref": "#/components/schemas/IndividualTaxInformation"
                    },
                    "withholdingStatement": {
                        "$ref": "#/components/schemas/WithholdingStatementType"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "community",
                            "joint_tenants",
                            "tenants_common",
                            "tbe",
                            "au_joint_account"
                        ]
                    }
                }
            },
            "JoseHeader": {
                "type": "object",
                "properties": {
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "JwsPayload": {
                "type": "object"
            },
            "LeaveDRIP": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "LeaveSYEP": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "LegalEntity": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "legalEntityIdentification": {
                        "$ref": "#/components/schemas/LegalEntityIdentification"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    }
                }
            },
            "LegalEntityIdentification": {
                "type": "object",
                "properties": {
                    "placeOfBusinessAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "identification": {
                        "type": "string"
                    },
                    "identificationCountry": {
                        "type": "string"
                    },
                    "formationCountry": {
                        "type": "string"
                    },
                    "formationType": {
                        "type": "string",
                        "enum": [
                            "PUBLIC",
                            "PRIVATE",
                            "OTHER"
                        ]
                    },
                    "exchangeCode": {
                        "type": "string"
                    },
                    "exchangeSymbol": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    }
                }
            },
            "LinkDuplicateAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "externalAccountId": {
                        "type": "string"
                    },
                    "clientActiveTrading": {
                        "type": "boolean"
                    }
                }
            },
            "LocalTaxForm": {
                "type": "object",
                "properties": {
                    "taxAuthority": {
                        "type": "string",
                        "enum": [
                            "ISRAEL_TA",
                            "CANADA_TA",
                            "RUSSIA_TA",
                            "SWEDEN_TA",
                            "AUSTRALIA_TA"
                        ]
                    },
                    "qualified": {
                        "type": "boolean"
                    },
                    "treatyCountry": {
                        "type": "string"
                    }
                }
            },
            "LoginMessage": {
                "type": "object",
                "properties": {
                    "recordDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "username": {
                        "type": "string"
                    },
                    "messageType": {
                        "type": "string"
                    },
                    "contentId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "state": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "LoginMessageRequest": {
                "required": [
                    "endDate",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "offset": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "N",
                            "O",
                            "P",
                            "C",
                            "A",
                            "E",
                            "F",
                            "I",
                            "J",
                            "L",
                            "M",
                            "R",
                            "W",
                            "Q"
                        ]
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "LoginMessageResponse": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "clearingStatus": {
                        "type": "string"
                    },
                    "clearingStatusDescription": {
                        "type": "string"
                    },
                    "loginMessages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LoginMessage"
                        }
                    },
                    "loginMessagePresent": {
                        "type": "boolean"
                    }
                }
            },
            "MailingAddress": {
                "type": "object",
                "properties": {
                    "street1": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "ManageMarketDataSubscriptions": {
                "type": "object",
                "properties": {
                    "service": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "referenceUserName": {
                        "type": "string"
                    }
                }
            },
            "ManagingOwner": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "is25PercentOwner": {
                        "type": "boolean"
                    }
                }
            },
            "MarkupStaircaseType": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number"
                    },
                    "break": {
                        "type": "number"
                    }
                }
            },
            "MissingRequiredParameterResponse": {
                "required": [
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/invalid-argument"
                    },
                    "title": {
                        "type": "string",
                        "example": "Bad Request"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 400
                    },
                    "invalidArguments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvalidArgument"
                        }
                    }
                }
            },
            "NAVRangeType": {
                "type": "object",
                "properties": {
                    "min": {
                        "type": "number"
                    },
                    "max": {
                        "type": "number"
                    },
                    "maxFee": {
                        "type": "number"
                    }
                }
            },
            "Name": {
                "type": "object",
                "properties": {
                    "first": {
                        "type": "string"
                    },
                    "last": {
                        "type": "string"
                    }
                }
            },
            "NoSuchInstructionResponse": {
                "required": [
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Not found"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 404
                    },
                    "detail": {
                        "type": "string",
                        "example": "No such instruction found"
                    }
                }
            },
            "NoSuchInstructionSetResponse": {
                "required": [
                    "instructionSetId",
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Not found"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 404
                    },
                    "detail": {
                        "type": "string",
                        "example": "No such instruction set found"
                    },
                    "instructionSetId": {
                        "type": "integer",
                        "format": "int32",
                        "example": 8389943
                    }
                }
            },
            "NonDisclosedDetail": {
                "maxProperties": 8,
                "minProperties": 2,
                "required": [
                    "settleDate",
                    "tradeDate"
                ],
                "type": "object",
                "properties": {
                    "tradeDate": {
                        "type": "string",
                        "example": "2023-07-08"
                    },
                    "settleDate": {
                        "type": "string",
                        "example": "2023-07-18"
                    },
                    "psetBic": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "example": "DTCYUS33XXX"
                    },
                    "reagDeagBic": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "example": "CH100164"
                    },
                    "buyerSellBic": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "example": "320043"
                    },
                    "memberAccountId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "example": "123456"
                    },
                    "safeKeepingAccountId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "example": "123456"
                    }
                }
            },
            "ORGRegulatorType": {
                "type": "object",
                "properties": {
                    "regulatorName": {
                        "type": "string"
                    },
                    "regulatorCountry": {
                        "type": "string"
                    },
                    "regulatedInCapacity": {
                        "type": "string"
                    },
                    "regulatorId": {
                        "type": "string"
                    }
                }
            },
            "ORGRegulatoryInfoType": {
                "type": "object",
                "properties": {
                    "publicCompanyInfo": {
                        "$ref": "#/components/schemas/PublicCompanyInfoType"
                    },
                    "orgRegulators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ORGRegulatorType"
                        }
                    },
                    "regulated": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    }
                }
            },
            "OrderQuantityLimit": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string",
                        "enum": [
                            "BILL",
                            "BOND",
                            "CASH",
                            "CFD",
                            "COMB",
                            "FOP",
                            "FUND",
                            "FUT",
                            "OPT",
                            "SSF",
                            "STK",
                            "WAR",
                            "MRGN"
                        ]
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "OrderValueLimits": {
                "type": "object",
                "properties": {
                    "maxOrderValue": {
                        "type": "number"
                    },
                    "maxGrossValue": {
                        "type": "number"
                    },
                    "maxNetValue": {
                        "type": "number"
                    },
                    "netContractLimit": {
                        "type": "number"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "identification": {
                        "$ref": "#/components/schemas/OrganizationIdentification"
                    },
                    "regulatoryInformation": {
                        "$ref": "#/components/schemas/RegulatoryInformation"
                    }
                }
            },
            "OrganizationApplicant": {
                "type": "object",
                "properties": {
                    "identifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrganizationIdentification"
                        }
                    },
                    "accountSupport": {
                        "$ref": "#/components/schemas/AccountSupportType"
                    },
                    "financialInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialInformation"
                        }
                    },
                    "accreditedInvestorInformation": {
                        "$ref": "#/components/schemas/AccreditedInvestorInformation"
                    },
                    "regulatoryInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryInformation"
                        }
                    },
                    "managingOwner": {
                        "$ref": "#/components/schemas/ManagingOwner"
                    },
                    "associatedEntities": {
                        "$ref": "#/components/schemas/AssociatedEntities"
                    },
                    "regulatedMemberships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatedMembership"
                        }
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w8BenE": {
                        "$ref": "#/components/schemas/FormW8BENE"
                    },
                    "w8IMY": {
                        "$ref": "#/components/schemas/FormW8IMY"
                    },
                    "withholdingStatement": {
                        "$ref": "#/components/schemas/WithholdingStatementType"
                    },
                    "typeOfTrading": {
                        "type": "string",
                        "enum": [
                            "FIRM",
                            "CUSTOMER"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "LLC",
                            "CORPORATION",
                            "PARTNERSHIP",
                            "UNINCORPORATED BUSINESS"
                        ]
                    },
                    "orgUsSubsidiary": {
                        "type": "boolean"
                    },
                    "qualifiedIntermediary": {
                        "type": "boolean"
                    },
                    "assumedPrimaryReporting": {
                        "type": "boolean"
                    },
                    "acceptedPrimaryWithholding": {
                        "type": "boolean"
                    },
                    "usTaxPurposeType": {
                        "type": "string",
                        "enum": [
                            "C",
                            "P",
                            "E"
                        ]
                    }
                }
            },
            "OrganizationIdentification": {
                "type": "object",
                "properties": {
                    "placeOfBusinessAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "businessDescription": {
                        "type": "string"
                    },
                    "websiteAddress": {
                        "type": "string"
                    },
                    "identification": {
                        "type": "string"
                    },
                    "identificationCountry": {
                        "type": "string"
                    },
                    "formationCountry": {
                        "type": "string"
                    },
                    "formationState": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    }
                }
            },
            "PartialBondPosition": {
                "type": "object",
                "properties": {
                    "cusipNumber": {
                        "type": "string"
                    },
                    "numberOfBonds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "all": {
                        "type": "boolean"
                    }
                }
            },
            "PartialCashPosition": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "float"
                    },
                    "marginLoan": {
                        "type": "boolean"
                    },
                    "fullCash": {
                        "type": "boolean"
                    }
                }
            },
            "PartialFundPosition": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string"
                    },
                    "numberOfShares": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "all": {
                        "type": "boolean"
                    }
                }
            },
            "PartialOptionPosition": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string"
                    },
                    "numberOfContracts": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "all": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "string",
                        "enum": [
                            "LONG",
                            "SHORT"
                        ]
                    },
                    "optionType": {
                        "type": "string",
                        "enum": [
                            "CALL",
                            "PUT"
                        ]
                    },
                    "strikePrice": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expirationDate": {
                        "type": "string"
                    }
                }
            },
            "PartialStockPosition": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string"
                    },
                    "numberOfShares": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "all": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "string",
                        "enum": [
                            "LONG",
                            "SHORT"
                        ]
                    },
                    "exchange": {
                        "type": "string"
                    }
                }
            },
            "PartialWarrantPosition": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string"
                    },
                    "numberOfShares": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "all": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "string",
                        "enum": [
                            "LONG",
                            "SHORT"
                        ]
                    },
                    "optionType": {
                        "type": "string",
                        "enum": [
                            "CALL",
                            "PUT"
                        ]
                    },
                    "strikePrice": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "expirationDate": {
                        "type": "string"
                    }
                }
            },
            "PendingTask": {
                "type": "object",
                "properties": {
                    "taskNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "formNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "formName": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "documentRejectReason": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "url": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "au10tixCreatedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "au10tixExpiryDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "entityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "onlineTask": {
                        "type": "boolean"
                    },
                    "requiredForApproval": {
                        "type": "boolean"
                    },
                    "requiredForTrading": {
                        "type": "boolean"
                    },
                    "questionIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "PendingTasksResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "pendingTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PendingTask"
                        }
                    },
                    "pendingTaskPresent": {
                        "type": "boolean"
                    }
                }
            },
            "PhoneInfo": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "Work",
                            "Home",
                            "Fax",
                            "Mobile",
                            "Mobile (work)",
                            "Mobile (other)",
                            "Business",
                            "Other (voice)"
                        ]
                    },
                    "number": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "verified": {
                        "type": "boolean"
                    }
                }
            },
            "PoliticalMilitaryDiplomaticDetailsType": {
                "type": "object",
                "properties": {
                    "personName": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "organization": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    }
                }
            },
            "PollingInstructionResult": {
                "required": [
                    "clientInstructionId",
                    "instructionId",
                    "instructionStatus",
                    "instructionType"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "string",
                        "example": "1012983"
                    },
                    "instructionType": {
                        "type": "string",
                        "example": "INTERNAL_CASH_TRANSFER",
                        "enum": [
                            "ACCOUNT_CLOSE",
                            "ACH_INSTRUCTION",
                            "APPLY_FEE_TEMPLATE",
                            "CANCEL_INSTRUCTION",
                            "COMPLEX_ASSET_TRANSFER",
                            "DELETE_BANK_INSTRUCTION",
                            "DEPOSIT",
                            "DWAC",
                            "EXTERNAL_POSITION_TRANSFER",
                            "FOP",
                            "QUERY_RECENT_INSTRUCTIONS",
                            "QUERY_WITHDAWABLE_FUNDS INTERNAL_POSITION_TRANSFER",
                            "INTERNAL_CASH_TRANSFER",
                            "MICRO_AMOUNT",
                            "PREDEFINED_DESTINATION_INSTRUCTION TRADITIONAL_BANK_INSTRUCTION_VERIFICATION",
                            "WITHDRAWAL"
                        ]
                    },
                    "instructionStatus": {
                        "type": "string",
                        "example": "PENDING",
                        "enum": [
                            "PENDING",
                            "REJECTED",
                            "PROCESSED"
                        ]
                    },
                    "instructionId": {
                        "type": "number",
                        "example": 45123654
                    },
                    "ibReferenceId": {
                        "type": "number",
                        "example": 23456745
                    },
                    "description": {
                        "type": "string",
                        "example": "Please poll for status after 10 minutes"
                    },
                    "error": {
                        "required": [
                            "errorCode",
                            "errorMessage"
                        ],
                        "type": "object",
                        "properties": {
                            "errorCode": {
                                "type": "string"
                            },
                            "errorMessage": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "PredefinedDestinationInstruction": {
                "maxProperties": 6,
                "minProperties": 5,
                "required": [
                    "accountId",
                    "bankInstructionMethod",
                    "bankInstructionName",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "bankInstructionName": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "example": "Instruction"
                    },
                    "bankInstructionMethod": {
                        "type": "string",
                        "example": "ACH",
                        "enum": [
                            "LVP",
                            "SEPA",
                            "WIRE",
                            "ACH",
                            "CPA"
                        ]
                    },
                    "accountId": {
                        "maxLength": 10,
                        "minLength": 1,
                        "type": "string",
                        "example": "U2323232"
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    },
                    "financialInstitution": {
                        "maxProperties": 5,
                        "minProperties": 4,
                        "required": [
                            "clientAccountId",
                            "identifier",
                            "identifierType",
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string",
                                "example": "SBI BANK"
                            },
                            "branchCode": {
                                "maxLength": 32,
                                "minLength": 0,
                                "type": "string"
                            },
                            "branchCodeType": {
                                "type": "string",
                                "enum": [
                                    "BSB_AUD",
                                    "BANK_CODE_CAD",
                                    "NONE"
                                ]
                            },
                            "identifier": {
                                "maxLength": 24,
                                "minLength": 1,
                                "type": "string",
                                "example": "SBIN001000"
                            },
                            "identifierType": {
                                "maxLength": 16,
                                "minLength": 1,
                                "type": "string",
                                "example": "IFSC"
                            },
                            "clientAccountId": {
                                "maxLength": 32,
                                "minLength": 1,
                                "type": "string",
                                "example": "132456789"
                            }
                        }
                    }
                }
            },
            "PreviousLossesType": {
                "type": "object",
                "properties": {
                    "loss": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "quarter": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "year": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "currency": {
                        "type": "string"
                    }
                }
            },
            "PrimaryContributorType": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "middleInitial": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "suffix": {
                        "type": "string",
                        "enum": [
                            "Jr.",
                            "Sr.",
                            "I",
                            "II",
                            "III",
                            "IV",
                            "V"
                        ]
                    },
                    "employer": {
                        "type": "string"
                    },
                    "occupation": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "sourceOfFunds": {
                        "type": "string"
                    }
                }
            },
            "ProblemDetailResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "instance": {
                        "type": "string",
                        "format": "uri"
                    }
                }
            },
            "ProcessDocuments": {
                "type": "object",
                "properties": {
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    },
                    "translation": {
                        "type": "boolean"
                    }
                }
            },
            "ProhibitedCountryQuestionnaire": {
                "type": "object",
                "properties": {
                    "prohibitedQuestionnaireDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProhibitedQuestionnaireDetail"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    }
                }
            },
            "ProhibitedCountryQuestionnaireList": {
                "type": "object",
                "properties": {
                    "prohibitedQuestionnaireDetail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProhibitedQuestionnaireDetail"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    }
                }
            },
            "ProhibitedQuestionnaireDetail": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "PASSPORT",
                            "CITIZENSHIP",
                            "BUSINESSDEALINGS",
                            "FINANCIALACCOUNTS",
                            "RESIDENT",
                            "MULTI",
                            "BIRTH"
                        ]
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "details": {
                        "type": "string"
                    }
                }
            },
            "PublicCompanyInfoType": {
                "type": "object",
                "properties": {
                    "exchangeTradedOn": {
                        "type": "string"
                    },
                    "quotedSymbol": {
                        "type": "string"
                    }
                }
            },
            "QualifiedPurchaser": {
                "type": "object",
                "properties": {
                    "qualifiedPurchaserDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QualifiedPurchaserDetails"
                        }
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "QualifiedPurchaserDetails": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "InvestmentCompanyAct",
                            "DiscretionaryBasis"
                        ]
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "QueryBankInstruction": {
                "required": [
                    "accountId",
                    "bankInstructionMethod",
                    "clientInstructionId"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "U32343"
                    },
                    "bankInstructionMethod": {
                        "minLength": 1,
                        "type": "string",
                        "example": "WIRE"
                    }
                }
            },
            "QueryBankInstructionResult": {
                "required": [
                    "accountId",
                    "bankInstructionMethod",
                    "instructionDetails"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "bankInstructionMethod": {
                        "type": "string",
                        "enum": [
                            "WIRE",
                            "ACH"
                        ]
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionResult"
                    }
                ]
            },
            "QueryFeeTemplate": {
                "required": [
                    "accountId",
                    "clientInstructionId"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "U32343"
                    }
                }
            },
            "QueryFeeTemplateResult": {
                "required": [
                    "templateDetails"
                ],
                "type": "object",
                "properties": {
                    "templateDetails": {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string"
                            },
                            "templateName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionResult"
                    }
                ]
            },
            "QueryIRAContributions": {
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "year"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "U68903"
                    },
                    "year": {
                        "type": "string",
                        "example": "2003"
                    }
                }
            },
            "QueryIRAContributionsResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionPollingResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "instructionResult": {
                                "$ref": "#/components/schemas/QueryIRAContributionsResult"
                            }
                        }
                    }
                ]
            },
            "QueryIRAContributionsResult": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PollingInstructionResult"
                    },
                    {
                        "required": [
                            "accountId",
                            "contributions",
                            "iraType",
                            "year"
                        ],
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string"
                            },
                            "year": {
                                "type": "string"
                            },
                            "iraType": {
                                "type": "string"
                            },
                            "contributions": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "allowedContributionLimit",
                                        "maximumContributionLimit",
                                        "yearToDateContribution"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "maximumContributionLimit": {
                                            "type": "number"
                                        },
                                        "yearToDateContribution": {
                                            "type": "number"
                                        },
                                        "allowedContributionLimit": {
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "QueryRecentInstructionResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionPollingResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "instructionResult": {
                                "$ref": "#/components/schemas/QueryRecentInstructionResult"
                            }
                        }
                    }
                ]
            },
            "QueryRecentInstructionResult": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PollingInstructionResult"
                    },
                    {
                        "required": [
                            "instructionHistory"
                        ],
                        "type": "object",
                        "properties": {
                            "instructionHistory": {
                                "required": [
                                    "historyMaxDepthNumberOfDays",
                                    "historyMaxDepthNumberOfInstruction",
                                    "result"
                                ],
                                "type": "object",
                                "properties": {
                                    "historyMaxDepthNumberOfDays": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "historyMaxDepthNumberOfInstruction": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "result": {
                                        "required": [
                                            "clientInstructionId",
                                            "ibInstructionId",
                                            "instructionSetId",
                                            "instructionType",
                                            "requestDate",
                                            "status"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "clientInstructionId": {
                                                "type": "number"
                                            },
                                            "ibInstructionId": {
                                                "type": "number"
                                            },
                                            "instructionType": {
                                                "type": "string"
                                            },
                                            "requestDate": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "instructionSetId": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            },
            "QueryRecentInstructions": {
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "transactionHistory"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "type": "string",
                        "example": "U32343"
                    },
                    "transactionHistory": {
                        "required": [
                            "daysToGoBack"
                        ],
                        "type": "object",
                        "properties": {
                            "daysToGoBack": {
                                "type": "number",
                                "example": 5
                            },
                            "transactionType": {
                                "type": "string",
                                "example": "INTERNAL_CASH_TRANSFER"
                            }
                        }
                    }
                }
            },
            "QueryRecentRecurringEventResult": {
                "required": [
                    "amount",
                    "currency",
                    "method",
                    "recurringInstructionName",
                    "recurringTransactionStatus",
                    "recurringTransactionType",
                    "transactionHistory"
                ],
                "type": "object",
                "properties": {
                    "recurringInstructionName": {
                        "type": "string"
                    },
                    "recurringTransactionType": {
                        "type": "string"
                    },
                    "recurringTransactionStatus": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "method": {
                        "type": "string"
                    },
                    "transactionHistory": {
                        "type": "object",
                        "properties": {
                            "maxNumberOfTransactions": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "result": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "ibRequestId": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionResult"
                    }
                ]
            },
            "QueryRecentRecurringEvents": {
                "required": [
                    "clientInstructionId",
                    "ibReferenceId"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "ibReferenceId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "-343872793"
                    },
                    "numberOfTransactions": {
                        "type": "number",
                        "example": 15
                    }
                }
            },
            "QueryRecurringInstructions": {
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "minLength": 1,
                        "type": "string",
                        "example": "U399192"
                    },
                    "currency": {
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    }
                }
            },
            "QueryRecurringInstructionsResult": {
                "required": [
                    "accountId",
                    "recurringInstructions"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "recurringInstructions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "requestId": {
                                    "type": "integer",
                                    "format": "int32"
                                },
                                "bankInstructionName": {
                                    "type": "string"
                                },
                                "transactionType": {
                                    "type": "string"
                                },
                                "bankInstructionMethod": {
                                    "type": "string"
                                },
                                "amount": {
                                    "type": "number"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "frequency": {
                                    "type": "string"
                                },
                                "startDate": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "endDate": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionResult"
                    }
                ]
            },
            "QueryWithdrawableAmountsInstructionResult": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PollingInstructionResult"
                    },
                    {
                        "required": [
                            "accountId",
                            "allowedTransferAmountToMaster",
                            "currency",
                            "withdrawableAmount",
                            "withdrawableAmountNoBorrow",
                            "withdrawableAmountWithoutOriginationHoldNoBorrow"
                        ],
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string"
                            },
                            "currency": {
                                "type": "string"
                            },
                            "withdrawableAmount": {
                                "type": "number"
                            },
                            "withdrawableAmountNoBorrow": {
                                "type": "number"
                            },
                            "allowedTransferAmountToMaster": {
                                "type": "number"
                            },
                            "withdrawableAmountWithoutOriginationHoldNoBorrow": {
                                "type": "number"
                            }
                        }
                    }
                ]
            },
            "QueryWithdrawableAmountsResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionPollingResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "instructionResult": {
                                "$ref": "#/components/schemas/QueryWithdrawableAmountsInstructionResult"
                            }
                        }
                    }
                ]
            },
            "QueryWithdrawableAmountsWithoutOriginHoldResponse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/InstructionPollingResponse"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "instructionResult": {
                                "$ref": "#/components/schemas/QueryWithdrawableAmountsWithoutOriginHoldResult"
                            }
                        }
                    }
                ]
            },
            "QueryWithdrawableAmountsWithoutOriginHoldResult": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PollingInstructionResult"
                    },
                    {
                        "required": [
                            "accountId",
                            "currency",
                            "withdrawableAmountWithoutOriginationHold",
                            "withdrawableAmountWithoutOriginationHoldNoBorrow"
                        ],
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string"
                            },
                            "currency": {
                                "type": "string"
                            },
                            "withdrawableAmountWithoutOriginationHold": {
                                "type": "number"
                            },
                            "withdrawableAmountWithoutOriginationHoldNoBorrow": {
                                "type": "number"
                            }
                        }
                    }
                ]
            },
            "QueryWithdrawableFunds": {
                "required": [
                    "accountId",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "bankRoutingNumber": {
                        "minLength": 0,
                        "type": "string",
                        "example": "122199983"
                    },
                    "bankClientAccountNumber": {
                        "minLength": 0,
                        "type": "string",
                        "example": "9876543210"
                    }
                }
            },
            "QueryWithdrawableWithoutOriginHoldFunds": {
                "required": [
                    "accountId",
                    "bankAccountNumber",
                    "bankRoutingNumber",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "bankRoutingNumber": {
                        "minLength": 0,
                        "type": "string",
                        "example": "122199983"
                    },
                    "bankClientAccountNumber": {
                        "minLength": 0,
                        "type": "string",
                        "example": "9876543210"
                    }
                }
            },
            "Questionnaire": {
                "type": "object",
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Answer"
                        }
                    },
                    "formNumber": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "QuestionnaireType": {
                "type": "object",
                "properties": {
                    "formNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "detail": {
                        "type": "string"
                    }
                }
            },
            "Questionnaires": {
                "type": "object",
                "properties": {
                    "questionnaire": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Questionnaire"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "QuizQuestionnaires": {
                "type": "object",
                "properties": {
                    "questionnaire": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Questionnaire"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "task": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                }
            },
            "RecurringInstructionDetail": {
                "maxProperties": 4,
                "minProperties": 3,
                "required": [
                    "frequency",
                    "instructionName",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "instructionName": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "example": "Arkansas-Test"
                    },
                    "frequency": {
                        "type": "string",
                        "example": "MONTHLY",
                        "enum": [
                            "MONTHLY",
                            "QUARTERLY",
                            "YEARLY"
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "example": "2023-10-16"
                    },
                    "endDate": {
                        "type": "string",
                        "example": "2023-10-16"
                    }
                }
            },
            "RecurringTransaction": {
                "type": "object",
                "properties": {
                    "achInstruction": {
                        "$ref": "#/components/schemas/ACHInstruction"
                    },
                    "iraWithdrawalDetails": {
                        "$ref": "#/components/schemas/IRAWithdrawalDetails"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "DEPOSIT",
                            "WITHDRAWAL"
                        ]
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "CHECK",
                            "WIRE",
                            "ACH",
                            "SKIP_DEPOSIT"
                        ]
                    },
                    "instruction": {
                        "type": "string"
                    },
                    "frequency": {
                        "type": "string",
                        "enum": [
                            "MONTHLY",
                            "QUARTERLY",
                            "YEARLY"
                        ]
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "name": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "JPY",
                            "HKD",
                            "AUD",
                            "CHF",
                            "MXN",
                            "SEK",
                            "NZD",
                            "HUF",
                            "CZK",
                            "CNH",
                            "DKK",
                            "RUB",
                            "ILS",
                            "NOK",
                            "SGD",
                            "PLN",
                            "ZAR",
                            "AED",
                            "KRW",
                            "SAR",
                            "TRY"
                        ]
                    },
                    "ibAccount": {
                        "type": "string"
                    }
                }
            },
            "RegisteredScope": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "friendly_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "defaultTokenDurationSeconds": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "RegisteredScopeSet": {
                "type": "object",
                "properties": {
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegisteredScope"
                        }
                    }
                }
            },
            "RegistrationTask": {
                "type": "object",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "formName": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "isRequiredForApproval": {
                        "type": "boolean"
                    },
                    "isCompleted": {
                        "type": "boolean"
                    },
                    "dateCompleted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "RegistrationTasksResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "registrationTaskPresent": {
                        "type": "boolean"
                    },
                    "registrationTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegistrationTask"
                        }
                    }
                }
            },
            "RegulatedMembership": {
                "type": "object",
                "properties": {
                    "organizationCode": {
                        "type": "string"
                    },
                    "membershipId": {
                        "type": "string"
                    }
                }
            },
            "RegulatoryDetail": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "CRIMINAL",
                            "AFFILIATION",
                            "CFTCREGISTERED",
                            "IBACCOUNTS",
                            "REGULATORYCONTROL",
                            "EmployeePubTrade",
                            "ControlPubTraded",
                            "BROKERDEALER",
                            "EXCHANGEMEMBERSHIP",
                            "STOCKCONTROL",
                            "DISPUTE",
                            "INVESTIGATION",
                            "MEMBERSHIP",
                            "AUSEXPOSURE",
                            "CONTROLLER",
                            "POLITICALMILITARYDIPLOMATIC",
                            "FOREIGN_BANK",
                            "BROKER_DEALER",
                            "FUTURES_COMMISSION_MERCHANT",
                            "MUTUAL_FUND",
                            "FOREIGN_EXCHANGE",
                            "MONEY_TRANSMITTER",
                            "EMPLOYEE_BENEFIT_PLAN",
                            "US_BANK",
                            "US_SWAP_DEALER",
                            "US_SWAP_PARTICIPANT",
                            "US_INSURANCE_COMPANY",
                            "NON_US_INSURANCE_COMPANY",
                            "US_DEPT",
                            "FINANCIAL_ADVISOR",
                            "HIGH_RISK_CONTRIBUTION"
                        ]
                    },
                    "status": {
                        "type": "boolean"
                    },
                    "details": {
                        "type": "string"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "externalIndividualId": {
                        "type": "string"
                    }
                }
            },
            "RegulatoryInformation": {
                "type": "object",
                "properties": {
                    "regulatoryDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryDetail"
                        }
                    },
                    "regulatoryDetail": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryDetail"
                        }
                    },
                    "selfRegulatedMembership": {
                        "$ref": "#/components/schemas/SelfRegulatedMembershipType"
                    },
                    "affiliationDetails": {
                        "$ref": "#/components/schemas/AffiliationDetailsType"
                    },
                    "financialOrgTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "orgRegulatoryInfo": {
                        "$ref": "#/components/schemas/ORGRegulatoryInfoType"
                    },
                    "ausExposureDetails": {
                        "$ref": "#/components/schemas/AUSExposureDetailsType"
                    },
                    "controllerExchangeCode": {
                        "type": "string"
                    },
                    "politicalMilitaryDiplomaticDetails": {
                        "$ref": "#/components/schemas/PoliticalMilitaryDiplomaticDetailsType"
                    },
                    "translated": {
                        "type": "boolean"
                    }
                }
            },
            "RemoveTradingPermissions": {
                "type": "object",
                "properties": {
                    "tradingPermissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TradingPermission"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "ReopenAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "RepDetail": {
                "type": "object",
                "properties": {
                    "repId": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RepresentativeDetail": {
                "type": "object",
                "properties": {
                    "representativeId": {
                        "type": "string"
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RequestDetail": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dateSubmitted": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "accountID": {
                        "type": "string"
                    },
                    "requestType": {
                        "type": "string"
                    }
                }
            },
            "RequestDetailsRequest": {
                "required": [
                    "endDate",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "offset": {
                        "minimum": 0,
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "N",
                            "O",
                            "P",
                            "C",
                            "A",
                            "E",
                            "F",
                            "I",
                            "J",
                            "L",
                            "M",
                            "R",
                            "W",
                            "Q"
                        ]
                    }
                }
            },
            "RequestDetailsResponse": {
                "type": "object",
                "properties": {
                    "requestDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequestDetail"
                        }
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "RequestInfoResponse": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "executedAt": {
                        "type": "string"
                    }
                }
            },
            "ResetAbandonedAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "Residence": {
                "type": "object",
                "properties": {
                    "street1": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                }
            },
            "ResidenceAddress": {
                "type": "object",
                "properties": {
                    "street1": {
                        "type": "string",
                        "description": "Street which applicant resides"
                    },
                    "street2": {
                        "type": "string",
                        "description": "Street which applicant resides"
                    },
                    "city": {
                        "type": "string",
                        "description": "City which the applicant resides."
                    },
                    "state": {
                        "type": "string",
                        "description": "State/Province which the applicant resides."
                    },
                    "country": {
                        "type": "string",
                        "description": "Country which the applicant resides."
                    },
                    "postalCode": {
                        "type": "string",
                        "description": "Postal / Zip code.For countries that do not provide postal code, please enter 00000"
                    }
                },
                "description": "Provide the residential address where the applicant physically resides. <br><ul><li>If the mailing address is different from the address provided in Residence element, THEN you will also include MailingAddress element.</li><li>Post Office Box is not accepted for Residential Address.</li><li>Our system validates street_1 and street_2 included within Residence attribute to ensure Post Office Box address is not provided.</li><li>An error will be thrown if the below combinations are included within street_1 OR street_2:</li><ul><li>PB</li><li>PO Box</li><li>Post Office Box</li><li>P.O. Box</li><li>In care of</li><li>General Delivery</li><li>Regular Expression to validate street_1 and street_2:</li></ul></ul>English: (?:P(?:ost(?:al)?)?[\\.\\-\\s]*(?:(?:O(?:ffice)?[\\.\\s]*)?B(?:ox|in|\\b|\\d)|o(?:ffice|\\b)(?:[-\\s]*\\d)|code)|box[-\\s]*\\d)<br>Chinese Simplified: PO Box    (?i)\\b((邮政信箱) [0-9]*)\\bChinese Traditional: PO Box   (?i)\\b((郵政信箱) [0-9]*)\\b",
                "example": "{\"street1\": \"1 Tester Street\", \"city\": \"London\", \"state\": \"GB-ENG\" ,\"country\":\"GBR\",\"postalCode\": \"SW10 9QL\"},"
            },
            "ResponseFileResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "isProcessed": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    }
                }
            },
            "RestrictionInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "byIB": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "SOIQuestionnaire": {
                "type": "object",
                "properties": {
                    "details": {
                        "type": "string"
                    }
                }
            },
            "SecurityQuestions": {
                "type": "object",
                "properties": {
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Details"
                        }
                    },
                    "referenceUserName": {
                        "type": "string"
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    }
                }
            },
            "SelfRegulatedMembershipType": {
                "type": "object",
                "properties": {
                    "exchanges": {
                        "type": "string"
                    },
                    "organizations": {
                        "type": "string"
                    }
                }
            },
            "ServerPublicKey": {
                "type": "object",
                "properties": {
                    "keyId": {
                        "type": "string"
                    },
                    "keyBitSize": {
                        "minimum": 3072,
                        "type": "integer",
                        "format": "int32"
                    },
                    "symmetric": {
                        "type": "boolean"
                    },
                    "public": {
                        "type": "boolean"
                    },
                    "private": {
                        "type": "boolean"
                    },
                    "asymmetric": {
                        "type": "boolean"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "SignedJwtEchoRequest": {
                "properties": {
                    "iss": {
                        "type": "string",
                        "example": "prodtester"
                    }
                }
            },
            "SourceOfIncomeType": {
                "type": "object",
                "properties": {
                    "sourceType": {
                        "type": "string",
                        "enum": [
                            "CONSULTING",
                            "DISABILITY",
                            "INHERITANCE",
                            "INTEREST",
                            "REALESTATE",
                            "RENTAL",
                            "SEVERANCE",
                            "SPOUSE",
                            "TRADINGANDINVESTMENTS",
                            "PENSIONANDSOCIALSECURITY",
                            "UNEMPLOYMENT",
                            "OTHER"
                        ]
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "SourceOfWealthType": {
                "type": "object",
                "properties": {
                    "sourceType": {
                        "type": "string",
                        "enum": [
                            "SOW-IND-Allowance",
                            "SOW-IND-Disability",
                            "SOW-IND-Income",
                            "SOW-IND-Inheritance",
                            "SOW-IND-Interest",
                            "SOW-IND-MarketProfit",
                            "SOW-IND-Other",
                            "SOW-IND-Pension",
                            "SOW-IND-Property",
                            "SOW-ORG-Business",
                            "SOW-ORG-MarketTradingProfits",
                            "SOW-ORG-Other",
                            "SOW-ORG-OwnerEquity",
                            "SOW-ORG-Property",
                            "SOW-ORG-RetainedEarnings"
                        ]
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "usedForFunds": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "StatusResponse": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dateSubmitted": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fileData": {
                        "$ref": "#/components/schemas/FileData"
                    }
                }
            },
            "StmtRequest": {
                "required": [
                    "accountId",
                    "endDate",
                    "startDate"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "account id"
                    },
                    "accountIds": {
                        "type": "array",
                        "description": "array of account id's",
                        "example": [
                            "U123",
                            "U456"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "startDate": {
                        "type": "string",
                        "description": "from date"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "to date"
                    },
                    "multiAccountFormat": {
                        "type": "string",
                        "description": "possible values are consolidate, concatenate, or customConsolidate"
                    },
                    "cryptoConsolIfAvailable": {
                        "type": "boolean",
                        "description": "crypto consolidate flag, If request contains any accounts with crypto segment, will turn request into Crypto Consolidated",
                        "default": false
                    },
                    "mimeType": {
                        "type": "string",
                        "description": "output format",
                        "example": "application/pdf, text/html, or text/csv"
                    },
                    "language": {
                        "type": "string",
                        "description": "two character ISO language code",
                        "example": "en, fr defaults to en (english)",
                        "default": "en"
                    },
                    "gzip": {
                        "type": "boolean",
                        "description": "to gzip the whole response pass true",
                        "default": false
                    }
                }
            },
            "SynchronousInstructionResponse": {
                "$ref": "#/components/schemas/InstructionResponse"
            },
            "Task": {
                "type": "object",
                "properties": {
                    "formNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "boolean"
                    }
                }
            },
            "TaxFormRequest": {
                "required": [
                    "accountId",
                    "format",
                    "type",
                    "year"
                ],
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account id",
                        "example": "UXXXX"
                    },
                    "year": {
                        "type": "integer",
                        "description": "Tax Year",
                        "format": "int32",
                        "example": 2023
                    },
                    "type": {
                        "type": "string",
                        "description": "Tax Form Type (can retrieve available tax documents via /api/v1/tax-documents/available)",
                        "example": "ALL,1099,1099R,1042S,8949"
                    },
                    "format": {
                        "type": "string",
                        "description": "format",
                        "example": "HTML,CSV,PDF"
                    },
                    "gzip": {
                        "type": "boolean",
                        "description": "to gzip the whole response pass true",
                        "default": false
                    }
                }
            },
            "TaxFormResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "dataType": {
                                "type": "string",
                                "description": "the data type of the value after decoding"
                            },
                            "encoding": {
                                "type": "string",
                                "description": "encoding used for the value"
                            },
                            "value": {
                                "type": "string",
                                "description": "Base 64 encoded String of byte[]. Byte[] represents compressed data when gzip is true"
                            },
                            "mimeType": {
                                "type": "string",
                                "description": "mimeType of document after decoding and serializing the value"
                            },
                            "gzip": {
                                "type": "boolean",
                                "description": "content encoding flag. Represents whether the response is compressed"
                            },
                            "accept": {
                                "type": "string",
                                "description": "specify response media types that are acceptable"
                            }
                        }
                    }
                }
            },
            "TaxFormType": {
                "type": "object",
                "properties": {
                    "isForm": {
                        "type": "boolean"
                    },
                    "taxFormName": {
                        "type": "string",
                        "example": "1099"
                    },
                    "formats": {
                        "type": "array",
                        "description": "available tax form formats",
                        "items": {
                            "type": "string",
                            "example": "PDF"
                        }
                    }
                }
            },
            "TaxPayerDetails": {
                "type": "object",
                "properties": {
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "userName": {
                        "type": "string"
                    }
                }
            },
            "TaxResidency": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "tin": {
                        "type": "string"
                    },
                    "tinType": {
                        "type": "string",
                        "enum": [
                            "SSN",
                            "EIN",
                            "NonUS_NationalId"
                        ]
                    }
                }
            },
            "Title": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string",
                        "enum": [
                            "Account Holder",
                            "FIRST HOLDER",
                            "SECOND HOLDER",
                            "TRADER",
                            "CEO",
                            "SECRETARY",
                            "TREASURER",
                            "OWNER",
                            "PRINCIPAL",
                            "SHAREHOLDER",
                            "TRUSTEE",
                            "BENEFICIARY",
                            "GRANTOR",
                            "Employee",
                            "CONTINGENT",
                            "IRA_BENEFICIARY",
                            "IRA DECEDENT",
                            "COMP_OFFICER",
                            "Other Officer",
                            "Controlling Officer",
                            "SIGNATORY",
                            "NON-EMPLOYEE",
                            "CUSTODIAN",
                            "SUCCESSOR_CUSTODIAN",
                            "DIRECTOR",
                            "PARTNER",
                            "CUSTODIAN EMPLOYEE",
                            "SUCCESSOR CUSTODIAN EMPLOYEE",
                            "SPOUSE",
                            "Successor Holder"
                        ]
                    }
                }
            },
            "TokenRequest": {
                "required": [
                    "client_assertion",
                    "client_assertion_type",
                    "grant_type",
                    "scope"
                ],
                "type": "object",
                "properties": {
                    "grant_type": {
                        "type": "string",
                        "description": "The [authorization grant flow](https://dataetracker.ietf.org/doc/html/rfc6749#section-1.3) for the creation of the tokens."
                    },
                    "client_assertion": {
                        "type": "string",
                        "description": "The compact [client assertion](https://www.rfc-editor.org/rfc/rfc7521.html) token used to authenticate you as a registered client."
                    },
                    "client_assertion_type": {
                        "type": "string",
                        "description": "The [client assertion type](https://www.rfc-editor.org/rfc/rfc7521.html#section-4.2) that identifies the client assertion."
                    },
                    "scope": {
                        "maxLength": 1024,
                        "minLength": 4,
                        "type": "string",
                        "description": "The space-delimited list of scopes",
                        "example": "echo.read echo.write"
                    }
                }
            },
            "TokenResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "description": "The serialized access token"
                    },
                    "token_type": {
                        "type": "string",
                        "description": "The token type (e.g., Bearer)"
                    },
                    "scope": {
                        "type": "string",
                        "description": "The space-delimited list of granted scopes"
                    },
                    "expires_in": {
                        "type": "integer",
                        "description": "The number of seconds from now until the access token expires",
                        "format": "int64"
                    }
                }
            },
            "TradingInstrument": {
                "maxProperties": 3,
                "minProperties": 1,
                "required": [
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/Conid"
                    },
                    {
                        "$ref": "#/components/schemas/TradingInstrumentDescription"
                    }
                ]
            },
            "TradingInstrumentDescription": {
                "maxProperties": 3,
                "minProperties": 3,
                "required": [
                    "assetType",
                    "securityId",
                    "securityIdType"
                ],
                "type": "object",
                "properties": {
                    "securityIdType": {
                        "type": "string",
                        "example": "ISIN",
                        "enum": [
                            "CUSIP",
                            "ISIN",
                            "CASH"
                        ]
                    },
                    "securityId": {
                        "type": "string",
                        "example": "459200101"
                    },
                    "assetType": {
                        "type": "string",
                        "example": "STK",
                        "enum": [
                            "STK",
                            "CASH",
                            "UNKNOWN"
                        ]
                    }
                }
            },
            "TradingLimits": {
                "type": "object",
                "properties": {
                    "orderValueLimits": {
                        "$ref": "#/components/schemas/OrderValueLimits"
                    },
                    "efpQuantityLimits": {
                        "$ref": "#/components/schemas/EFPQuantityLimits"
                    },
                    "orderQuantityLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderQuantityLimit"
                        }
                    },
                    "dayQuantityLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DayQuantityLimit"
                        }
                    }
                }
            },
            "TradingPermission": {
                "type": "object",
                "properties": {
                    "assetClass": {
                        "type": "string",
                        "enum": [
                            "BILL",
                            "BOND",
                            "CASH",
                            "CFD",
                            "COMB",
                            "FOP",
                            "FUND",
                            "FUT",
                            "OPT",
                            "SSF",
                            "STK",
                            "WAR",
                            "MRGN"
                        ]
                    },
                    "exchangeGroup": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "enum": [
                            "ALL",
                            "AUSTRALIA",
                            "AUSTRIA",
                            "BELGIUM",
                            "CANADA",
                            "FRANCE",
                            "GERMANY",
                            "HONG KONG",
                            "ITALY",
                            "JAPAN",
                            "KOREA",
                            "MEXICO",
                            "NORWAY",
                            "SINGAPORE",
                            "SPAIN",
                            "SWEDEN",
                            "SWITZERLAND",
                            "THE NETHERLANDS",
                            "UNITED KINGDOM",
                            "UNITED STATES",
                            "HK-CHINA"
                        ]
                    },
                    "product": {
                        "type": "string",
                        "enum": [
                            "BONDS",
                            "FUTURES",
                            "FOREX",
                            "FUTURES OPTIONS",
                            "MUTUAL FUNDS",
                            "STOCKS",
                            "SINGLE STOCK FUTURES",
                            "OPTIONS",
                            "STOCK OPTIONS",
                            "WARRANTS"
                        ]
                    }
                }
            },
            "TraditionalBankInstructionVerification": {
                "maxProperties": 7,
                "minProperties": 7,
                "required": [
                    "accountId",
                    "bankInstructionCode",
                    "bankInstructionName",
                    "clientInstructionId",
                    "creditAmount1",
                    "creditAmount2",
                    "pendingInstructionId"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "bankInstructionCode": {
                        "type": "string",
                        "example": "USACH",
                        "enum": [
                            "USACH",
                            "CAACH",
                            "ACHUS",
                            "WIRE"
                        ]
                    },
                    "bankInstructionName": {
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "example": "TestInstr"
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U453454"
                    },
                    "pendingInstructionId": {
                        "type": "number",
                        "example": 35354345
                    },
                    "creditAmount1": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 1
                    },
                    "creditAmount2": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 2
                    }
                }
            },
            "Trust": {
                "type": "object",
                "properties": {
                    "identification": {
                        "$ref": "#/components/schemas/TrustIdentification"
                    },
                    "regulatoryInformation": {
                        "$ref": "#/components/schemas/RegulatoryInformation"
                    }
                }
            },
            "TrustApplicant": {
                "type": "object",
                "properties": {
                    "identification": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrustIdentification"
                        }
                    },
                    "financialInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FinancialInformation"
                        }
                    },
                    "regulatoryInformation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatoryInformation"
                        }
                    },
                    "regulatedMemberships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegulatedMembership"
                        }
                    },
                    "accreditedInvestorInformation": {
                        "$ref": "#/components/schemas/AccreditedInvestorInformation"
                    },
                    "trustees": {
                        "$ref": "#/components/schemas/TrusteesType"
                    },
                    "beneficiaries": {
                        "$ref": "#/components/schemas/AssociationTypeEntities"
                    },
                    "grantors": {
                        "$ref": "#/components/schemas/AssociationTypeEntities"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w8BenE": {
                        "$ref": "#/components/schemas/FormW8BENE"
                    },
                    "w8IMY": {
                        "$ref": "#/components/schemas/FormW8IMY"
                    },
                    "withholdingStatement": {
                        "$ref": "#/components/schemas/WithholdingStatementType"
                    },
                    "thirdPartyManagement": {
                        "type": "boolean"
                    },
                    "trustType": {
                        "type": "string",
                        "enum": [
                            "COMPLEX_TRUST",
                            "SINGLE_TRUST",
                            "GRANTOR_TRUST",
                            "US_TAXABLE_TRUST"
                        ]
                    }
                }
            },
            "TrustIdentification": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "typeOfTrust": {
                        "type": "string",
                        "enum": [
                            "IRREVOC",
                            "SMSF",
                            "REVOCABLE",
                            "TESTAMENTARY",
                            "RETIREMENT",
                            "ERISA",
                            "OTHER"
                        ]
                    },
                    "purposeOfTrust": {
                        "type": "string"
                    },
                    "dateFormed": {
                        "type": "string",
                        "format": "date"
                    },
                    "formationCountry": {
                        "type": "string"
                    },
                    "formationState": {
                        "type": "string"
                    },
                    "registrationNumber": {
                        "type": "string"
                    },
                    "registrationType": {
                        "type": "string",
                        "enum": [
                            "SSN",
                            "EIN",
                            "NonUS_NationalId"
                        ]
                    },
                    "registrationCountry": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    }
                }
            },
            "TrusteeEntityType": {
                "type": "object",
                "properties": {
                    "legalEntity": {
                        "$ref": "#/components/schemas/LegalEntity"
                    },
                    "employees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Individual"
                        }
                    }
                }
            },
            "TrusteeIndividual": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "nativeName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "birthName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "motherMaidenName": {
                        "$ref": "#/components/schemas/IndividualName"
                    },
                    "dateOfBirth": {
                        "type": "string",
                        "description": "Date of birth of the applicant. The applicant must be 18 years or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error will be triggered and the account will not be created.</li><li>If YYYY-MM-DD < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.</li><li>This application must be opened using the front-end application which is available within the IBKR Portal.</li><li>Assets held in a single account managed by a single Custodian user.</li><li>Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.</li></ul>",
                        "example": "1990-08-14"
                    },
                    "countryOfBirth": {
                        "type": "string"
                    },
                    "cityOfBirth": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "M",
                            "F",
                            "Male",
                            "Female"
                        ]
                    },
                    "maritalStatus": {
                        "type": "string",
                        "enum": [
                            "S",
                            "M",
                            "W",
                            "D",
                            "C"
                        ]
                    },
                    "numDependents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/ResidenceAddress"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneInfo"
                        }
                    },
                    "email": {
                        "type": "string"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "employmentType": {
                        "type": "string"
                    },
                    "employmentDetails": {
                        "$ref": "#/components/schemas/EmploymentDetails"
                    },
                    "employeeTitle": {
                        "type": "string"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "crs": {
                        "$ref": "#/components/schemas/FormCRS"
                    },
                    "prohibitedCountryQuestionnaire": {
                        "$ref": "#/components/schemas/ProhibitedCountryQuestionnaireList"
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "authorizedToSignOnBehalfOfOwner": {
                        "type": "boolean"
                    },
                    "authorizedTrader": {
                        "type": "boolean"
                    },
                    "usTaxResident": {
                        "type": "boolean"
                    },
                    "translated": {
                        "type": "boolean"
                    },
                    "primaryTrustee": {
                        "type": "boolean"
                    },
                    "nfaRegistered": {
                        "type": "boolean"
                    },
                    "nfaRegistrationNumber": {
                        "type": "string"
                    }
                }
            },
            "TrusteesType": {
                "type": "object",
                "properties": {
                    "individuals": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrusteeIndividual"
                        }
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrusteeEntityType"
                        }
                    }
                }
            },
            "UnauthorizedAccessResponse": {
                "required": [
                    "status",
                    "title",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "/simple"
                    },
                    "title": {
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "example": 402
                    },
                    "detail": {
                        "type": "string",
                        "example": "The request cannot be fulfilled for the account"
                    }
                }
            },
            "UpdateAccountAlias": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "accountAlias": {
                        "type": "string"
                    }
                }
            },
            "UpdateAccountRepresentatives": {
                "type": "object",
                "properties": {
                    "representativeDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepresentativeDetail"
                        }
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "UpdateBCAN": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "bcan": {
                        "type": "string"
                    },
                    "ceNumber": {
                        "type": "string"
                    }
                }
            },
            "UpdateCredentials": {
                "type": "object",
                "properties": {
                    "updateEmail": {
                        "$ref": "#/components/schemas/UpdateEmail"
                    },
                    "updatePassword": {
                        "$ref": "#/components/schemas/UpdatePassword"
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "referenceUserName": {
                        "type": "string"
                    }
                }
            },
            "UpdateEmail": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "access": {
                        "type": "boolean"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "entityId": {
                        "type": "string"
                    }
                }
            },
            "UpdateEntity": {
                "type": "object",
                "properties": {
                    "addRelationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddRelationship"
                        }
                    },
                    "deleteRelationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeleteRelationship"
                        }
                    },
                    "individual": {
                        "$ref": "#/components/schemas/Individual"
                    },
                    "legalEntity": {
                        "$ref": "#/components/schemas/LegalEntity"
                    },
                    "trust": {
                        "$ref": "#/components/schemas/Trust"
                    },
                    "organization": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "ibEntityId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UpdateExternalId": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "newExternalId": {
                        "type": "string"
                    }
                }
            },
            "UpdatePassword": {
                "type": "object",
                "properties": {
                    "encryptedPassword": {
                        "type": "string"
                    },
                    "encryptedKeyName": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "UpdatePropertyProfile": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "propertyProfile": {
                        "type": "string"
                    }
                }
            },
            "UpdateTaxForm": {
                "type": "object",
                "properties": {
                    "localTaxForms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalTaxForm"
                        }
                    },
                    "w8Ben": {
                        "$ref": "#/components/schemas/FormW8BEN"
                    },
                    "w8BenE": {
                        "$ref": "#/components/schemas/FormW8BENE"
                    },
                    "w9": {
                        "$ref": "#/components/schemas/FormW9"
                    },
                    "translation": {
                        "type": "boolean"
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    },
                    "accountId": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    }
                }
            },
            "UpdateUserAccessRights": {
                "type": "object",
                "properties": {
                    "subAccounts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "repId": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    }
                }
            },
            "UpdateW8BEN": {
                "type": "object",
                "properties": {
                    "taxPayerDetails": {
                        "$ref": "#/components/schemas/TaxPayerDetails"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "inputLanguage": {
                        "type": "string",
                        "enum": [
                            "en",
                            "zh-Hans",
                            "ja",
                            "ru",
                            "fr",
                            "pt",
                            "es",
                            "it",
                            "ar-AE",
                            "de",
                            "he-IL",
                            "hu"
                        ]
                    },
                    "translation": {
                        "type": "boolean"
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "UpdateWithholdingStatement": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "fatcaCompliantType": {
                        "type": "string",
                        "enum": [
                            "FATCA_COMPLIANT",
                            "NON_CONSENTING_US_ACCOUNT",
                            "NON_COOPERATIVE_ACCOUNT"
                        ]
                    },
                    "usIncomeTax": {
                        "type": "boolean"
                    },
                    "treatyCountry": {
                        "type": "string"
                    },
                    "certW8Imy": {
                        "type": "boolean"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "format": "date"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "userPrivileges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserPrivilege"
                        }
                    },
                    "mdServices": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "externalUserId": {
                        "type": "string"
                    },
                    "externalIndividualId": {
                        "type": "string"
                    },
                    "encryptedPassword": {
                        "type": "string"
                    },
                    "encryptedKeyName": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    }
                }
            },
            "UserDetails": {
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/Name"
                    },
                    "email": {
                        "type": "string"
                    },
                    "residenceAddress": {
                        "$ref": "#/components/schemas/Residence"
                    },
                    "mailingAddress": {
                        "$ref": "#/components/schemas/MailingAddress"
                    },
                    "identification": {
                        "$ref": "#/components/schemas/Identification"
                    },
                    "taxResidencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxResidency"
                        }
                    },
                    "dateOfBirth": {
                        "$ref": "#/components/schemas/DateOfBirth"
                    },
                    "sameMailAddress": {
                        "type": "boolean"
                    },
                    "externalId": {
                        "type": "string"
                    }
                }
            },
            "UserNameAvailableResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/ErrorResponse"
                    },
                    "hasError": {
                        "type": "boolean"
                    },
                    "errorDescription": {
                        "type": "string"
                    },
                    "isValid": {
                        "type": "boolean"
                    },
                    "isAvailable": {
                        "type": "boolean"
                    },
                    "suggestedUserName": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "UserPrivilege": {
                "type": "object",
                "properties": {
                    "externalAccountId": {
                        "type": "string"
                    },
                    "privilege": {
                        "type": "string",
                        "enum": [
                            "OWNER",
                            "TRADER",
                            "CUSTOM",
                            "NONE"
                        ]
                    }
                }
            },
            "WireDetails": {
                "type": "object",
                "properties": {
                    "bankName": {
                        "type": "string"
                    },
                    "bankAccountNumber": {
                        "type": "string"
                    },
                    "bankCode": {
                        "type": "string"
                    },
                    "routingNumber": {
                        "type": "string"
                    },
                    "instruction": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "referenceNumber": {
                        "type": "string"
                    }
                }
            },
            "WithdrawFundsInstruction": {
                "maxProperties": 9,
                "minProperties": 6,
                "required": [
                    "accountId",
                    "amount",
                    "bankInstructionMethod",
                    "bankInstructionName",
                    "clientInstructionId",
                    "currency"
                ],
                "type": "object",
                "properties": {
                    "clientInstructionId": {
                        "type": "number",
                        "example": 1012983
                    },
                    "accountId": {
                        "maxLength": 32,
                        "minLength": 1,
                        "type": "string",
                        "example": "U46377"
                    },
                    "currency": {
                        "maxLength": 3,
                        "minLength": 1,
                        "type": "string",
                        "example": "USD"
                    },
                    "amount": {
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "type": "number",
                        "example": 100
                    },
                    "bankInstructionName": {
                        "maxLength": 150,
                        "minLength": 1,
                        "type": "string",
                        "example": "Instruction"
                    },
                    "bankInstructionMethod": {
                        "type": "string",
                        "example": "WIRE",
                        "enum": [
                            "ACH",
                            "WIRE",
                            "CHECK"
                        ]
                    },
                    "dateTimeToOccur": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "iraWithdrawalDetail": {
                        "maxProperties": 4,
                        "minProperties": 4,
                        "type": "object",
                        "properties": {
                            "fedIncomeTaxPercentage": {
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "type": "number",
                                "example": 12
                            },
                            "stateIncomeTaxPercentage": {
                                "minimum": 0,
                                "exclusiveMinimum": true,
                                "type": "number",
                                "example": 10
                            },
                            "stateCd": {
                                "maxLength": 2,
                                "minLength": 1,
                                "type": "string",
                                "example": "TE"
                            },
                            "iraWithholdType": {
                                "type": "string",
                                "example": "NORMAL",
                                "enum": [
                                    "DIRECT_ROLLOVER",
                                    "ROTH_DISTRIBUTION",
                                    "NORMAL",
                                    "EARLY",
                                    "DEATH",
                                    "EXCESS_CY",
                                    "EXCESS_PY",
                                    "EXCESS_SC"
                                ]
                            }
                        }
                    },
                    "recurringInstructionDetail": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecurringInstructionDetail"
                            }
                        ]
                    }
                }
            },
            "WithholdingStatementType": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "fatcaCompliantType": {
                        "type": "string",
                        "enum": [
                            "FATCA_COMPLIANT",
                            "NON_CONSENTING_US_ACCOUNT",
                            "NON_COOPERATIVE_ACCOUNT"
                        ]
                    },
                    "usBackupWithholding": {
                        "type": "boolean"
                    },
                    "treatyCountry": {
                        "type": "string"
                    },
                    "corporation": {
                        "type": "boolean"
                    },
                    "flowThrough": {
                        "type": "boolean"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "dividendRate": {
                        "type": "number",
                        "format": "float"
                    },
                    "interestRate": {
                        "type": "number",
                        "format": "float"
                    },
                    "usOtherRate": {
                        "type": "number",
                        "format": "float"
                    },
                    "eciRate": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "YodleeSession": {
                "type": "object",
                "properties": {
                    "request": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "itemAccountId": {
                        "type": "string"
                    },
                    "accountId": {
                        "type": "string"
                    }
                }
            },
            "accountAttributes": {
                "type": "object",
                "properties": {
                    "accountAlias": {
                        "type": "string",
                        "description": "User-defined alias assigned to the account for easy identification.",
                        "nullable": true
                    },
                    "accountStatus": {
                        "type": "integer",
                        "description": "Unix epoch timestamp of account opening.",
                        "format": "int32"
                    },
                    "accountTitle": {
                        "type": "string",
                        "description": "A name assigned to the account, typically the account holder name or business entity."
                    },
                    "accountVan": {
                        "type": "string",
                        "description": "The account's virtual account number, or otherwise its IB accountId if no VAN is set."
                    },
                    "acctCustType": {
                        "type": "string",
                        "description": "Identifies the type of client with which the account is associated, such as an individual or LLC."
                    },
                    "brokerageAccess": {
                        "type": "boolean",
                        "description": "Indicates whether account can receive live orders (do not mix with paper trading)."
                    },
                    "businessType": {
                        "type": "string",
                        "description": "A descriptor of the nature of the account, reflecting the responsible group within IB.",
                        "enum": [
                            "IB_SALES",
                            "IB_PROSERVE"
                        ]
                    },
                    "clearingStatus": {
                        "type": "string",
                        "description": "Status of the account with respect to clearing at IB. O is open, P pending, N new, A abandoned, C closed, R rejected.",
                        "enum": [
                            "O",
                            "P",
                            "N",
                            "A",
                            "R",
                            "C"
                        ]
                    },
                    "covestor": {
                        "type": "boolean",
                        "description": "Indicates a Covestor account."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Base currency of the account.",
                        "enum": [
                            "USD"
                        ]
                    },
                    "desc": {
                        "type": "string",
                        "description": "Internal human-readable description of the account."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Displayed name of the account in UI. Will reflect either the accountId or accountAlias, if set."
                    },
                    "faClient": {
                        "type": "boolean",
                        "description": "Indicates that the account is managed by a financial advisor."
                    },
                    "ibEntity": {
                        "type": "string",
                        "description": "IB business entity under which the account resides.",
                        "enum": [
                            "IBLLC-US",
                            "IB-CAN",
                            "IB-UK",
                            "IB-IE"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "description": "The account's IB accountId."
                    },
                    "noClientTrading": {
                        "type": "boolean",
                        "description": "Indicates that trading by the client is disabled in the account."
                    },
                    "parent": {
                        "type": "object",
                        "properties": {
                            "mmc": {
                                "type": "array",
                                "description": "Money manager client."
                            },
                            "accountId": {
                                "type": "string",
                                "description": "Account ID of the parent account in a multiplex account structure."
                            },
                            "isMChild": {
                                "type": "boolean",
                                "description": "Indicates that the given account is a multiplex child account."
                            },
                            "isMParent": {
                                "type": "boolean",
                                "description": "Indicates that the given account is itself a multiplex parent account."
                            },
                            "isMultiplex": {
                                "type": "boolean",
                                "description": "Indicates that the account is a multiplex account."
                            }
                        },
                        "description": "Describes account relations in partitioned or multiplexed (segemented) account structures."
                    },
                    "PrepaidCrypto-P": {
                        "type": "boolean",
                        "description": "Indicates whether account has a prepaid crypto segment (Crypto Plus) with PAXOS."
                    },
                    "PrepaidCrypto-Z": {
                        "type": "boolean",
                        "description": "Indicates whether account has a prepaid crypto segment (Crypto Plus) with ZEROHASH."
                    },
                    "trackVirtualFXPortfolio": {
                        "type": "boolean",
                        "description": "Indicates that virtual forex positions are tracked in the account."
                    },
                    "tradingType": {
                        "type": "string",
                        "description": "Internal identifier used by IB to reflect the trading permissions of the account.",
                        "enum": [
                            "STKNOPT"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates whether the account exists in production, paper, or demo environments.",
                        "enum": [
                            "DEMO"
                        ]
                    }
                }
            },
            "accountSummaryResponse": {
                "type": "object",
                "properties": {
                    "accountType": {
                        "type": "string",
                        "description": "Describes the unique account type. For standard individual accounts, an empty string is returned."
                    },
                    "status": {
                        "type": "string",
                        "description": "If the account is currently non-tradeable, a status message will be dispalyed."
                    },
                    "balance": {
                        "type": "integer",
                        "description": "Returns the total account balance.",
                        "format": "int32"
                    },
                    "SMA": {
                        "type": "integer",
                        "description": "Simple Moving Average of the account.",
                        "format": "int32"
                    },
                    "buyingPower": {
                        "type": "integer",
                        "description": "Total buying power available for the account.",
                        "format": "int32"
                    },
                    "availableFunds": {
                        "type": "integer",
                        "description": "The amount of equity you have available for trading. For both the Securities and Commodities segments, this is calculated as: Equity with Loan Value – Initial Margin.",
                        "format": "int32"
                    },
                    "excessLiquidity": {
                        "type": "integer",
                        "description": "The amount of cash in excess of the usual requirement in your account.",
                        "format": "int32"
                    },
                    "netLiquidationValue": {
                        "type": "integer",
                        "description": "The basis for determining the price of the assets in your account.",
                        "format": "int32"
                    },
                    "equityWithLoanValue": {
                        "type": "integer",
                        "description": "The basis for determining whether you have the necessary assets to either initiate or maintain security assets.",
                        "format": "int32"
                    },
                    "regTLoan": {
                        "type": "integer",
                        "description": "The Federal Reserve Board regulation governing the amount of credit that broker dealers may extend to clients who borrow money to buy securities on margin.",
                        "format": "int32"
                    },
                    "securitiesGVP": {
                        "type": "integer",
                        "description": "Absolute value of the Long Stock Value + Short Stock Value + Long Option Value + Short Option Value + Fund Value.",
                        "format": "int32"
                    },
                    "totalCashValue": {
                        "type": "integer",
                        "description": "Cash recognized at the time of trade + futures P&L. This value reflects real-time currency positions, including:\n *  Trades executed directly through the FX market.\n *  Trades executed as a result of automatic IB conversions, which occur when you trade a product in a non-base currency.\n *  Trades deliberately executed to close non-base currency positions using the FXCONV destination.\n",
                        "format": "int32"
                    },
                    "accruedInterest": {
                        "type": "integer",
                        "description": "Accrued interest is the interest accruing on a security since the previous coupon date. If a security is sold between two payment dates, the buyer usually compensates the seller for the interest accrued, either within the price or as a separate payment.",
                        "format": "int32"
                    },
                    "regTMargin": {
                        "type": "integer",
                        "description": "The initial margin requirements calculated under US Regulation T rules for both the securities and commodities segment of your account.",
                        "format": "int32"
                    },
                    "initialMargin": {
                        "type": "integer",
                        "description": "The available initial margin for the account.",
                        "format": "int32"
                    },
                    "maintenanceMargin": {
                        "type": "integer",
                        "description": "The available maintenance margin for the account.",
                        "format": "int32"
                    },
                    "cashBalances": {
                        "type": "array",
                        "description": "An array containing balance information for all currencies held by the account.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "currency": {
                                    "type": "string",
                                    "description": "The currency the values represent. Base currency represented as \"Total (in {BaseCurrency})\"\n"
                                },
                                "balance": {
                                    "type": "integer",
                                    "description": "The total available currency held in the account.",
                                    "format": "int32"
                                },
                                "settledCash": {
                                    "type": "integer",
                                    "description": "The available settled cash that can be withdrawn from the account.",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "description": "Successful return contianing an array of at-a-glance account details."
            },
            "advancedOrderReject": {
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "description": "The order ID assigned by IB to the rejected order ticket.",
                        "format": "int32"
                    },
                    "reqId": {
                        "type": "string",
                        "description": "IB's internal identifier assigned to the returned message."
                    },
                    "dismissable": {
                        "type": "array",
                        "description": "Indicates whether this prompt is dismissable."
                    },
                    "text": {
                        "type": "string",
                        "description": "Human-readable text of the messages emitted by IB in response to order submission."
                    },
                    "options": {
                        "type": "array",
                        "description": "Choices available to the client in response to the rejection message.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The specific type of message returned."
                    },
                    "messageId": {
                        "type": "string",
                        "description": "IB internal identifier for the nature or category of the returned message."
                    },
                    "prompt": {
                        "type": "boolean",
                        "description": "Indicates that the message is a prompt offering a set of decisions, one or more of which may permit the rejected order to be resubmitted."
                    }
                },
                "description": "Relates a message generated in response to the rejection of the submitted order ticket. In some cases, it may also present a mechanism to resubmit the same order following a prompted decision."
            },
            "alert": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "integer",
                        "description": "The order id (alert id)",
                        "format": "int32"
                    },
                    "account": {
                        "type": "string",
                        "description": "The account the alert was attributed to."
                    },
                    "alert_name": {
                        "type": "string",
                        "description": "The requested name for the alert."
                    },
                    "alert_active": {
                        "type": "integer",
                        "description": "Determines if the alert is active [1] or not [0]",
                        "format": "int32"
                    },
                    "order_time": {
                        "type": "string",
                        "description": "UTC-formatted time of the alert’s creation."
                    },
                    "alert_triggered": {
                        "type": "boolean",
                        "description": "Confirms if the order is triggered or not."
                    },
                    "alert_repeatable": {
                        "type": "integer",
                        "description": "Confirms if the alert is enabled to occur more than once.",
                        "format": "int32"
                    }
                },
                "description": "An array containing all alerts as separate objects."
            },
            "alertActivationRequest": {
                "required": [
                    "alertActive",
                    "alertId"
                ],
                "type": "object",
                "properties": {
                    "alertId": {
                        "type": "integer",
                        "description": "The alert Identifier",
                        "format": "int32"
                    },
                    "alertActive": {
                        "type": "integer",
                        "description": "Set whether or not the alert should be active (1) or inactive (0).",
                        "format": "int32"
                    }
                }
            },
            "alertActivationResponse": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "order_id": {
                        "type": "integer",
                        "description": "The tracking number of the alert. Occasssionally referenced as the alertId or alert_id.\n",
                        "format": "int32"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Displays result status of alert request"
                    },
                    "text": {
                        "type": "string",
                        "description": "Response message to clarify success status reason."
                    },
                    "failure_list": {
                        "type": "string",
                        "description": "If “success” returns false, will list failed order Ids"
                    }
                }
            },
            "alertCondition": {
                "type": "object",
                "properties": {
                    "condition_type": {
                        "type": "integer",
                        "description": "The type of condition set.",
                        "format": "int32"
                    },
                    "conidex": {
                        "type": "string",
                        "description": "Returns conid and exchange in the format “conid@exchange”"
                    },
                    "contract_description_1": {
                        "type": "string",
                        "description": "Includes relevant descriptions (if applicable)."
                    },
                    "condition_operator": {
                        "type": "string",
                        "description": "Condition operator set for alert."
                    },
                    "condition_trigger_method": {
                        "type": "integer",
                        "description": "TriggerMethod value set.",
                        "format": "int32"
                    },
                    "condition_value": {
                        "type": "string",
                        "description": "Condition value set."
                    },
                    "condition_logic_bind": {
                        "type": "boolean",
                        "description": "Condition logic_bind value set."
                    },
                    "condition_time_zone": {
                        "type": "string",
                        "description": "Condition timeZone value set."
                    }
                }
            },
            "alertCreationRequest": {
                "required": [
                    "alertMessage",
                    "alertName",
                    "alertRepeatable",
                    "conditions",
                    "outsideRth",
                    "tif"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "description": "optional; used in case of modification and represent Alert Id",
                        "format": "int64"
                    },
                    "alertName": {
                        "type": "string",
                        "description": "Alert name."
                    },
                    "alertMessage": {
                        "type": "string",
                        "description": "Alert message which will be sent"
                    },
                    "alertRepeatable": {
                        "type": "integer",
                        "description": "Boolean number (0, 1) signifies if an alert can be triggered more than once. A value of ‘1’ is required for MTA alerts",
                        "format": "int32"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address you want to send email alerts to"
                    },
                    "expireTime": {
                        "type": "string",
                        "description": "Used with a tif of “GTD” only. Signifies time when the alert should terminate if no alert is triggered."
                    },
                    "iTWSOrdersOnly": {
                        "type": "integer",
                        "description": "allow (0) or disallow (1) alerts to trigger alerts through the mobile app",
                        "format": "int32"
                    },
                    "outsideRth": {
                        "type": "integer",
                        "description": "Allow (1) or disallow (0) the alert to be triggered outside of regular trading hours",
                        "format": "int32"
                    },
                    "sendMessage": {
                        "type": "integer",
                        "description": "allow (1) or disallow (0) alerts to trigger email messages",
                        "format": "int32"
                    },
                    "showPopup": {
                        "type": "integer",
                        "description": "allow (1) or disallow (0) alerts to trigger TWS Pop-up messages",
                        "format": "int32"
                    },
                    "tif": {
                        "type": "string",
                        "description": "Time in Force duration of alert.",
                        "enum": [
                            "GTC",
                            "GTD"
                        ]
                    },
                    "conditions": {
                        "type": "array",
                        "description": "Container for all conditions applied for an alert to trigger."
                    }
                }
            },
            "alertCreationResponse": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "integer",
                        "description": "Not applicable",
                        "format": "int32"
                    },
                    "order_id": {
                        "type": "integer",
                        "description": "The tracking number of the alert. Alert identifier internally referenced as order id.",
                        "format": "int32"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Displays result status of alert request"
                    },
                    "text": {
                        "type": "string",
                        "description": "Response message to clarify submission status."
                    },
                    "order_status": {
                        "type": "string",
                        "description": "Not applicable"
                    },
                    "warning_message": {
                        "type": "string",
                        "description": "Returns ‘null’"
                    }
                }
            },
            "alertDeletionResponse": {
                "type": "object",
                "properties": {
                    "request_id": {
                        "type": "integer",
                        "description": "Not applicable",
                        "format": "int32"
                    },
                    "order_id": {
                        "type": "integer",
                        "description": "The tracking number of the alert. Occasssionally referenced as the alertId or alert_id.\n",
                        "format": "int32"
                    },
                    "success": {
                        "type": "boolean",
                        "description": "Displays result status of alert request"
                    },
                    "text": {
                        "type": "string",
                        "description": "Response message to clarify success status reason."
                    },
                    "failure_list": {
                        "type": "string",
                        "description": "If “success” returns false, will list failed order Ids"
                    }
                }
            },
            "alertDetails": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "description": "Requestor’s account ID"
                    },
                    "order_id": {
                        "type": "integer",
                        "description": "Alert’s tracking ID. Can be used for modifying or deleting alerts.",
                        "format": "int32"
                    },
                    "alertName": {
                        "type": "string",
                        "description": "Human readable name of the alert."
                    },
                    "tif": {
                        "type": "string",
                        "description": "Time in Force effective for the Alert"
                    },
                    "expire_time": {
                        "type": "string",
                        "description": "Returns the UTC formatted date used in GTD orders."
                    },
                    "alert_active": {
                        "type": "integer",
                        "description": "Returns if the alert is active [1] or disabled [0].",
                        "format": "int32"
                    },
                    "alert_repeatable": {
                        "type": "integer",
                        "description": "Returns if the alert can be sent more than once.",
                        "format": "int32"
                    },
                    "alert_email": {
                        "type": "string",
                        "description": "Returns the designated email address for sendMessage functionality."
                    },
                    "alert_send_message": {
                        "type": "integer",
                        "description": "Returns whether or not the alert will send an email.",
                        "format": "int32"
                    },
                    "alert_message": {
                        "type": "string",
                        "description": "Returns the body content of what your alert will report once triggered"
                    },
                    "alert_show_popup": {
                        "type": "integer",
                        "description": "Returns whether or not the alert will trigger TWS Pop-up messages",
                        "format": "int32"
                    },
                    "alert_play_audio": {
                        "type": "integer",
                        "description": "Returns whether or not the alert will play audio",
                        "format": "int32"
                    },
                    "order_status": {
                        "type": "string",
                        "description": "represent order statusAlways returns “Presubmitted”.",
                        "enum": [
                            "Presubmitted",
                            "Submitted"
                        ]
                    },
                    "alert_triggered": {
                        "type": "integer",
                        "description": "Returns whether or not the alert was triggered yet.",
                        "format": "int32"
                    },
                    "fg_color": {
                        "type": "string",
                        "description": "Foreground color. Not applicable to API."
                    },
                    "bg_color": {
                        "type": "string",
                        "description": "Background color. Not applicable to API."
                    },
                    "order_not_editable": {
                        "type": "boolean",
                        "description": "Returns if the order can be edited."
                    },
                    "itws_orders_only": {
                        "type": "integer",
                        "description": "Returns whether or not the alert will trigger mobile notifications.",
                        "format": "int32"
                    },
                    "alert_mta_currency": {
                        "type": "string",
                        "description": "Returns currency set for MTA alerts. Only valid for alert type 8 & 9."
                    },
                    "alert_mta_defaults": {
                        "type": "string",
                        "description": "Returns current MTA default values."
                    },
                    "tool_id": {
                        "type": "integer",
                        "description": "Tracking ID for MTA alerts only. Returns ‘null’ for standard alerts.",
                        "format": "int32"
                    },
                    "time_zone": {
                        "type": "string",
                        "description": "Returned for time-specific conditions."
                    },
                    "alert_default_type": {
                        "type": "integer",
                        "description": "Returns default type set for alerts. Configured in Client Portal.",
                        "format": "int32"
                    },
                    "condition_size": {
                        "type": "integer",
                        "description": "Returns the total number of conditions in the alert.",
                        "format": "int32"
                    },
                    "condition_outside_rth": {
                        "type": "integer",
                        "description": "Returns whether or not the alert will trigger outside of regular trading hours.",
                        "format": "int32"
                    },
                    "conditions": {
                        "type": "array",
                        "description": "Returns all conditions",
                        "items": {
                            "$ref": "#/components/schemas/alertCondition"
                        }
                    }
                },
                "description": "details of the specified alert"
            },
            "alerts": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/alert"
                }
            },
            "algosResponse": {
                "type": "object",
                "properties": {
                    "algos": {
                        "type": "array",
                        "description": "Contains all relevant algos for the contract."
                    }
                },
                "description": "available algos"
            },
            "allocationGroup": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name used to refer to your allocation group. This will be used while placing orders."
                    },
                    "accounts": {
                        "type": "array",
                        "description": "Contains a series of objects depicting which accounts are involved and, for user-defined allocation methods, the distribution value for each sub-account."
                    },
                    "default_method": {
                        "$ref": "#/components/schemas/allocationMethod"
                    }
                }
            },
            "allocationGroups": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "description": "array, which contains all allocation groups under the advisor account"
                    }
                }
            },
            "allocationMethod": {
                "type": "string",
                "description": "Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified. IB-computed allocation methods:\n  * `A` - Available Equity\n  * `E` - Equal\n  * `N` - Net Liquidation Value\n\nUser-specified allocation methods:\n  * `C` - Cash Quantity\n  * `P` - Percentage\n  * `R` - Ratios\n  * `S` - Shares\n",
                "default": "N",
                "enum": [
                    "A",
                    "E",
                    "N",
                    "C",
                    "P",
                    "R",
                    "S"
                ]
            },
            "availableFundsResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "object",
                        "properties": {
                            "current_available": {
                                "type": "string",
                                "description": "Describes currently avialable funds in your account for trading."
                            },
                            "current_excess": {
                                "type": "string",
                                "description": "Describes total value of the account."
                            },
                            "Prdctd Pst-xpry Excss": {
                                "type": "string",
                                "description": "Displays predicted post-expiration account value."
                            },
                            "Lk Ahd Avlbl Fnds": {
                                "type": "string",
                                "description": "This value reflects your available funds at the next margin change."
                            },
                            "Lk Ahd Excss Lqdty": {
                                "type": "string",
                                "description": "* `Securities` - Equity with loan value. Look ahead maintenance margin.\n * `Commodities` - Net Liquidation value. Look ahead maintenance margin.\n"
                            },
                            "overnight_available": {
                                "type": "string",
                                "description": "Describes available funds for overnight trading."
                            },
                            "overnight_excess": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * `Securities` - Equivalent to regular trading hours. \n   * `Commodities` - Commodities Net Liquidation value. Overnight Maintenance margin.\n"
                            },
                            "buying_power": {
                                "type": "string",
                                "description": "Describes the total buying power of the account including existing balance with margin."
                            },
                            "leverage": {
                                "type": "string",
                                "description": "Describes the total combined leverage."
                            },
                            "Lk Ahd Nxt Chng": {
                                "type": "string",
                                "description": "Describes when the next 'Look Ahead' calculation will take place."
                            },
                            "day_trades_left": {
                                "type": "string",
                                "description": "Describes the number of trades remaining before flagging the Pattern Day Trader status. \"Unlimited\" is used for existing Pattern Day Traders."
                            }
                        },
                        "description": "total values"
                    },
                    "Crypto at Paxos": {
                        "$ref": "#/components/schemas/funds"
                    },
                    "commodities": {
                        "$ref": "#/components/schemas/funds"
                    },
                    "securities": {
                        "type": "object",
                        "properties": {
                            "current_available": {
                                "type": "string",
                                "description": "Describes currently avialable funds in your account for trading."
                            },
                            "current_excess": {
                                "type": "string",
                                "description": "Describes total value of the account."
                            },
                            "Prdctd Pst-xpry Excss": {
                                "type": "string",
                                "description": "Displays predicted post-expiration account value."
                            },
                            "SMA": {
                                "type": "string"
                            },
                            "Lk Ahd Avlbl Fnds": {
                                "type": "string",
                                "description": "This value reflects your available funds at the next margin change."
                            },
                            "Lk Ahd Excss Lqdty": {
                                "type": "string",
                                "description": "* `Securities` - Equity with loan value. Look ahead maintenance margin.\n * `Commodities` - Net Liquidation value. Look ahead maintenance margin.\n"
                            },
                            "overnight_available": {
                                "type": "string",
                                "description": "Describes available funds for overnight trading."
                            },
                            "overnight_excess": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * `Securities` - Equivalent to regular trading hours. \n   * `Commodities` - Commodities Net Liquidation value. Overnight Maintenance margin.\n"
                            },
                            "leverage": {
                                "type": "string",
                                "description": "Describes the total combined leverage."
                            }
                        },
                        "description": "Contains an overview of Security specific fund values."
                    }
                },
                "description": "Contains a combined overview of Commidity, Security and Crypto fund values."
            },
            "bondFiltersResponse": {
                "type": "object",
                "properties": {
                    "bondFilters": {
                        "type": "array",
                        "description": "Contains all filters pertaining to the given issuerId",
                        "items": {
                            "type": "object",
                            "properties": {
                                "displayText": {
                                    "type": "string",
                                    "description": "An identifier used to document returned options/values. This can be thought of as a key value.",
                                    "enum": [
                                        "Maturity Date",
                                        "Issue Date",
                                        "Coupon",
                                        "Currency"
                                    ]
                                },
                                "columnId": {
                                    "type": "integer",
                                    "description": "Used for user interfaces. Internal use only.",
                                    "format": "int32"
                                },
                                "options": {
                                    "type": "array",
                                    "description": "Contains all objects with values corresponding to the parent displayText key.",
                                    "items": {
                                        "required": [
                                            "value"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "text": {
                                                "type": "string",
                                                "description": "In some instances, a text value will be returned, which indicates the standardized value format such as plaintext dates, rather than solely numerical values."
                                            },
                                            "value": {
                                                "type": "string",
                                                "description": "Returns value directly correlating to the displayText key. This may include exchange, maturity date, issue date, coupon, or currency."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "brokerageSessionInitRequest": {
                "type": "object",
                "properties": {
                    "publish": {
                        "type": "boolean",
                        "description": "publish brokerage session token at the same time when brokerage session initialized. If set false, then session token should be published before calling init. Setting true is preferred way."
                    },
                    "compete": {
                        "type": "boolean",
                        "description": "Determines if other brokerage sessions should be disconnected to prioritize this connection."
                    }
                }
            },
            "brokerageSessionStatus": {
                "type": "object",
                "properties": {
                    "authenticated": {
                        "type": "boolean",
                        "description": "Returns whether your brokerage session is authenticated or not."
                    },
                    "competing": {
                        "type": "boolean",
                        "description": "Returns whether you have a competing brokerage session in another connection."
                    },
                    "connected": {
                        "type": "boolean",
                        "description": "Returns whether you are connected to the gateway or not."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message about your authenticate status if any."
                    },
                    "MAC": {
                        "type": "string",
                        "description": "Device MAC information."
                    },
                    "serverInfo": {
                        "type": "object",
                        "properties": {
                            "serverName": {
                                "type": "string",
                                "description": "IBKR server information. Internal use only."
                            },
                            "serverVersion": {
                                "type": "string",
                                "description": "IBKR version information. Internal use only."
                            },
                            "fail": {
                                "type": "string",
                                "description": "Returns the reason for failing to retrieve authentication status."
                            }
                        }
                    }
                }
            },
            "contractInfo": {
                "properties": {
                    "cfi_code": {
                        "type": "string",
                        "description": "Classification of Financial Instrument codes"
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Underlying symbol"
                    },
                    "cusip": {
                        "type": "string",
                        "description": "Returns the CUSIP for the given instrument. Only used in BOND trading."
                    },
                    "expiry_full": {
                        "type": "string",
                        "description": "Returns the expiration month of the contract."
                    },
                    "con_id": {
                        "type": "integer",
                        "description": "Indicates the contract identifier of the given contract.",
                        "format": "int32"
                    },
                    "maturity_date": {
                        "type": "string",
                        "description": "Indicates the final maturity date of the given contract."
                    },
                    "industry": {
                        "type": "string",
                        "description": "Specific group of companies or businesses."
                    },
                    "instrument_type": {
                        "type": "string",
                        "description": "Asset class of the instrument."
                    },
                    "trading_class": {
                        "type": "string",
                        "description": "Designated trading class of the contract."
                    },
                    "valid_exchanges": {
                        "type": "string",
                        "description": "Comma separated list of support exchanges or trading venues."
                    },
                    "allow_sell_long": {
                        "type": "boolean",
                        "description": "Allowed to sell shares you own."
                    },
                    "is_zero_commission_security": {
                        "type": "boolean",
                        "description": "Indicates if the contract supports zero commission trading."
                    },
                    "local_symbol": {
                        "type": "string",
                        "description": "Contract’s symbol from primary exchange. For options it is the OCC symbol."
                    },
                    "contract_clarification_type": {
                        "type": "string"
                    },
                    "classifier": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string",
                        "description": "Base currency contract is traded in."
                    },
                    "text": {
                        "type": "string",
                        "description": "Indicates the display name of the contract, as shown with Client Portal."
                    },
                    "underlying_con_id": {
                        "type": "integer",
                        "description": "Underlying contract identifier for the requested contract.",
                        "format": "int32"
                    },
                    "r_t_h": {
                        "type": "boolean",
                        "description": "Indicates if the contract can be traded outside regular trading hours or not."
                    },
                    "multiplier": {
                        "type": "string",
                        "description": "Indicates the multiplier of the contract."
                    },
                    "underlying_issuer": {
                        "type": "string",
                        "description": "Indicates the issuer of the underlying."
                    },
                    "contract_month": {
                        "type": "string",
                        "description": "Indicates the year and month the contract expires."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "Indicates the name of the company or index."
                    },
                    "smart_available": {
                        "type": "boolean",
                        "description": "Indicates if the contract can be smart routed or not."
                    },
                    "exchange": {
                        "type": "string",
                        "description": "Indicates the primary exchange for which the contract can be traded."
                    },
                    "category": {
                        "type": "string",
                        "description": "Indicates the industry category of the instrument."
                    }
                }
            },
            "contractRules": {
                "type": "object",
                "properties": {
                    "algoEligible": {
                        "type": "boolean",
                        "description": "Indicates if the contract can trade algos or not."
                    },
                    "overnightEligible": {
                        "type": "boolean",
                        "description": "Indicates if outsideRTH trading is permitted for the instrument"
                    },
                    "costReport": {
                        "type": "boolean",
                        "description": "Indicates whether or not a cost report has been requested (Client Portal only)."
                    },
                    "canTradeAcctIds": {
                        "type": "array",
                        "description": "Indicates permitted accountIDs that may trade the contract.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "error": {
                        "type": "string",
                        "description": "If rules information can not be received for any reason, it will be expressed here.",
                        "nullable": true
                    },
                    "orderTypes": {
                        "type": "array",
                        "description": "Indicates permitted order types for use with standard quantity trading.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "limit",
                                "midprice",
                                "market",
                                "stop",
                                "stop_limit",
                                "mit",
                                "lit",
                                "trailing_stop",
                                "trailing_stop_limit",
                                "relative",
                                "marketonclose",
                                "limitonclose"
                            ]
                        }
                    },
                    "ibAlgoTypes": {
                        "type": "array",
                        "description": "Indicates permitted algo types for use with the given contract.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "limit",
                                "stop_limit",
                                "lit",
                                "trailing_stop_limit",
                                "relative",
                                "marketonclose",
                                "limitonclose"
                            ]
                        }
                    },
                    "fraqTypes": {
                        "type": "array",
                        "description": "Indicates permitted order types for use with fractional trading.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "limit",
                                "market",
                                "stop",
                                "stop_limit",
                                "mit",
                                "lit",
                                "trailing_stop",
                                "trailing_stop_limit"
                            ]
                        }
                    },
                    "forceOrderPreview": {
                        "type": "boolean",
                        "description": "Indicates if the order preview is forced upon the user before submission."
                    },
                    "cqtTypes": {
                        "type": "array",
                        "description": "Indicates accepted order types for use with cash quantity.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "limit",
                                "market",
                                "stop",
                                "stop_limit",
                                "mit",
                                "lit",
                                "trailing_stop",
                                "trailing_stop_limit"
                            ]
                        }
                    },
                    "orderDefaults": {
                        "type": "object",
                        "properties": {
                            "LMT": {
                                "properties": {
                                    "LP": {
                                        "type": "string",
                                        "description": "Indicates a Limit Price default value."
                                    }
                                }
                            }
                        },
                        "description": "Indicates default order type for the given security type."
                    },
                    "orderTypesOutside": {
                        "type": "array",
                        "description": "Indicates permitted order types for use outside of regular trading hours.",
                        "items": {
                            "type": "string",
                            "enum": [
                                "limit",
                                "stop_limit",
                                "lit",
                                "trailing_stop_limit",
                                "relative"
                            ]
                        }
                    },
                    "defaultSize": {
                        "type": "integer",
                        "description": "Default total quantity value for orders.",
                        "format": "int32"
                    },
                    "cashSize": {
                        "type": "integer",
                        "description": "Default cash value quantity.",
                        "format": "int32"
                    },
                    "sizeIncrement": {
                        "type": "integer",
                        "description": "Indicates quantity increase for the contract.",
                        "format": "int32"
                    },
                    "tifTypes": {
                        "type": "array",
                        "description": "Indicates allowed tif types supported for the contract.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tifDefaults": {
                        "type": "object",
                        "properties": {
                            "TIF": {
                                "type": "string",
                                "description": "The default TIF type for orders."
                            },
                            "SIZE": {
                                "type": "string",
                                "description": "The default size value for orders."
                            },
                            "DEFAULT_ACCT": {
                                "type": "string",
                                "description": "default account (multi account only)"
                            },
                            "PMALGO": {
                                "type": "boolean"
                            }
                        },
                        "description": "Object containing details about your TIF value defaults. These defaults can be viewed and modified in TWS’s within the Global Configuration.\n"
                    },
                    "limitPrice": {
                        "type": "integer",
                        "description": "Default limit price for the given contract.",
                        "format": "int32"
                    },
                    "stopPrice": {
                        "type": "integer",
                        "description": "Default stop price for the given contract.",
                        "format": "int32"
                    },
                    "orderOrigination": {
                        "type": "string",
                        "description": "Order origin designation for US securities options and Options Clearing Corporation",
                        "nullable": true
                    },
                    "preview": {
                        "type": "boolean",
                        "description": "Indicates if the order preview is required (for client portal only)"
                    },
                    "displaySize": {
                        "type": "integer",
                        "description": "Standard display increment rule for the instrument.",
                        "format": "int32",
                        "nullable": true
                    },
                    "fraqInt": {
                        "type": "integer",
                        "description": "Indicates decimal places for fractional order size.",
                        "format": "int32"
                    },
                    "cashCcy": {
                        "type": "string",
                        "description": "Indicates base currency for the instrument."
                    },
                    "cashQtyIncr": {
                        "type": "integer",
                        "description": "Indicates cash quantity increment rules.",
                        "format": "int32"
                    },
                    "priceMagnifier": {
                        "type": "integer",
                        "description": "Signifies the magnifier of a given contract. This is separate from the price multiplier, and will typically return ‘null’\n",
                        "format": "int32",
                        "nullable": true
                    },
                    "negativeCapable": {
                        "type": "boolean",
                        "description": "Indicates if the value of the contract can be negative (true) or if it is always positive (false)."
                    },
                    "incrementType": {
                        "type": "integer",
                        "description": "Indicates the type of increment style.",
                        "format": "int32"
                    },
                    "incrementRules": {
                        "type": "array",
                        "description": "Indicates increment rule values including lowerEdge and increment value.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "lowerEdge": {
                                    "type": "integer",
                                    "description": "If the current mark price of the instrument is at or above the lower edge, the given increment value is used for order prices.",
                                    "format": "int32"
                                },
                                "increment": {
                                    "type": "integer",
                                    "description": "The price of the instrument must be submitted as a mulitple of the increment value.",
                                    "format": "int32"
                                }
                            }
                        }
                    },
                    "hasSecondary": {
                        "type": "boolean"
                    },
                    "modTypes": {
                        "type": "array",
                        "description": "Lists the available order types supported when modifying the order."
                    },
                    "increment": {
                        "type": "integer",
                        "description": "Minimum increment values for prices",
                        "format": "int32"
                    },
                    "incrementDigits": {
                        "type": "integer",
                        "description": "Number of decimal places to indicate the increment value.",
                        "format": "int32"
                    }
                },
                "description": "detailed contract information"
            },
            "currencyPairs": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "symbol": {
                                "type": "string",
                                "description": "The official symbol of the given currency pair."
                            },
                            "conid": {
                                "type": "integer",
                                "description": "The official contract identifier of the given currency pair.",
                                "format": "int32"
                            },
                            "ccyPair": {
                                "type": "integer",
                                "description": "Returns the symbol counterpart.",
                                "format": "int32"
                            }
                        }
                    }
                }
            },
            "deliveryOptions": {
                "type": "object",
                "properties": {
                    "M": {
                        "type": "integer",
                        "description": "Email option is enabled or not.",
                        "format": "int32"
                    },
                    "E": {
                        "type": "array",
                        "description": "Returns an array of device information."
                    }
                }
            },
            "detailedContractInformation": {
                "type": "object",
                "properties": {
                    "currencyType": {
                        "type": "string",
                        "description": "Confirms if the currency type. If trading exclusively in your base currency, “base” will be returned."
                    },
                    "rc": {
                        "type": "integer",
                        "description": "Returns the data identifier (Internal Use Only).",
                        "format": "int32"
                    },
                    "view": {
                        "type": "array",
                        "description": "Returns the accountIds being viewed and returned.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nd": {
                        "type": "integer",
                        "description": "Returns the total data points.",
                        "format": "int32"
                    },
                    "id": {
                        "type": "string",
                        "description": "Returns the request identifier, getPerformanceAllPeriods."
                    },
                    "included": {
                        "type": "array",
                        "description": "Returns an array containing accounts reviewed.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pm": {
                        "type": "string",
                        "description": "Portfolio Measure. Used to indicate TWR or MWR values returned."
                    }
                },
                "additionalProperties": {
                    "type": "object",
                    "properties": {
                        "lastSuccessfulUpdate": {
                            "type": "string",
                            "description": "Returns the datetime in EST of the last successful call to the /pa endpoint."
                        },
                        "start": {
                            "type": "string",
                            "description": "Returns the start date of the request range."
                        },
                        "periods": {
                            "type": "array",
                            "description": "Returns the valid period values returned by the /pa/allperiods endpoint.",
                            "items": {
                                "type": "string"
                            }
                        },
                        "end": {
                            "type": "string",
                            "description": "Returns the end date of the request range."
                        },
                        "baseCurrency": {
                            "type": "string",
                            "description": "Clarifies the base currency of the primary accountId."
                        }
                    },
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "nav": {
                                "type": "array",
                                "description": "Net asset value data for the account or consolidated accounts. NAV data is not applicable to benchmarks.",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "cps": {
                                "type": "array",
                                "description": "Returns the object containing the Cumulative performance data. Correlates to the same index position of data reutnred by the \"nav\" field.",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "freq": {
                                "type": "string",
                                "description": "Returns the determining frequency of the data range."
                            },
                            "dates": {
                                "type": "array",
                                "description": "Returns the dates corresponding to the frequency of data.",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "startNav": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "description": "Returns the starting date for the current period's NAV range."
                                    },
                                    "val": {
                                        "type": "integer",
                                        "description": "Returns the inital NAV value of {Period Range} from the current date.",
                                        "format": "int32"
                                    }
                                },
                                "description": "Returns the starting data for the current NAV details."
                            }
                        },
                        "description": "Returns the performance data for the given period value."
                    },
                    "description": "Contains the relevant performance data for the specified accountId."
                }
            },
            "disclaimerInfo": {
                "type": "object",
                "properties": {
                    "FC": {
                        "type": "string",
                        "description": "Returns the Typecode for the given disclaimer."
                    },
                    "DT": {
                        "type": "string",
                        "description": "Returns the Disclaimer message."
                    }
                }
            },
            "dynAccountSearchResponse": {
                "type": "object",
                "properties": {
                    "matchedAccounts": {
                        "type": "array",
                        "description": "Contains a series of objects that pertain to the account information requested.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "accountId": {
                                    "type": "string",
                                    "description": "Returns a matching account ID that corresponds to the matching value."
                                },
                                "alias": {
                                    "type": "string",
                                    "description": "Returns the corresponding alias or alternative name for the specific account ID. May be a duplicate of the accountId value in most cases."
                                },
                                "allocationId": {
                                    "type": "string",
                                    "description": "Returns the allocation identifier used internally for the account."
                                }
                            }
                        }
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Displays the searchPattern used for the request."
                    }
                }
            },
            "errorOnlyResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "error reason"
                    }
                }
            },
            "errorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "error reason"
                    },
                    "statusCode": {
                        "type": "string",
                        "description": "mimic response status code"
                    }
                }
            },
            "failedTickleResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "reason why tickle was accepted by not processed"
                    }
                }
            },
            "features": {
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "array",
                        "description": "Displayed as the string of your symbol Contains a series of objects for each symbol that matches the requested.\n"
                    }
                }
            },
            "funds": {
                "type": "object",
                "properties": {
                    "current_available": {
                        "type": "string",
                        "description": "Describes currently avialable funds in your account for trading."
                    },
                    "current_excess": {
                        "type": "string",
                        "description": "Describes total value of the account."
                    },
                    "Prdctd Pst-xpry Excss": {
                        "type": "string",
                        "description": "Displays predicted post-expiration account value."
                    },
                    "Lk Ahd Avlbl Fnds": {
                        "type": "string",
                        "description": "This value reflects your available funds at the next margin change."
                    },
                    "overnight_available": {
                        "type": "string",
                        "description": "Describes available funds for overnight trading."
                    },
                    "overnight_excess": {
                        "type": "string",
                        "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * `Securities` - Equivalent to regular trading hours. \n   * `Commodities` - Commodities Net Liquidation value. Overnight Maintenance margin.\n"
                    }
                },
                "description": "Contains commodities specific fund values."
            },
            "fyiEnableDeviceOption": {
                "type": "object",
                "properties": {
                    "deviceName": {
                        "type": "string"
                    },
                    "deviceId": {
                        "type": "string"
                    },
                    "uiName": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "enable or disable device"
                    }
                }
            },
            "fyiSettings": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "A": {
                            "type": "integer",
                            "description": "Returns ony if the subscription can be disabled/enabled manually. See /fyi/settings/{typecode} for how to enable/disable.\n",
                            "format": "int32"
                        },
                        "FC": {
                            "type": "string",
                            "description": "Fyi code for enabling or disabling the notification."
                        },
                        "H": {
                            "type": "integer",
                            "description": "Disclaimer if the notification was read.",
                            "format": "int32"
                        },
                        "FD": {
                            "type": "string",
                            "description": "Returns a detailed description of the topic."
                        },
                        "FN": {
                            "type": "string",
                            "description": "Returns a human readable title for the notification."
                        }
                    }
                }
            },
            "fyiVT": {
                "type": "object",
                "properties": {
                    "V": {
                        "type": "integer",
                        "description": "Returns 1 to state message was acknowledged.",
                        "format": "int32"
                    },
                    "T": {
                        "type": "integer",
                        "description": "Returns the time in ms to complete the edit.",
                        "format": "int32"
                    }
                }
            },
            "hmdsHistoryResponse": {
                "type": "object",
                "properties": {
                    "startTime": {
                        "type": "string",
                        "description": "UTC date and time of the start (chronologically earlier) of the complete period in format YYYYMMDD-hh:mm:ss."
                    },
                    "startTimeVal": {
                        "type": "integer",
                        "description": "Unix timestamp of the start (chronologically earlier) of the complete period.",
                        "format": "int32"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "UTC date and time of the end (chronologically later) of the complete period in format YYYYMMDD-hh:mm:ss."
                    },
                    "endTimeVal": {
                        "type": "integer",
                        "description": "Unix timestamp of the end (chronologically later) of the complete period.",
                        "format": "int32"
                    },
                    "data": {
                        "type": "array",
                        "description": "Array containing OHLC bars for the requested period.",
                        "items": {
                            "$ref": "#/components/schemas/singleHistoricalBar"
                        }
                    },
                    "points": {
                        "type": "integer",
                        "description": "Count of the number of bars returned in the data array.",
                        "format": "int32"
                    },
                    "mktDataDelay": {
                        "type": "integer",
                        "description": "Number of milliseconds taken to satisfy this historical data request.",
                        "format": "int32"
                    }
                },
                "description": "Object containing the requested historical data and related metadata."
            },
            "hmdsScannerParams": {
                "type": "object",
                "properties": {
                    "scan_type_list": {
                        "type": "array",
                        "properties": {
                            "display_name": {
                                "type": "string",
                                "description": "Human readable name for the scanner “type”"
                            },
                            "code": {
                                "type": "string",
                                "description": "Value used for the market scanner request."
                            },
                            "instruments": {
                                "type": "array",
                                "description": "Returns all instruments the scanner type can be used with."
                            }
                        },
                        "description": "Contains all values used as the scanner “type” in the request."
                    },
                    "instrument_list": {
                        "type": "array",
                        "properties": {
                            "display_name": {
                                "type": "string",
                                "description": "Human readable representation of the instrument type."
                            },
                            "type": {
                                "type": "string",
                                "description": "Value used for the market scanner request."
                            },
                            "filters": {
                                "type": "array",
                                "description": "Returns an array of all filters uniquely avaliable to that instrument type."
                            }
                        },
                        "description": "Contains all values relevant to the scanner “instrument” request field."
                    },
                    "location_tree": {
                        "type": "array",
                        "properties": {
                            "display_name": {
                                "type": "string",
                                "description": "Returns the overarching instrument type to designate the location."
                            },
                            "type": {
                                "type": "string",
                                "description": "Returns the code value of the market scanner instrument type value."
                            },
                            "locations": {
                                "type": "array",
                                "properties": {
                                    "display_name": {
                                        "type": "string",
                                        "description": "Returns the human-readable value of the market scanner’s location value."
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Returns the code value of the market scanner location value."
                                    },
                                    "locations": {
                                        "type": "array",
                                        "description": "Always returns an empty array at this depth."
                                    }
                                }
                            }
                        },
                        "description": "Contains all values relevant to the location field of the market scanner request."
                    }
                }
            },
            "hmdsScannerRunRequest": {
                "type": "object",
                "properties": {
                    "instrument": {
                        "type": "string",
                        "description": "Specify the type of instrument for the request. Found under the “instrument_list” value of the /hmds/scanner/params request."
                    },
                    "locations": {
                        "type": "string",
                        "description": "Specify the type of location for the request. Found under the “location_tree” value of the /hmds/scanner/params request."
                    },
                    "scanCode": {
                        "type": "string",
                        "description": "Specify the scanner type for the request. Found under the “scan_type_list” value of the /hmds/scanner/params request."
                    },
                    "secType": {
                        "type": "string",
                        "description": "Specify the type of security type for the request. Found under the “location_tree” value of the /hmds/scanner/params request."
                    },
                    "delayedLocations": {
                        "type": "string"
                    },
                    "maxItems": {
                        "type": "integer",
                        "description": "Specify how many items should be returned.",
                        "format": "int32",
                        "default": 250
                    },
                    "filters": {
                        "type": "array",
                        "properties": {
                            "{filter key}": {
                                "type": "string"
                            }
                        },
                        "description": "Array of objects containing all filters upon the scanner request. Content contains a series of key:value pairs. While “filters” must be specified in the body, no content in the array needs to be passed.\n"
                    }
                }
            },
            "individualPosition": {
                "type": "object",
                "properties": {
                    "acctId": {
                        "type": "string",
                        "description": "IB accountId of an account with a position in the requested conid."
                    },
                    "allExchanges": {
                        "type": "string",
                        "description": "Comma separated all exchanges on which the instrument trades."
                    },
                    "assetClass": {
                        "type": "string",
                        "description": "Asset class of the requested instrument."
                    },
                    "avgCost": {
                        "type": "number",
                        "description": "The account's average cost for its position."
                    },
                    "avgPrice": {
                        "type": "number",
                        "description": "The account's average price for its position."
                    },
                    "baseAvgCost": {
                        "type": "number",
                        "description": "Average cost in the account's base currency."
                    },
                    "baseAvgPrice": {
                        "type": "number",
                        "description": "Average price in the account's base currency."
                    },
                    "baseMktPrice": {
                        "type": "number",
                        "description": "Market price of instrument in the account's base currency."
                    },
                    "baseMktValue": {
                        "type": "number",
                        "description": "Market value of the position in the account's base currency."
                    },
                    "baseRealizedPnl": {
                        "type": "number",
                        "description": "Realized PnL for the instrument in the account's base currency."
                    },
                    "baseUnrealizedPnl": {
                        "type": "number",
                        "description": "Unrealized PnL for the instrument in the account's base currency."
                    },
                    "chineseName": {
                        "type": "string",
                        "description": "Chinese name of the instrument."
                    },
                    "conExchMap": {
                        "type": "array"
                    },
                    "conid": {
                        "type": "integer",
                        "description": "IB contract ID for the instrument.",
                        "format": "int32"
                    },
                    "contractDesc": {
                        "type": "string",
                        "description": "Human-readable description of the instrument."
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country in which the instrument is issued."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Currency in which the instrument trades."
                    },
                    "displayRule": {
                        "type": "object",
                        "properties": {
                            "displayRuleStep": {
                                "type": "array",
                                "description": "Array containing objects corresponding to display rule increments.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "decimalDigits": {
                                            "type": "integer",
                                            "description": "Number of decimal digits to display.",
                                            "format": "int32"
                                        },
                                        "lowerEdge": {
                                            "type": "number",
                                            "description": "Lower edge from which the display rule is effective."
                                        },
                                        "wholeDigits": {
                                            "type": "integer",
                                            "description": "Number of integer digits to display.",
                                            "format": "int32"
                                        }
                                    },
                                    "description": "A single display rule increment."
                                }
                            },
                            "magnification": {
                                "type": "integer",
                                "description": "Magnifier applied to pricing, if applicable.",
                                "format": "int32"
                            }
                        },
                        "description": "Object defining minimum increments used in displaying market data for the instrument."
                    },
                    "exchs": {
                        "type": "object",
                        "nullable": true
                    },
                    "exerciseStyle": {
                        "type": "string",
                        "description": "Style of exercise for options.",
                        "nullable": true
                    },
                    "expiry": {
                        "type": "string",
                        "description": "Expiration of instrument, if applicable.",
                        "nullable": true
                    },
                    "fullName": {
                        "type": "string",
                        "description": "Full display name of the instrument."
                    },
                    "group": {
                        "type": "string",
                        "description": "Industry sub-categorization of the instrument."
                    },
                    "hasOptions": {
                        "type": "boolean",
                        "description": "Indicates whether instrument has options contracts available for trading at IB."
                    },
                    "incrementRules": {
                        "type": "array",
                        "description": "Array containing increment rules used when pricing orders for the instrument.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "increment": {
                                    "type": "number",
                                    "description": "The pricing increment."
                                },
                                "lowerEdge": {
                                    "type": "number",
                                    "description": "Lower edge from which the price increment rule is effective."
                                }
                            },
                            "description": "Objects describing a single increment rule."
                        }
                    },
                    "isEventContract": {
                        "type": "boolean",
                        "description": "Indicates whether the instrument is an Event Contract."
                    },
                    "isUS": {
                        "type": "boolean",
                        "description": "Indicates whether the instrument is issued in the US."
                    },
                    "lastTradingDay": {
                        "type": "string",
                        "description": "Last day of trading in the instrument, if applicable. Formatted `YYYYMMDD`."
                    },
                    "listingExchange": {
                        "type": "string",
                        "description": "The exchange on which the instrument is listed, or the primary exchange recognized by IB for the instrument."
                    },
                    "mktPrice": {
                        "type": "number",
                        "description": "Current market price of the instrument, in the instrument's currency."
                    },
                    "mktValue": {
                        "type": "number",
                        "description": "Current market value of the account's position in the instrument, in the instrument's currency."
                    },
                    "model": {
                        "type": "string",
                        "description": "Name of the model portfolio in which the account is invested that contributes this position."
                    },
                    "multiplier": {
                        "type": "number",
                        "description": "Instrument's multiplier, if applicable."
                    },
                    "name": {
                        "type": "string",
                        "description": "Formal name of the entity or asset to which the instrument relates."
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Maximum number of accounts that can be returned in a single request.",
                        "format": "int32"
                    },
                    "position": {
                        "type": "number",
                        "description": "Size of position in units of instrument."
                    },
                    "putOrCall": {
                        "type": "string",
                        "description": "The right of an options contract, if applicable.",
                        "enum": [
                            "P",
                            "C"
                        ]
                    },
                    "realizedPnl": {
                        "type": "number",
                        "description": "Realized PnL for the instrument in the instrument's currency."
                    },
                    "sector": {
                        "type": "string",
                        "description": "Industry sector categorization of the instrument."
                    },
                    "sectorGroup": {
                        "type": "string",
                        "description": "Industry sub-categorization of the instrument."
                    },
                    "strike": {
                        "type": "string",
                        "description": "Strike price, if applicable. Returned as string."
                    },
                    "ticker": {
                        "type": "string",
                        "description": "Symbol associated with the instrument."
                    },
                    "time": {
                        "type": "integer",
                        "description": "Time taken to retrieve position data in milliseconds.",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string",
                        "description": "Description of instrument, used to differentiate classes, if applicable."
                    },
                    "undConid": {
                        "type": "integer",
                        "description": "Contract ID of underlying instrument, if applicable.",
                        "format": "int32"
                    },
                    "unrealizedPnl": {
                        "type": "number",
                        "description": "Unrealized PnL for the instrument in the account."
                    }
                },
                "description": "A specific account's position in the requested conid."
            },
            "individualPositionArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/individualPosition"
                }
            },
            "iserverHistoryResponse": {
                "type": "object",
                "properties": {
                    "serverId": {
                        "type": "string",
                        "description": "Internal use. Identifier of the request."
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Symbol of the request instrument."
                    },
                    "text": {
                        "type": "string",
                        "description": "Description or company name of the instrument."
                    },
                    "priceFactor": {
                        "type": "integer",
                        "description": "Internal use. Used to scale Client Portal chart Y-axis.",
                        "format": "int32"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "UTC date and time of the start (chronologically earlier) of the complete period in format YYYYMMDD-hh:mm:ss."
                    },
                    "high": {
                        "type": "string",
                        "description": "Internal use. Delivers highest price value in total interval. Used for chart scaling. A string constructed as 'highestPrice*priceFactor/totalVolume*volumeFactor/minutesFromStartTime'."
                    },
                    "low": {
                        "type": "string",
                        "description": "Internal use. Delivers lowest price value in total interval. Used for chart scaling. A string constructed as 'lowestPrice*priceFactor/totalVolume*volumeFactor/minutesFromStartTime'."
                    },
                    "timePeriod": {
                        "type": "string",
                        "description": "The client-specified period value."
                    },
                    "barLength": {
                        "type": "integer",
                        "description": "The client-specified bar width, represented in seconds.",
                        "format": "int32"
                    },
                    "mdAvailability": {
                        "type": "string",
                        "description": "A three-character string reflecting the nature of available data. R = Realtime, D = Delayed, Z = Frozen, Y = Frozen Delayed, N = Not Subscribed. P = Snapshot, p = Consolidated. B = Top of book."
                    },
                    "outsideRth": {
                        "type": "boolean",
                        "description": "Indicates whether data from outside regular trading hours is included in the response."
                    },
                    "tradingDayDuration": {
                        "type": "integer",
                        "description": "Length of instrument's trading day in seconds.",
                        "format": "int32"
                    },
                    "volumeFactor": {
                        "type": "integer",
                        "description": "Internal use. Used to scale volume histograms.",
                        "format": "int32"
                    },
                    "priceDisplayRule": {
                        "type": "integer",
                        "description": "Internal use. Governs application of pricing display rule.",
                        "format": "int32"
                    },
                    "priceDisplayValue": {
                        "type": "string",
                        "description": "Internal use. Governs rendering of displayed pricing."
                    },
                    "chartPanStartTime": {
                        "type": "string",
                        "description": "Internal use. UTC datetime string used to center Client Portal charts. Format YYYYMMDD-hh:mm:ss."
                    },
                    "direction": {
                        "type": "integer",
                        "description": "Indicates how the period is applied in relation to the startTime. Value will always be -1, indicating that the period extends from the startTime forward into the future.",
                        "format": "int32"
                    },
                    "negativeCapable": {
                        "type": "boolean",
                        "description": "Indicates whether instrument is capable of negative pricing."
                    },
                    "messageVersion": {
                        "type": "integer",
                        "description": "Internal use. Reflects the version of the response schema used.",
                        "format": "int32"
                    },
                    "travelTime": {
                        "type": "integer",
                        "description": "Internal time in flight to serve the request.",
                        "format": "int32"
                    },
                    "data": {
                        "type": "array",
                        "description": "Array containing OHLC bars for the requested period.",
                        "items": {
                            "$ref": "#/components/schemas/singleHistoricalBar"
                        }
                    },
                    "points": {
                        "type": "integer",
                        "description": "Count of the number of bars returned in the data array.",
                        "format": "int32"
                    },
                    "mktDataDelay": {
                        "type": "integer",
                        "description": "Number of milliseconds taken to satisfy this historical data request.",
                        "format": "int32"
                    }
                },
                "description": "Object containing the requested historical data and related metadata."
            },
            "iserverScannerParams": {
                "type": "object",
                "properties": {
                    "scan_type_list": {
                        "type": "array",
                        "description": "Contains all values used as the scanner “type” in the request.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string",
                                    "description": "Human readable name for the scanner “type”"
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Value used for the market scanner request."
                                },
                                "instruments": {
                                    "type": "array",
                                    "description": "Returns all instruments the scanner type can be used with."
                                }
                            }
                        }
                    },
                    "instrument_list": {
                        "type": "array",
                        "description": "Contains all values relevant to the scanner “instrument” request field.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string",
                                    "description": "Human readable representation of the instrument type."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Value used for the market scanner request."
                                },
                                "filters": {
                                    "type": "array",
                                    "description": "Returns an array of all filters uniquely avaliable to that instrument type."
                                }
                            }
                        }
                    },
                    "filter_list": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "group": {
                                    "type": "string",
                                    "description": "Returns the group of filters the request is affiliated with."
                                },
                                "display_name": {
                                    "type": "string",
                                    "description": "Returns the human-readable identifier for the filter."
                                },
                                "code": {
                                    "type": "string",
                                    "description": "Value used for the market scanner request."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Returns the type of value to be used in the request. This can indicate a range based value, or if it should be a single value."
                                },
                                "combo_values": {
                                    "type": "array",
                                    "description": "combo values when type equals to combo",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "default": {
                                                "type": "boolean"
                                            },
                                            "vendor": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "location_tree": {
                        "type": "array",
                        "description": "Contains all values relevant to the location field of the market scanner request.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string",
                                    "description": "Returns the overarching instrument type to designate the location."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Returns the code value of the market scanner instrument type value."
                                },
                                "locations": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "display_name": {
                                                "type": "string",
                                                "description": "Returns the human-readable value of the market scanner’s location value."
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "Returns the code value of the market scanner location value."
                                            },
                                            "locations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "display_name": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "iserverScannerRunRequest": {
                "type": "object",
                "properties": {
                    "instrument": {
                        "type": "string",
                        "description": "Instrument type as the target of the market scanner request. Found in the “instrument_list” section of the /iserver/scanner/params response."
                    },
                    "type": {
                        "type": "string",
                        "description": "Scanner value the market scanner is sorted by. Based on the “scan_type_list” section of the /iserver/scanner/params response."
                    },
                    "location": {
                        "type": "string",
                        "description": "Location value the market scanner is searching through. Based on the “location_tree” section of the /iserver/scanner/params response."
                    },
                    "filter": {
                        "type": "array",
                        "description": "Contains any additional filters that should apply to response.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "Code value of the filter. Based on the “code” value within the “filter_list” section of the /iserver/scanner/params response."
                                },
                                "value": {
                                    "description": "Value corresponding to the input for “code”.",
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        {
                                            "type": "boolean"
                                        },
                                        {
                                            "type": "number"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "iserverScannerRunResponse": {
                "type": "object",
                "properties": {
                    "contracts": {
                        "type": "array",
                        "description": "Contains contracts related to the market scanner request.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "server_id": {
                                    "type": "string",
                                    "description": "Contract’s index in relation to the market scanner type’s sorting priority."
                                },
                                "column_name": {
                                    "type": "string",
                                    "description": "Always returned for the first contract."
                                },
                                "symbol": {
                                    "type": "string",
                                    "description": "Returns the contract’s ticker symbol."
                                },
                                "conidex": {
                                    "type": "string",
                                    "description": "Returns the contract ID of the contract."
                                },
                                "con_id": {
                                    "type": "integer",
                                    "description": "Returns the contract ID of the contract.",
                                    "format": "int32"
                                },
                                "available_chart_periods": {
                                    "type": "string",
                                    "description": "Internal Use Only"
                                },
                                "company_name": {
                                    "type": "string",
                                    "description": "Returns the company long name."
                                },
                                "contract_description_1": {
                                    "type": "string",
                                    "description": "For derivatives like Futures, the local symbol of the contract will be returned."
                                },
                                "listing_exchange": {
                                    "type": "string",
                                    "description": "Returns the primary listing exchange of the contract."
                                },
                                "sec_type": {
                                    "type": "string",
                                    "description": "Returns the security type of the contract."
                                }
                            }
                        }
                    },
                    "scan_data_column_name": {
                        "type": "string",
                        "description": "Internal Use Only"
                    }
                }
            },
            "ledger": {
                "type": "object",
                "additionalProperties": {
                    "type": "object",
                    "properties": {
                        "acctcode": {
                            "type": "string",
                            "description": "The Account ID of the requested account."
                        },
                        "cashbalance": {
                            "type": "number",
                            "description": "The given account's cash balance in this currency."
                        },
                        "cashbalancefxsegment": {
                            "type": "number",
                            "description": "The given account's cash balance in its dedicated forex segment in this currency, if applicable."
                        },
                        "commoditymarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's commodity positions in this currency."
                        },
                        "corporatebondsmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's corporate bond positions in this currency."
                        },
                        "currency": {
                            "type": "string",
                            "description": "Three-letter name of the currency reflected by this object, or 'BASE' for the account's base currency."
                        },
                        "dividends": {
                            "type": "number",
                            "description": "The given account's receivable (not yet disbursed) dividend balance in this currency."
                        },
                        "exchangerate": {
                            "type": "integer",
                            "description": "Exchange rate of this currency relative to the account's base currency.",
                            "format": "int32"
                        },
                        "funds": {
                            "type": "number",
                            "description": "The value of the given account's mutual fund holdings in this currency."
                        },
                        "futuremarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's futures positions in this currency."
                        },
                        "futureoptionmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's futures options positions in this currency."
                        },
                        "futuresonlypnl": {
                            "type": "number",
                            "description": "PnL of the given account's futures positions in this currency."
                        },
                        "interest": {
                            "type": "number",
                            "description": "The given account's receivable interest balance in this currency."
                        },
                        "issueroptionsmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's issuer options positions in this currency."
                        },
                        "key": {
                            "type": "string",
                            "description": "Identifies the nature of data. Always takes values 'LedgerList'.",
                            "enum": [
                                "LedgerList"
                            ]
                        },
                        "moneyfunds": {
                            "type": "number",
                            "description": "The value of the given account's money market fund holdings in this currency."
                        },
                        "netliquidationvalue": {
                            "type": "number",
                            "description": "The given account's net liquidation value of positions in this currency."
                        },
                        "realizedpnl": {
                            "type": "number",
                            "description": "The given account's realized PnL for positions in this currency."
                        },
                        "secondkey": {
                            "type": "string",
                            "description": "Additional identifier of the currency reflected in this object. Always matches 'currency' field."
                        },
                        "sessionid": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "settledcash": {
                            "type": "number",
                            "description": "The given account's settled cash balance in this currency."
                        },
                        "severity": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "stockmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's stock positions in this currency."
                        },
                        "stockoptionmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's stock options positions in this currency."
                        },
                        "tbillsmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's treasury bill positions in this currency."
                        },
                        "tbondsmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's treasury bond positions in this currency."
                        },
                        "timestamp": {
                            "type": "integer",
                            "description": "Timestamp of retrievable of this account ledger data.",
                            "format": "int32"
                        },
                        "unrealizedpnl": {
                            "type": "number",
                            "description": "The given account's unrealied PnL for positions in this currency."
                        },
                        "warrantsmarketvalue": {
                            "type": "number",
                            "description": "Market value of the given account's warrant positions in this currency."
                        }
                    },
                    "description": "Object describing the account's balances in its base currency, by asset class and account segments. Will be duplicated by another object in response bearing the currency's name."
                },
                "description": "Contains objects reflecting all currencies in which the account's positions trade."
            },
            "liveOrdersResponse": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "description": "Array of orders that are currently working, or were filled/cancelled in the current brokerage session.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "acct": {
                                    "type": "string",
                                    "description": "IB account ID to which the order was placed."
                                },
                                "exchange": {
                                    "type": "string",
                                    "description": "Routing destination of the order ticket."
                                },
                                "conidex": {
                                    "type": "string",
                                    "description": "Contract ID and routing destination in format 123456@EXCHANGE."
                                },
                                "conid": {
                                    "type": "string",
                                    "description": "Contract ID of the order's instrument."
                                },
                                "account": {
                                    "type": "string",
                                    "description": "IB account ID to which the order was placed."
                                },
                                "orderId": {
                                    "type": "integer",
                                    "description": "IB-assigned order identifier.",
                                    "format": "int32"
                                },
                                "cashCcy": {
                                    "type": "string",
                                    "description": "Currency of the order ticket's Cash Quantity, if applicable."
                                },
                                "sizeAndFills": {
                                    "type": "string",
                                    "description": "Human-readable shorthand rendering of the filled and total quantities of the order."
                                },
                                "orderDesc": {
                                    "type": "string",
                                    "description": "Human-readable shorthand rendering of the order ticket."
                                },
                                "description1": {
                                    "type": "string",
                                    "description": "Descriptive text, or additional details that specific the instrument."
                                },
                                "ticker": {
                                    "type": "string",
                                    "description": "Symbol or base product code of the instrument."
                                },
                                "secType": {
                                    "type": "string",
                                    "description": "Asset class of the instrument."
                                },
                                "listingExchange": {
                                    "type": "string",
                                    "description": "Exchange on which the instrument is listed."
                                },
                                "remainingQuantity": {
                                    "type": "string",
                                    "description": "Quantity remaining to be filled in units of the instrument."
                                },
                                "filledQuantity": {
                                    "type": "string",
                                    "description": "Quantity filled in units of the instrument."
                                },
                                "totalSize": {
                                    "type": "string",
                                    "description": "Total size of an order in the instrument's units."
                                },
                                "totalCashSize": {
                                    "type": "string",
                                    "description": "Total size of a cash quantity order."
                                },
                                "companyName": {
                                    "type": "string",
                                    "description": "Name of business associated with instrument, or otherwise description of instrument."
                                },
                                "status": {
                                    "type": "string",
                                    "description": "Status of the order ticket.",
                                    "enum": [
                                        "Inactive",
                                        "PendingSubmit",
                                        "PreSubmitted",
                                        "Submitted",
                                        "Filled",
                                        "PendingCancel",
                                        "Cancelled",
                                        "WarnState"
                                    ]
                                },
                                "order_ccp_status": {
                                    "type": "string",
                                    "description": "IB internal order status."
                                },
                                "origOrderType": {
                                    "type": "string",
                                    "description": "Order type of a filled order."
                                },
                                "supportsTaxOpt": {
                                    "type": "string",
                                    "description": "Indicates whether the order is supported by IB's Tax Optimization tool.",
                                    "enum": [
                                        "0",
                                        "1"
                                    ]
                                },
                                "lastExecutionTime": {
                                    "type": "string",
                                    "description": "Time of last execution against the order in format YYMMDDhhmmss."
                                },
                                "orderType": {
                                    "type": "string",
                                    "description": "Order type of a working order ticket."
                                },
                                "bgColor": {
                                    "type": "string",
                                    "description": "Internal use. IB's UI background color in hex."
                                },
                                "fgColor": {
                                    "type": "string",
                                    "description": "Internal use. IB's UI foreground color in hex."
                                },
                                "isEventTrading": {
                                    "type": "string",
                                    "description": "Indicates whether the order ticket is an Event Trading order.",
                                    "enum": [
                                        "0",
                                        "1"
                                    ]
                                },
                                "price": {
                                    "type": "string",
                                    "description": "Price of the order, if applicable to the order type."
                                },
                                "timeInForce": {
                                    "type": "string",
                                    "description": "Time of force of the order."
                                },
                                "lastExecutionTime_r": {
                                    "type": "string",
                                    "description": "Unix timestamp of the last execution against the order."
                                },
                                "side": {
                                    "type": "string",
                                    "description": "Side of the order."
                                },
                                "avgPrice": {
                                    "type": "string",
                                    "description": "Average price of fills against the order, if any."
                                }
                            },
                            "description": "Object representing one order."
                        }
                    },
                    "snapshot": {
                        "type": "boolean",
                        "description": "Whether the response is a snapshot."
                    }
                }
            },
            "mdFields": {
                "description": "Many FYI endpoints reference a “typecode” value. The table below lists the available codes and what they correspond to.\n  * `31` - Last Price. The last price at which the contract traded. May contain one of the following prefixes: C - Previous day's closing price. H - Trading has halted.\n  * `55` - Symbol. \n  * `58` - Text. \n  * `70` - High. Current day high price\n  * `71` - Low. Current day low price\n  * `73` - Market Value. The current market value of your position in the security. Market Value is calculated with real time market data (even when not subscribed to market data).\n  * `74` - Avg Price. The average price of the position.\n  * `75` - Unrealized PnL. Unrealized profit or loss. Unrealized PnL is calculated with real time market data (even when not subscribed to market data).\n  * `76` - Formatted position. \n  * `77` - Formatted Unrealized PnL. \n  * `78` - Daily PnL. Your profit or loss of the day since prior close. Daily PnL is calculated with real time market data (even when not subscribed to market data).\n  * `79` - Realized PnL. Realized profit or loss. Realized PnL is calculated with real time market data (even when not subscribed to market data).\n  * `80` - Unrealized PnL %. Unrealized profit or loss expressed in percentage.\n  * `82` - Change. The difference between the last price and the close on the previous trading day\n  * `83` - Change %. The difference between the last price and the close on the previous trading day in percentage.\n  * `84` - Bid Price. The highest-priced bid on the contract.\n  * `85` - Ask Size. The number of contracts or shares offered at the ask price. For US stocks\n  * `86` - Ask Price. The lowest-priced offer on the contract.\n  * `87` - Volume. Volume for the day\n  * `88` - Bid Size. The number of contracts or shares bid for at the bid price. For US stocks\n  * `6004` - Exchange. \n  * `6008` - Conid. Contract identifier from IBKR's database.\n  * `6070` - SecType. The asset class of the instrument.\n  * `6072` - Months. \n  * `6073` - Regular Expiry. \n  * `6119` - Marker for market data delivery method (similar to request id). \n  * `6457` - Underlying Conid. Use /trsrv/secdef to get more information about the security. \n  * `6508` - Service Params.. \n  * `6509` - Market Data Availability. The field may contain three chars. First char defines: R = RealTime, D = Delayed, Z = Frozen, Y = Frozen Delayed, N = Not Subscribed, i - incomplete, v - VDR Exempt (Vendor Display Rule 603c). Second char defines: P = Snapshot, p = Consolidated. Third char defines: B = Book. RealTime Data is relayed back in real time without delay, market data subscription(s) are required. Delayed - Data is relayed back 15-20 min delayed. Frozen - Last recorded data at market close.  relayed back in real time. Frozen Delayed - Last recorded data at market close, relayed back delayed. Not Subscribed - User does not have the required market data subscription(s) to relay back either real time or delayed data. Snapshot - Snapshot request is available for contract. Consolidated - Market data is aggregated across multiple exchanges or venues. Book - Top of the book data is available for contract.\n  * `7051` - Company name. \n  * `7057` - Ask Exch. Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY\n  * `7058` - Last Exch. Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY\n  * `7059` - Last Size. The number of unites traded at the last price\n  * `7068` - Bid Exch. Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY\n  * `7084` - Implied Vol./Hist. Vol %. The ratio of the implied volatility over the historical volatility, expressed as a percentage.\n  * `7085` - Put/Call Interest. Put option open interest/call option open interest for the trading day.\n  * `7086` - Put/Call Volume. Put option volume/call option volume for the trading day.\n  * `7087` - Hist. Vol. %. 30-day real-time historical volatility.\n  * `7088` - Hist. Vol. Close %. Shows the historical volatility based on previous close price.\n  * `7089` - Opt. Volume. Option Volume\n  * `7094` - Conid + Exchange.\n  * `7184` - canBeTraded. If contract is a trade-able instrument. Returns 1(true) or 0(false).\n  * `7219` - Contract Description.\n  * `7220` - Contract Description.\n  * `7221` - Listing Exchange.\n  * `7280` - Industry. Displays the type of industry under which the underlying company can be categorized.\n  * `7281` - Category. Displays a more detailed level of description within the industry under which the underlying company can be categorized.\n  * `7282` - Average Volume. The average daily trading volume over 90 days.\n  * `7283` - Option Implied Vol. %. A prediction of how volatile an underlying will be in the future.At the market volatility estimated for a maturity thirty calendar days forward of the current trading day, and based on option prices from two consecutive expiration months. To query the Implied Vol. % of a specific strike refer to field 7633.\n  * `7284` - Historical volatility %. Deprecated\n  * `7285` - Put/Call Ratio.\n  * `7286` - Dividend Amount. Displays the amount of the next dividend.\n  * `7287` - Dividend Yield %. This value is the toal of the expected dividend payments over the next twelve months per share divided by the Current Price and is expressed as a percentage. For derivatives\n  * `7288` - Ex-date of the dividend.\n  * `7289` - Market Cap.\n  * `7290` - P/E.\n  * `7291` - EPS.\n  * `7292` - Cost Basis. Your current position in this security multiplied by the average price and multiplier.        \n  * `7293` - 52 Week High. The highest price for the past 52 weeks.\n  * `7294` - 52 Week Low. The lowest price for the past 52 weeks.\n  * `7295` - Open. Today's opening price.\n  * `7296` - Close. Today's closing price.\n  * `7308` - Delta. The ratio of the change in the price of the option to the corresponding change in the price of the underlying.\n  * `7309` - Gamma. The rate of change for the delta with respect to the underlying asset's price.\n  * `7310` - Theta. A measure of the rate of decline the value of an option due to the passage of time.\n  * `7311` - Vega. The amount that the price of an option changes compared to a 1% change in the volatility.\n  * `7607` - Opt. Volume Change %. Today's option volume as a percentage of the average option volume.\n  * `7633` - Implied Vol. %. The implied volatility for the specific strike of the option in percentage. To query the Option Implied Vol. % from the underlying refer to field 7283.\n  * `7635` - Mark. The mark price is\n  * `7636` - Shortable Shares. Number of shares available for shorting.\n  * `7637` - Fee Rate. Interest rate charged on borrowed shares.\n  * `7638` - Option Open Interest.\n  * `7639` - % of Mark Value. Displays the market value of the contract as a percentage of the total market value of the account. Mark Value is calculated with real time market data (even when not subscribed to market data).\n  * `7644` - Shortable. Describes the level of difficulty with which the security can be sold short.\n  * `7655` - Morningstar Rating. Displays Morningstar Rating provided value. Requires Morningstar subscription.        \n  * `7671` - Dividends. This value is the total of the expected dividend payments over the next twelve months per share.\n  * `7672` - Dividends TTM. This value is the total of the expected dividend payments over the last twelve months per share.\n  * `7674` - EMA(200). Exponential moving average (N=200).\n  * `7675` - EMA(100). Exponential moving average (N=100).\n  * `7676` - EMA(50). Exponential moving average (N=50).\n  * `7677` - EMA(20). Exponential moving average (N=20).\n  * `7678` - Price/EMA(200). Price to Exponential moving average (N=200) ratio -1\n  * `7679` - Price/EMA(100). Price to Exponential moving average (N=100) ratio -1\n  * `7724` - Price/EMA(50). Price to Exponential moving average (N=50) ratio -1\n  * `7681` - Price/EMA(20). Price to Exponential moving average (N=20) ratio -1\n  * `7682` - Change Since Open. The difference between the last price and the open price.\n  * `7683` - Upcoming Event. Shows the next major company event. Requires Wall Street Horizon subscription.\n  * `7684` - Upcoming Event Date. The date of the next major company event. Requires Wall Street Horizon subscription. \n  * `7685` - Upcoming Analyst Meeting. The date and time of the next scheduled analyst meeting. Requires Wall Street Horizon subscription.\n  * `7686` - Upcoming Earnings. The date and time of the next scheduled earnings/earnings call event. Requires Wall Street Horizon subscription.\n  * `7687` - Upcoming Misc Event. The date and time of the next shareholder meeting\n  * `7688` - Recent Analyst Meeting. The date and time of the most recent analyst meeting. Requires Wall Street Horizon subscription.\n  * `7689` - Recent Earnings. The date and time of the most recent earnings/earning call event. Requires Wall Street Horizon subscription.\n  * `7690` - Recent Misc Event. The date and time of the most recent shareholder meeting\n  * `7694` - Probability of Max Return. Customer implied probability of maximum potential gain.\n  * `7695` - Break Even. Break even points\n  * `7696` - SPX Delta. Beta Weighted Delta is calculated using the formula; Delta x dollar adjusted beta\n  * `7697` - Futures Open Interest. Total number of outstanding futures contracts\n  * `7698` - Last Yield. Implied yield of the bond if it is purchased at the current last price. Last yield is calculated using the Last price on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.\n  * `7699` - Bid Yield. Implied yield of the bond if it is purchased at the current bid price. Bid yield is calculated using the Ask on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.\n  * `7700` - Probability of Max Return. Customer implied probability of maximum potential gain.\n  * `7702` - Probability of Max Loss. Customer implied probability of maximum potential loss.\n  * `7703` - Profit Probability. Customer implied probability of any gain.\n  * `7704` - Organization Type.\n  * `7705` - Debt Class.\n  * `7706` - Ratings. Ratings issued for bond contract.\n  * `7707` - Bond State Code.\n  * `7708` - Bond Type.\n  * `7714` - Last Trading Date.\n  * `7715` - Issue Date.\n  * `7718` - Beta. Beta is against standard index.\n  * `7720` - Ask Yield. Implied yield of the bond if it is purchased at the current offer. Ask yield is calculated using the Bid on all possible call dates. It is assumed that prepayment occurs if the bond has call or put provisions and the issuer can offer a lower coupon rate based on current market rates. The yield to worst will be the lowest of the yield to maturity or yield to call (if the bond has prepayment provisions). Yield to worse may be the same as yield to maturity but never higher.\n  * `7741` - Prior Close. Yesterday's closing price\n  * `7762` - Volume Long. High precision volume for the day. For formatted volume refer to field 87.\n  * `7768` - hasTradingPermissions. if user has trading permissions for specified contract. Returns 1(true) or 0(false).\n  * `7920` - Daily PnL Raw. Your profit or loss of the day since prior close. Daily PnL is calculated with real-time market data (even when not subscribed to market data).\n  * `7921` - Cost Basis Raw. Your current position in this security multiplied by the average price and and multiplier.\n",
                "enum": [
                    "31",
                    "55",
                    "58",
                    "70",
                    "71",
                    "73",
                    "74",
                    "75",
                    "76",
                    "77",
                    "78",
                    "79",
                    "80",
                    "82",
                    "83",
                    "84",
                    "85",
                    "86",
                    "87",
                    "88",
                    "6004",
                    "6008",
                    "6070",
                    "6072",
                    "6073",
                    "6119",
                    "6457",
                    "6508",
                    "6509",
                    "7051",
                    "7057",
                    "7058",
                    "7059",
                    "7068",
                    "7084",
                    "7085",
                    "7086",
                    "7087",
                    "7088",
                    "7089",
                    "7094",
                    "7184",
                    "7219",
                    "7220",
                    "7221",
                    "7280",
                    "7281",
                    "7282",
                    "7283",
                    "7284",
                    "7285",
                    "7286",
                    "7287",
                    "7288",
                    "7289",
                    "7290",
                    "7291",
                    "7292",
                    "7293",
                    "7294",
                    "7295",
                    "7296",
                    "7308",
                    "7309",
                    "7310",
                    "7311",
                    "7607",
                    "7633",
                    "7635",
                    "7636",
                    "7637",
                    "7638",
                    "7639",
                    "7644",
                    "7655",
                    "7671",
                    "7672",
                    "7674",
                    "7675",
                    "7676",
                    "7677",
                    "7678",
                    "7679",
                    "7724",
                    "7681",
                    "7682",
                    "7683",
                    "7684",
                    "7685",
                    "7686",
                    "7687",
                    "7688",
                    "7689",
                    "7690",
                    "7694",
                    "7695",
                    "7696",
                    "7697",
                    "7698",
                    "7699",
                    "7700",
                    "7702",
                    "7703",
                    "7704",
                    "7705",
                    "7706",
                    "7707",
                    "7708",
                    "7714",
                    "7715",
                    "7718",
                    "7720",
                    "7741",
                    "7762",
                    "7768",
                    "7920",
                    "7921"
                ]
            },
            "notificationReadAcknowledge": {
                "type": "object",
                "properties": {
                    "V": {
                        "type": "integer",
                        "description": "Returns 1 to state message was acknowledged.",
                        "format": "int32"
                    },
                    "T": {
                        "type": "integer",
                        "description": "Returns the time in ms to complete the edit.",
                        "format": "int32"
                    },
                    "P": {
                        "type": "object",
                        "properties": {
                            "R": {
                                "type": "integer",
                                "description": "Returns if the message was read (1) or unread (0).",
                                "format": "int32"
                            },
                            "ID": {
                                "type": "string",
                                "description": "Returns the ID for the notification."
                            }
                        },
                        "description": "Returns details about the notification read status."
                    }
                }
            },
            "notifications": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "D": {
                            "type": "string",
                            "description": "Notification date as an epoch string."
                        },
                        "ID": {
                            "type": "string",
                            "description": "Unique way to reference the notification."
                        },
                        "FC": {
                            "type": "string",
                            "description": "FYI code, we can use it to find whether the disclaimer is accepted or not in settings"
                        },
                        "MD": {
                            "type": "string",
                            "description": "Content of notification."
                        },
                        "MS": {
                            "type": "string",
                            "description": "Title of notification."
                        },
                        "R": {
                            "type": "string",
                            "description": "Return if the notification was read or not. Value Format: 0: Disabled; 1: Enabled.\n"
                        }
                    }
                }
            },
            "orderCancelSuccess": {
                "type": "object",
                "properties": {
                    "msg": {
                        "type": "string",
                        "description": "Indicates success with value 'Request was submitted'",
                        "enum": [
                            "Request was submitted"
                        ]
                    },
                    "order_id": {
                        "type": "string",
                        "description": "IB order ID of the order ticket requested for cancellation."
                    },
                    "conid": {
                        "type": "string",
                        "description": "IB contract ID of the order ticket's instrument."
                    },
                    "account": {
                        "type": "string",
                        "description": "IB account to which the order was originally set to clear."
                    }
                },
                "description": "Acknowledges IB's acceptance of the request to cancel the order. Does not report whether the cancellation can or will ultimately be enacted."
            },
            "orderPreview": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "string",
                                "description": "Projected cost of the order, current reference price times total quantity."
                            },
                            "commission": {
                                "type": "string",
                                "description": "Projected commissions and fees associated with the order."
                            },
                            "total": {
                                "type": "string",
                                "description": "Sum of projected cost and commission values for the order."
                            }
                        },
                        "description": "Describes the projected costs associated with the order ticket."
                    },
                    "equity": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "string",
                                "description": "Current equity."
                            },
                            "change": {
                                "type": "string",
                                "description": "Difference between current and projected equity values."
                            },
                            "after": {
                                "type": "string",
                                "description": "Projected equity after execution of the order."
                            }
                        },
                        "description": "Describes the projected change to the account's equity."
                    },
                    "initial": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "string",
                                "description": "Current initial margin."
                            },
                            "change": {
                                "type": "string",
                                "description": "Difference between current and projected initial margin values."
                            },
                            "after": {
                                "type": "string",
                                "description": "Projected initial margin after execution of the order."
                            }
                        },
                        "description": "Describes the projected change to initial margin."
                    },
                    "maintenance": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "string",
                                "description": "Current maintenance margin."
                            },
                            "change": {
                                "type": "string",
                                "description": "Difference between current and projected maintenance margin values."
                            },
                            "after": {
                                "type": "string",
                                "description": "Projected maintenance margin after execution of the order."
                            }
                        },
                        "description": "Describes the projected change to maintenance margin."
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "current": {
                                "type": "string",
                                "description": "Current position in the instrument."
                            },
                            "change": {
                                "type": "string",
                                "description": "Difference between current and projected position sizes."
                            },
                            "after": {
                                "type": "string",
                                "description": "Projected position size after execution of the order."
                            }
                        },
                        "description": "Describes the projected change to the account's position in the instrument."
                    },
                    "warn": {
                        "type": "string",
                        "description": "Human-readable text of warning message, if applicable. Otherwise null."
                    },
                    "error": {
                        "type": "string",
                        "description": "Human-readable text of an error message, if applicable. Otherwise null."
                    }
                },
                "description": "Projected costs and changes to margin and equity values in the account, if the order ticket were executed in full."
            },
            "orderReplyMessage": {
                "type": "array",
                "description": "An array containing objects that each deliver the order reply messages emitted against one order ticket in the submission request's array. Indicies of the order reply message objects in this array correspond to the indicies of the order tickets in the submission request's array.",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "The replyId UUID of the order ticket's emitted order reply messages, used to confirm them and proceed."
                        },
                        "isSuppressed": {
                            "type": "boolean",
                            "description": "Internal use. Always delivers value 'false'."
                        },
                        "message": {
                            "type": "array",
                            "description": "An array containing the human-readable text of all order reply messages emitted for the order ticket.",
                            "items": {
                                "type": "string",
                                "description": "A single human-readable order reply message."
                            }
                        },
                        "messageIds": {
                            "type": "array",
                            "description": "An array containing identifiers that categorize the types of order reply messages that have been emitted. Elements of this array are ordered so that indicies match the corresponding human-readable text strings in the 'message' array.",
                            "items": {
                                "type": "string",
                                "description": "A single messageId identifier."
                            }
                        }
                    },
                    "description": "An object containing order reply messages emitted against a single order ticket."
                }
            },
            "orderStatus": {
                "type": "object",
                "properties": {
                    "sub_type": {
                        "type": "string",
                        "description": "Internal use only."
                    },
                    "request_id": {
                        "type": "string",
                        "description": "Internal use only. IB-assigned identifier for the status request."
                    },
                    "server_id": {
                        "type": "string",
                        "description": "IB-assigned meta-identifier used to associate rejected and resubmitted orders following Server Prompts."
                    },
                    "order_id": {
                        "type": "integer",
                        "description": "The IB-assigned order identifier of the order, as provided in the request path.",
                        "format": "int32"
                    },
                    "conidex": {
                        "type": "string",
                        "description": "Contract ID and routing destination in format 123456@EXCHANGE."
                    },
                    "conid": {
                        "type": "string",
                        "description": "Contract ID of the order's instrument."
                    },
                    "symbol": {
                        "type": "string",
                        "description": "Symbol of the order ticket's instrument."
                    },
                    "side": {
                        "type": "string",
                        "description": "Side of the order ticket.",
                        "enum": [
                            "BUY",
                            "SELL"
                        ]
                    },
                    "contract_description_1": {
                        "type": "string",
                        "description": "Human-readable description of the order's instrument."
                    },
                    "listing_exchange": {
                        "type": "string",
                        "description": "Primary listing exchange of the order ticket's instrument."
                    },
                    "option_acct": {
                        "type": "string",
                        "description": "Internal use only."
                    },
                    "company_name": {
                        "type": "string",
                        "description": "Name of the company or asset associated with the instrument."
                    },
                    "size": {
                        "type": "string",
                        "description": "Remaining unfilled size of the order ticket. Will reflect 0.0 if order is filled in full, cancelled, or otherwise resolved and no longer working."
                    },
                    "total_size": {
                        "type": "string",
                        "description": "The total size of the order ticket."
                    },
                    "currency": {
                        "type": "string",
                        "description": "The currency in which the instrument trades and executions are conducted."
                    },
                    "account": {
                        "type": "string",
                        "description": "The account receiving executions against this order ticket."
                    },
                    "order_type": {
                        "type": "string",
                        "description": "The order's  IB order type."
                    },
                    "cum_fill": {
                        "type": "string",
                        "description": "Cumulative filled quantity of the instrument against the order ticket."
                    },
                    "order_status": {
                        "type": "string",
                        "description": "Status of the order ticket.",
                        "enum": [
                            "Inactive",
                            "PendingSubmit",
                            "PreSubmitted",
                            "Submitted",
                            "Filled",
                            "PendingCancel",
                            "Cancelled",
                            "WarnState"
                        ]
                    },
                    "order_ccp_status": {
                        "type": "string",
                        "description": "IB internal order status."
                    },
                    "order_status_description": {
                        "type": "string",
                        "description": "Human-readable rendering of the order's status meant for presentation in UI."
                    },
                    "tif": {
                        "type": "string",
                        "description": "Time in force of the order ticket.",
                        "enum": [
                            "DAY",
                            "IOC",
                            "GTC",
                            "OPG",
                            "PAX"
                        ]
                    },
                    "fgColor": {
                        "type": "string",
                        "description": "Internal use. IB's UI foreground color in hex."
                    },
                    "bgColor": {
                        "type": "string",
                        "description": "Internal use. IB's UI background color in hex."
                    },
                    "order_not_editable": {
                        "type": "boolean",
                        "description": "Indicates whether the order ticket can be modified."
                    },
                    "editable_fields": {
                        "type": "string",
                        "description": "Indicates which fields of the order ticket can be modified currently."
                    },
                    "cannot_cancel_order": {
                        "type": "boolean",
                        "description": "Indicates whether the order ticket can be cancelled."
                    },
                    "deactivate_order": {
                        "type": "boolean",
                        "description": "Indicates whether the order ticket can be deactivated."
                    },
                    "sec_type": {
                        "type": "string",
                        "description": "IB asset class identifier.",
                        "enum": [
                            "STK",
                            "OPT",
                            "FUT",
                            "FOP",
                            "CASH",
                            "CRYPTO",
                            "BOND",
                            "WAR",
                            "FUND"
                        ]
                    },
                    "available_chart_periods": {
                        "type": "string",
                        "description": "Internal use. Indicates chart periods available for the instrument."
                    },
                    "order_description": {
                        "type": "string",
                        "description": "Human-readable description of the status or current result of the order ticket, meant for UI presentation."
                    },
                    "order_description_with_contract": {
                        "type": "string",
                        "description": "Human-readable description of the status or current result of the order ticket, meant for UI presentation. Includes instrument name."
                    },
                    "alert_active": {
                        "type": "integer",
                        "description": "Indicates that an alert is active for the order ticket.",
                        "format": "int32"
                    },
                    "child_order_type": {
                        "type": "string",
                        "description": "Indicates if the order ticket is hedged, and if so, in what way. 0 = No hedge, A = Attached child hedge order, B = Beta/portfolio hedge",
                        "enum": [
                            "0",
                            "A",
                            "B"
                        ]
                    },
                    "order_clearing_account": {
                        "type": "string",
                        "description": "The IB account to which the order ticket clears."
                    },
                    "size_and_fills": {
                        "type": "string",
                        "description": "A string reflecting the cumulative fills and total size of the order."
                    },
                    "exit_strategy_display_price": {
                        "type": "string",
                        "description": "Internal use. The UI-displayed price associated with a Client Portal exist strategy."
                    },
                    "exit_strategy_chart_description": {
                        "type": "string",
                        "description": "Internal use. A string describing an active Client Portal exit strategy, or the result of its execution."
                    },
                    "average_price": {
                        "type": "string",
                        "description": "Average price of fills against the order, if any."
                    },
                    "exit_strategy_tool_availability": {
                        "type": "string",
                        "description": "Internal use. Indicates the availability of Client Portal exit strategy tool for the order."
                    },
                    "allowed_duplicate_opposite": {
                        "type": "boolean",
                        "description": "Indicates whether an identical order on the opposite side can be placed."
                    },
                    "order_time": {
                        "type": "string",
                        "description": "Time of the order's submission in format YYMMDDhhmmss."
                    }
                },
                "description": "Object containing information about the status of an order ticket."
            },
            "orderSubmitError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Message indicating that order submission was not successful."
                    }
                },
                "description": "Indicates that the order reply message or submission was not accepted."
            },
            "orderSubmitSuccess": {
                "type": "array",
                "description": "A successful submission of one or more order tickets.",
                "items": {
                    "type": "object",
                    "properties": {
                        "order_id": {
                            "type": "string",
                            "description": "The order ID assigned to your order ticket by IB. Contains only numerals."
                        },
                        "order_status": {
                            "type": "string",
                            "description": "Status describing where the order stands in its lifecycle."
                        },
                        "encrypt_message": {
                            "type": "string",
                            "description": "Internal use only."
                        }
                    },
                    "description": "Result of successful submission of one order ticket."
                }
            },
            "ordersSubmissionRequest": {
                "type": "array",
                "description": "Array of order tickets objects. Only one order ticket object may be submitted per request, unless constructing a bracket.",
                "items": {
                    "$ref": "#/components/schemas/singleOrderSubmissionRequest"
                }
            },
            "performanceResponse": {
                "type": "object",
                "properties": {
                    "currencyType": {
                        "type": "string",
                        "description": "Confirms if the currency type. If trading exclusively in your base currency, “base” will be returned."
                    },
                    "rc": {
                        "type": "integer",
                        "description": "Returns the data identifier (Internal Use Only).",
                        "format": "int32"
                    },
                    "nav": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "description": "Contains the affiliated ‘nav’ data.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "idType": {
                                            "type": "string",
                                            "description": "Returns how identifiers are determined."
                                        },
                                        "navs": {
                                            "type": "array",
                                            "description": "Returns sequential data points corresponding to the net asset value between the \"start\" and \"end\" days."
                                        },
                                        "start": {
                                            "type": "string",
                                            "description": "Returns the first available date for data."
                                        },
                                        "end": {
                                            "type": "string",
                                            "description": "Returns the end of the available frequency."
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Returns the account identifier."
                                        },
                                        "startNAV": {
                                            "type": "object",
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "description": "Returns the starting date for the request."
                                                },
                                                "val": {
                                                    "type": "integer",
                                                    "description": "Returns the Net Asset Value of the account.",
                                                    "format": "int32"
                                                }
                                            },
                                            "description": "Returns the intiial NAV available."
                                        },
                                        "baseCurrency": {
                                            "type": "string",
                                            "description": "Returns the base currency used in the account."
                                        }
                                    }
                                }
                            },
                            "freq": {
                                "type": "string",
                                "description": "Displays the values corresponding to a given frequency."
                            },
                            "dates": {
                                "type": "array",
                                "description": "Returns the array of dates formatted as strings corresponding to your frequency, the length should be same as the length of returns inside data."
                            }
                        },
                        "description": "Net asset value data for the account or consolidated accounts. NAV data is not applicable to benchmarks."
                    },
                    "nd": {
                        "type": "integer",
                        "description": "Returns the total data points.",
                        "format": "int32"
                    },
                    "cps": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "description": "Returns the array of cps data available.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "idType": {
                                            "type": "string",
                                            "description": "Returns the key value of the request."
                                        },
                                        "start": {
                                            "type": "string",
                                            "description": "Returns the starting value of the value range."
                                        },
                                        "end": {
                                            "type": "string",
                                            "description": "Returns the ending value of the value range."
                                        },
                                        "returns": {
                                            "type": "array",
                                            "description": "Returns all cps values in order between the start and end times."
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Returns the account identifier."
                                        },
                                        "baseCurrency": {
                                            "type": "string",
                                            "description": "Returns the base curency for the account."
                                        }
                                    }
                                }
                            },
                            "freq": {
                                "type": "string",
                                "description": "Returns the determining frequency of the data range."
                            },
                            "dates": {
                                "type": "array",
                                "description": "Returns the dates corresponding to the frequency of data."
                            }
                        },
                        "description": "Returns the object containing the Cumulative performance data."
                    },
                    "tpps": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "description": "Object containing all data about tpps.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "idType": {
                                            "type": "string",
                                            "description": "Returns the key value of the request."
                                        },
                                        "start": {
                                            "type": "string",
                                            "description": "Returns the starting value of the value range."
                                        },
                                        "end": {
                                            "type": "string",
                                            "description": "Returns the ending value of the value range."
                                        },
                                        "returns": {
                                            "type": "array",
                                            "description": "Returns all cps values in order between the start and end times."
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Returns the account identifier."
                                        },
                                        "baseCurrency": {
                                            "type": "string",
                                            "description": "Returns the base curency for the account."
                                        }
                                    }
                                }
                            },
                            "freq": {
                                "type": "string",
                                "description": "Returns the determining frequency of the data range."
                            },
                            "dates": {
                                "type": "array",
                                "description": "Returns the dates corresponding to the frequency of data."
                            }
                        },
                        "description": "Returns the time period performance data."
                    },
                    "id": {
                        "type": "string",
                        "description": "Returns the request identifier, getPerformanceData."
                    },
                    "included": {
                        "type": "array",
                        "description": "Returns an array containing accounts reviewed."
                    },
                    "pm": {
                        "type": "string",
                        "description": "Portfolio Measure. Used to indicate TWR or MWR values returned."
                    }
                }
            },
            "pnlPartitionedResponse": {
                "type": "object",
                "properties": {
                    "upnl": {
                        "type": "object",
                        "properties": {
                            "U1234567.Core": {
                                "type": "object",
                                "properties": {
                                    "rowType": {
                                        "type": "integer",
                                        "description": "Returns the positional value of the returned account. Always returns 1 for individual accounts.",
                                        "format": "int32"
                                    },
                                    "dpl": {
                                        "type": "integer",
                                        "description": "Daily PnL for the specified account profile.",
                                        "format": "int32"
                                    },
                                    "nl": {
                                        "type": "integer",
                                        "description": "Net Liquidity for the specified account profile.",
                                        "format": "int32"
                                    },
                                    "upl": {
                                        "type": "integer",
                                        "description": "Unrealized PnL for the specified account profile.",
                                        "format": "int32"
                                    },
                                    "el": {
                                        "type": "integer",
                                        "description": "Excess Liquidity for the specified account profile.",
                                        "format": "int32"
                                    },
                                    "mv": {
                                        "type": "integer",
                                        "description": "Margin value for the specified account profile.",
                                        "format": "int32"
                                    }
                                },
                                "description": "The account or model's Profit and Loss."
                            }
                        },
                        "description": "Refers to the U accounts PnL. This does reference Realized Profit and Loss."
                    }
                }
            },
            "portfolioAllocations": {
                "type": "object",
                "properties": {
                    "assetClass": {
                        "type": "object",
                        "properties": {
                            "long": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "number",
                                    "description": "Value of long position in account for specific asset class."
                                },
                                "description": "Object containing value of long positions in the account aggregated by asset class."
                            },
                            "short": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "number",
                                    "description": "Value of short positions in account for specfic asset class."
                                },
                                "description": "Object containing value of short positions in the account aggregated by asset class."
                            }
                        },
                        "description": "Object containing values of positions sorted by long/short and asset class."
                    },
                    "group": {
                        "type": "object",
                        "properties": {
                            "long": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "number",
                                    "description": "Value of long positions in account for specfic Sector Group."
                                },
                                "description": "Object containing value of long positions in the account aggregated by Sector Group."
                            },
                            "short": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "number",
                                    "description": "Value of short positions in account for specfic Sector Group."
                                },
                                "description": "Object containing value of short positions in the account aggregated by Sector Group."
                            }
                        },
                        "description": "Object containing values of positions sorted by long/short and Sector Group."
                    },
                    "sector": {
                        "type": "object",
                        "properties": {
                            "long": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "number",
                                    "description": "Value of long positions in account for specfic Sector."
                                },
                                "description": "Object containing value of long positions in the account aggregated by Sector."
                            },
                            "short": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "number",
                                    "description": "Value of short positions in account for specfic Sector."
                                },
                                "description": "Object containing value of short positions in the account aggregated by Sector."
                            }
                        },
                        "description": "Object containing values of positions sorted by long/short and Sector."
                    }
                }
            },
            "portfolioSummary": {
                "type": "object",
                "properties": {
                    "accountcode": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "The Account ID of the requested account. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accountready": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indicates whether the account is fully open and tradable. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accounttype": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Identifies the type of client with which the account is associated, such as an individual or LLC. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accruedcash": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Amount of cash accrued (not yet disbursed) for all segments in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accruedcash-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Amount of cash accrued (not yet disbursed) for the commodities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accruedcash-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Amount of cash accrued (not yet disbursed) for the securities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accrueddividend": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Amount of dividends accrued (not yet disbursed) for all segments in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accrueddividend-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Amount of dividends accrued (not yet disbursed) for the commodities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "accrueddividend-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Amount of dividends accrued (not yet disbursed) for the securities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availablefunds": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Available funds (ELV minus Initial Margin) for all segments in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availablefunds-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Available funds (ELV minus Initial Margin) for the commodities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availablefunds-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Available funds (ELV minus Initial Margin) for the securities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availabletotrade": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Funds available for trading (ELV minus Initial Margin) for all segments in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availabletotrade-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Funds available for trading (ELV minus Initial Margin) for the commodities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availabletotrade-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Funds available for trading (ELV minus Initial Margin) for the securities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availabletowithdraw": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Funds available for withdrawal for all segments in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availabletowithdraw-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Funds available for withdrawal for the commodities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "availabletowithdraw-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Funds available for withdrawal for the securities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "billable": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Billable commissions for all segments in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "billable-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Billable commissions for the commodities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "billable-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Billable commissions for the securities segment in the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "buyingpower": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Buying power (maximum value of securities that can be bought without adding funds) for the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "columnprio-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "columnprio-c"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "columnprio-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "columnprio-s"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "cushion": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Margin cushion as a decimal ratio, (ELV-Maintenance)/ELV. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "daytradesremaining": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Number of day trades currently still available for 4-day pattern day trader period. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "daytradesremainingt+1": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Number of day trades available tomorrow for 4-day pattern day trader period. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "daytradesremainingt+2": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Number of day trades available in two days for 4-day pattern day trader period. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "daytradesremainingt+3": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Number of day trades available in three days for 4-day pattern day trader period. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "daytradesremainingt+4": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Number of day trades available in four days for 4-day pattern day trader period. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "daytradingstatus-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "daytradingstatus-s"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "depositoncredithold": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indicates whether a deposit is on credit hold. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "equitywithloanvalue": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Equity with Loan Value for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "equitywithloanvalue-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Equity with Loan Value for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "equitywithloanvalue-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Equity with Loan Value for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "excessliquidity": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Excess liquidity (ELV minus Maintenance Margin) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "excessliquidity-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Excess liquidity (ELV minus Maintenance Margin) for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "excessliquidity-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Excess liquidity (ELV minus Maintenance Margin) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullavailablefunds": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full available funds for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullavailablefunds-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full available funds (NLV minus Initial Margin) for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullavailablefunds-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full available funds (ELV minus Initial Margin) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullexcessliquidity": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full excess liquidity (ELV minus Maintenance Margin) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullexcessliquidity-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full excess liquidity (ELV minus Maintenance Margin) for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullexcessliquidity-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full excess liquidity (ELV minus Maintenance Margin) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullinitmarginreq": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full Initial Margin requirement for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullinitmarginreq-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full Initial Margin requirement for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullinitmarginreq-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full Initial Margin requirement for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullmaintmarginreq": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full Maintenance Margin requirement for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullmaintmarginreq-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full Maintenance Margin requirement for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "fullmaintmarginreq-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Full Maintenance Margin requirement for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "grosspositionvalue": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Gross Position Value (sum of Long and Short position values for stocks and options) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "grosspositionvalue-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "grosspositionvalue-s"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "guarantee": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "For accounts that clear away, value of Guarantee for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "guarantee-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "For accounts that clear away, value of Guarantee for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "guarantee-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "For accounts that clear away, value of Guarantee for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "highestseverity": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "highestseverity"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "indianstockhaircut": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indian Stock Haircut value for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "indianstockhaircut-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indian Stock Haircut value for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "indianstockhaircut-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indian Stock Haircut value for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "initmarginreq": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Initial Margin requirement for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "initmarginreq-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Initial Margin requirement for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "initmarginreq-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Initial Margin requirement for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "leverage-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Leverage ratio (GPV/NLV) of the securities segment of the account. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadavailablefunds": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Available Funds for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadavailablefunds-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Available Funds for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadavailablefunds-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Available Funds for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadexcessliquidity": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Excess Liquidity for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadexcessliquidity-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Excess Liquidity for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadexcessliquidity-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Excess Liquidity for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadinitmarginreq": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Intial Margin requirement (as of next margin period) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadinitmarginreq-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Intial Margin requirement (as of next margin period) for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadinitmarginreq-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Intial Margin requirement (as of next margin period) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadmaintmarginreq": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Maintenance Margin requirement (as of next margin period) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadmaintmarginreq-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Maintenance Margin requirement (as of next margin period) for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadmaintmarginreq-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Look-ahead Maintenance Margin requirement (as of next margin period) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "lookaheadnextchange": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Unix epoch timestamp in seconds of start of next margin period. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "maintmarginreq": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Maintenance Margin requirement for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "maintmarginreq-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Maintenance Margin requirement for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "maintmarginreq-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Maintenance Margin requirement for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "netliquidation": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Net Liquidation Value (NLV) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "netliquidation-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Net Liquidation Value (sum of values of cash and commodities options) for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "netliquidation-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Net Liquidation Value (sum of values of cash, stocks, securities options, bonds) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "netliquidationuncertainty": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Uncertainty of Net Liquidation Value associated with after-hours price changes. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "nlvandmargininreview": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indicates whether the NLV and/or margin values for the account are in review. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "pasharesvalue": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Personal Account shares value for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "pasharesvalue-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Personal Account shares value for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "pasharesvalue-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Personal Account shares value for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "physicalcertificatevalue": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Physical Certificate value for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "physicalcertificatevalue-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Physical Certificate value for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "physicalcertificatevalue-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Physical Certificate value for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "postexpirationexcess": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Projected at-expiration Excess Liquidity for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "postexpirationexcess-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Projected at-expiration Excess Liquidity for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "postexpirationexcess-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Projected at-expiration Excess Liquidity for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "postexpirationmargin": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Projected at-expiration margin requirement for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "postexpirationmargin-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Projected at-expiration margin requirement for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "postexpirationmargin-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Projected at-expiration margin requirement for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "previousdayequitywithloanvalue": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Previous day's Equity with Loan Value (as of 16:00 US Eastern) for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "previousdayequitywithloanvalue-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Previous day's Equity with Loan Value (as of 16:00 US Eastern) for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "regtequity": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Value of equity computed under Reg-T rules for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "regtequity-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Value of equity computed under Reg-T rules for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "regtmargin": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Margin computed under Reg-T rules for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "regtmargin-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Margin computed under Reg-T rules for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "segmenttitle-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Human-readable title of the commodities account segment to which the '-c' postfix character refers. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "segmenttitle-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Human-readable title of the securities account segment to which the '-s' postfix character refers. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "sma": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Value of the Reg-T Special Memoradum Account for all account segments, reflecting credit extended when the market value of the account's positions increases. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "sma-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Value of the Reg-T Special Memoradum Account for the securities account segment, reflecting credit extended when the market value of the account's positions increases. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "totalcashvalue": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Total cash value for all segments of the account (cash balance plus Futures PnL). (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "totalcashvalue-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Cash value of Futures PnL for the commodities account segment. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "totalcashvalue-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Cash balance in the securities account segment. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "totaldebitcardpendingcharges": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Total pending debit card charges for all segments of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "totaldebitcardpendingcharges-c": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Total pending debit card charges for the commodities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "totaldebitcardpendingcharges-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Total pending debit card charges for the securities segment of the account. (amount)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "tradingtype-s": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Identifier used internally to reflect the trading capabilities of the account, with respect to asset classes. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    },
                    "whatifpmenabled": {
                        "allOf": [
                            {
                                "type": "object",
                                "description": "Indicates whether 'whatif' order preview functionality is enabled for a Portfolio-Margined account. (value)"
                            },
                            {
                                "$ref": "#/components/schemas/portfolioSummaryValue"
                            }
                        ]
                    }
                }
            },
            "portfolioSummaryValue": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "description": "Numerical data for the associated key."
                    },
                    "currency": {
                        "type": "number",
                        "description": "The currency in which the value of the 'amount' field is denominated."
                    },
                    "isNull": {
                        "type": "boolean",
                        "description": "Indicates whether the associated key's value does not exist, as opposed to a value of zero."
                    },
                    "severity": {
                        "type": "integer",
                        "description": "severity",
                        "format": "int32"
                    },
                    "timestamp": {
                        "type": "integer",
                        "description": "Unix epoch timestamp of returned data in milliseconds.",
                        "format": "int32"
                    },
                    "value": {
                        "type": "string",
                        "description": "String and boolean (non-numerical) data for the associated key."
                    }
                }
            },
            "presets": {
                "properties": {
                    "group_auto_close_positions": {
                        "type": "boolean",
                        "description": "Determines if allocation groups should prioritize closing positions over equal distribution."
                    },
                    "default_method_for_all": {
                        "description": "Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified. IB-computed allocation methods:\n  * `A` - Available Equity\n  * `E` - Equal\n  * `N` - Net Liquidation Value\n\nUser-specified allocation methods:\n  * `C` - Cash Quantity\n  * `P` - Percentage\n  * `R` - Ratios\n  * `S` - Shares\n",
                        "enum": [
                            "AvailableEquity",
                            "E",
                            "N",
                            "C",
                            "P",
                            "R",
                            "S"
                        ]
                    },
                    "profiles_auto_close_positions": {
                        "type": "boolean",
                        "description": "Determines if allocation profiles should prioritize closing positions over equal distribution."
                    },
                    "strict_credit_check": {
                        "type": "boolean",
                        "description": "Determines if the system should always check user credit before beginning the order process every time, or only at the time of order placement and execution."
                    },
                    "group_proportional_allocation": {
                        "type": "boolean",
                        "description": "Determines if the system should keep allocation groups proportional for scaling."
                    }
                }
            },
            "regsnapshotData": {
                "type": "object",
                "properties": {
                    "conid": {
                        "type": "integer",
                        "description": "IB contract ID.",
                        "format": "int32"
                    },
                    "conidEx": {
                        "type": "string",
                        "description": "Contract ID and routing destination in format 123456@EXCHANGE."
                    },
                    "sizeMinTick": {
                        "type": "number",
                        "description": "Internal use. Minimum size display increment."
                    },
                    "BboExchange": {
                        "type": "string",
                        "description": "Internal use. Exchange map code."
                    },
                    "HasDelayed": {
                        "type": "boolean",
                        "description": "Indicates whether delayed data is available."
                    },
                    "84": {
                        "type": "string",
                        "description": "Bid price."
                    },
                    "86": {
                        "type": "string",
                        "description": "Ask price."
                    },
                    "88": {
                        "type": "integer",
                        "description": "Bid size in round lots (100 shares).",
                        "format": "int32"
                    },
                    "85": {
                        "type": "integer",
                        "description": "Ask size in round lots (100 shares).",
                        "format": "int32"
                    },
                    "BestBidExch": {
                        "type": "integer",
                        "description": "Internal use. Equivalent binary encoding of field 7068.",
                        "format": "int32"
                    },
                    "BestAskExch": {
                        "type": "integer",
                        "description": "Internal use. Equivalent binary encoding of field 7057.",
                        "format": "int32"
                    },
                    "31": {
                        "type": "string",
                        "description": "Last traded price."
                    },
                    "7059": {
                        "type": "string",
                        "description": "Last traded size in round lots (100 shares)."
                    },
                    "LastExch": {
                        "type": "integer",
                        "description": "Internal use. Equivalent binary encoding of field 7058.",
                        "format": "int32"
                    },
                    "7057": {
                        "type": "string",
                        "description": "Best ask exchanges(s). String of single, capital-letter MCOIDs."
                    },
                    "7068": {
                        "type": "string",
                        "description": "Best bid exchange(s). String of single, capital-letter MCOIDs."
                    },
                    "7058": {
                        "type": "string",
                        "description": "Exchange of last trade. A single, capital-letter MCOID."
                    }
                },
                "description": "Object containing regulatory snapshot data."
            },
            "secDefInfoResponse": {
                "properties": {
                    "conid": {
                        "type": "integer",
                        "description": "Contract Identifier of the given contract.",
                        "format": "int32"
                    },
                    "ticker": {
                        "type": "string",
                        "description": "Ticker symbol for the given contract"
                    },
                    "secType": {
                        "type": "string",
                        "description": "Security type for the given contract."
                    },
                    "listingExchange": {
                        "type": "string",
                        "description": "Primary listing exchange for the given contract."
                    },
                    "exchange": {
                        "type": "string",
                        "description": "Exchange requesting data for."
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Name of the company for the given contract."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Traded currency allowed for the given contract."
                    },
                    "validExchanges": {
                        "type": "string",
                        "description": "Series of all valid exchanges the contract can be traded on in a single comma-separated string."
                    },
                    "priceRendering": {
                        "nullable": true
                    },
                    "maturityDate": {
                        "type": "string",
                        "description": "Date of expiration for the given contract.",
                        "nullable": true
                    },
                    "right": {
                        "type": "string",
                        "description": "Set the right for the given contract. * `C` - for Call options. * `P` - for Put options.\n",
                        "enum": [
                            "P",
                            "C"
                        ]
                    },
                    "strike": {
                        "type": "number",
                        "description": "Returns the given strike value for the given contract."
                    }
                }
            },
            "secdefSearchResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "bondid": {
                            "type": "integer",
                            "description": "applicable for bonds",
                            "format": "int32"
                        },
                        "conid": {
                            "type": "string",
                            "description": "Contract identifier for the unique contract."
                        },
                        "companyHeader": {
                            "type": "string",
                            "description": "Company Name - Exchange"
                        },
                        "companyName": {
                            "type": "string",
                            "description": "Formal name of the company."
                        },
                        "symbol": {
                            "type": "string",
                            "description": "Underlying ticker symbol."
                        },
                        "description": {
                            "type": "string",
                            "description": "Primary exchange of the contract"
                        },
                        "restricted": {
                            "type": "boolean",
                            "description": "Returns if the contract is available for trading.",
                            "nullable": true
                        },
                        "fop": {
                            "type": "string",
                            "description": "Returns a string of dates, separated by semicolons.",
                            "nullable": true
                        },
                        "opt": {
                            "type": "string",
                            "description": "Returns a string of dates, separated by semicolons.",
                            "nullable": true
                        },
                        "war": {
                            "type": "string",
                            "description": "Returns a string of dates, separated by semicolons.",
                            "nullable": true
                        },
                        "sections": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "secType": {
                                        "type": "string"
                                    },
                                    "months": {
                                        "type": "string",
                                        "description": "semicolon separated list of months"
                                    },
                                    "exchange": {
                                        "type": "string",
                                        "description": "semicolon separated list of exchanges"
                                    }
                                }
                            }
                        },
                        "issuers": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "setAccountResponse": {
                "type": "object",
                "properties": {
                    "set": {
                        "type": "boolean",
                        "description": "Confirms that the account change was set"
                    },
                    "acctId": {
                        "type": "string",
                        "description": "Confirms the account switched to."
                    }
                }
            },
            "signatureAndOwners": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account identifier"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/user"
                        }
                    },
                    "applicant": {
                        "type": "object",
                        "properties": {
                            "signatures": {
                                "type": "array",
                                "description": "All names attached to the account",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "singleHistoricalBar": {
                "type": "object",
                "properties": {
                    "t": {
                        "type": "integer",
                        "description": "Unix timestamp of the start (chronologically earlier) of the bar.",
                        "format": "int32"
                    },
                    "o": {
                        "type": "number",
                        "description": "Opening value of the bar."
                    },
                    "c": {
                        "type": "number",
                        "description": "Closing value of the bar."
                    },
                    "h": {
                        "type": "number",
                        "description": "High value of the bar."
                    },
                    "l": {
                        "type": "number",
                        "description": "Low value of the bar."
                    },
                    "v": {
                        "type": "number",
                        "description": "Volume value of the bar, returned only for \"Last\" barType."
                    }
                },
                "description": "Object containing data for a single OHLC bar."
            },
            "singleOrderSubmissionRequest": {
                "required": [
                    "conid",
                    "orderType",
                    "quantity",
                    "side",
                    "tif"
                ],
                "type": "object",
                "properties": {
                    "acctId": {
                        "type": "string",
                        "description": "Receiving account of the order ticket."
                    },
                    "conid": {
                        "type": "integer",
                        "description": "IB contract ID of the instrument.",
                        "format": "int32"
                    },
                    "conidex": {
                        "type": "string",
                        "description": "Contract ID and routing destination together in format 123456@EXCHANGE."
                    },
                    "secType": {
                        "type": "string",
                        "description": "IB asset class identifier."
                    },
                    "cOID": {
                        "type": "string",
                        "description": "Client-configurable order identifier."
                    },
                    "parentId": {
                        "type": "string",
                        "description": "If the order ticket is a child order in a bracket, the parentId field must be set equal to the cOID provided for the parent order."
                    },
                    "listingExchange": {
                        "type": "string",
                        "description": "The listing exchange of the instrument."
                    },
                    "isSingleGroup": {
                        "type": "boolean",
                        "description": "Indicates that all orders in the containing array are to be treated as an OCA group."
                    },
                    "outsideRTH": {
                        "type": "boolean",
                        "description": "Instructs IB to permit the order to execute outside of regular trading hours."
                    },
                    "auxPrice": {
                        "type": "number",
                        "description": "Additional price value used in certain order types, such as stop orders."
                    },
                    "ticker": {
                        "type": "string",
                        "description": "Ticker symbol of the instrument."
                    },
                    "trailingAmt": {
                        "type": "number",
                        "description": "Offset used with Trailing orders."
                    },
                    "trailingType": {
                        "type": "string",
                        "description": "Specifies the type of trailing used with a Trailing order.",
                        "enum": [
                            "amt",
                            "%"
                        ]
                    },
                    "referrer": {
                        "type": "string",
                        "description": "IB internal identifier for order entry UI element."
                    },
                    "cashQty": {
                        "type": "number",
                        "description": "Quantity of currency used with cash quantity orders."
                    },
                    "useAdaptive": {
                        "type": "boolean",
                        "description": "Instructs IB to apply the Price Management Algo."
                    },
                    "isCcyConv": {
                        "type": "boolean",
                        "description": "Indicates that a forex order is for currency conversion and should not entail a virtual forex position in the account, where applicable."
                    },
                    "orderType": {
                        "type": "string",
                        "description": "IB order type identifier."
                    },
                    "price": {
                        "type": "number",
                        "description": "Price of the order ticket, where applicable."
                    },
                    "side": {
                        "type": "string",
                        "description": "Side of the order ticket.",
                        "enum": [
                            "BUY",
                            "SELL"
                        ]
                    },
                    "tif": {
                        "type": "string",
                        "description": "Time in force of the order ticket.",
                        "enum": [
                            "DAY",
                            "IOC",
                            "GTC",
                            "OPG",
                            "PAX"
                        ]
                    },
                    "quantity": {
                        "type": "number",
                        "description": "Quantity of the order ticket in units of the instrument."
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The name of an execution algorithm."
                    },
                    "strategyParameters": {
                        "type": "object",
                        "properties": {
                            "PLACEHOLDER": {
                                "type": "string",
                                "description": "Placeholder -- these vary by algo (and not always type string, sometimes bool)"
                            }
                        },
                        "description": "Parameters governing the selected algorithm, if applicable."
                    }
                },
                "description": "A single order ticket."
            },
            "singleWatchlist": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Identifier of the watchlist."
                    },
                    "hash": {
                        "type": "string",
                        "description": "Internal use. Unique hash of the watchlist."
                    },
                    "name": {
                        "type": "string",
                        "description": "Human-readable display name of the watchlist."
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Indicates whether the watchlist can be edited."
                    },
                    "instruments": {
                        "type": "array",
                        "description": "Array of instruments contained in the watchlist.",
                        "items": {
                            "$ref": "#/components/schemas/singleWatchlistEntry"
                        }
                    }
                },
                "description": "Object detailing a single watchlist."
            },
            "singleWatchlistEntry": {
                "type": "object",
                "properties": {
                    "ST": {
                        "type": "string",
                        "description": "All-capital, shorthand security type identifier of the instrument.",
                        "enum": [
                            "STK",
                            "OPT",
                            "FUT",
                            "BOND",
                            "FUND",
                            "WAR",
                            "CASH",
                            "CRYPTO"
                        ]
                    },
                    "C": {
                        "type": "string",
                        "description": "Instrument conid as a string."
                    },
                    "conid": {
                        "type": "integer",
                        "description": "IB contract ID of the instrument.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "Complete display name of the instrument."
                    },
                    "fullName": {
                        "type": "string",
                        "description": "Full display presentation of the instrument symbol."
                    },
                    "assetClass": {
                        "type": "string",
                        "description": "All-capital, shorthand security type identifier of the instrument.",
                        "enum": [
                            "STK",
                            "OPT",
                            "FUT",
                            "BOND",
                            "FUND",
                            "WAR",
                            "CASH",
                            "CRYPTO"
                        ]
                    },
                    "ticker": {
                        "type": "string",
                        "description": "Symbol of the instrument."
                    },
                    "chineseName": {
                        "type": "string",
                        "description": "Rendering of the instrument name in Chinese."
                    }
                },
                "description": "Object containing watchlist entry for a single instrument."
            },
            "ssoValidateResponse": {
                "type": "object",
                "properties": {
                    "USER_ID": {
                        "type": "integer",
                        "description": "Internal user identifier.",
                        "format": "int32"
                    },
                    "USER_NAME": {
                        "type": "string",
                        "description": "current username logged in for the session."
                    },
                    "RESULT": {
                        "type": "boolean",
                        "description": "Confirms if validation was successful. True if session was validated; false if not."
                    },
                    "AUTH_TIME": {
                        "type": "integer",
                        "description": "Returns the time of authentication in epoch time.",
                        "format": "int32"
                    },
                    "SF_ENABLED": {
                        "type": "boolean",
                        "description": "(Internal use only)"
                    },
                    "IS_FREE_TRIAL": {
                        "type": "boolean",
                        "description": "Returns if the account is a trial account or a funded account."
                    },
                    "CREDENTIAL": {
                        "type": "string",
                        "description": "Returns the underlying username of the account."
                    },
                    "IP": {
                        "type": "string",
                        "description": "Internal use only. Does not reflect the IP address of the user."
                    },
                    "EXPIRES": {
                        "type": "integer",
                        "description": "Returns the time until SSO session expiration in milliseconds.",
                        "format": "int32"
                    },
                    "QUALIFIED_FOR_MOBILE_AUTH": {
                        "type": "boolean",
                        "description": "Returns if the customer requires two factor authentication."
                    },
                    "LANDING_APP": {
                        "type": "string",
                        "description": "Used for Client Portal (Internal use only)"
                    },
                    "IS_MASTER": {
                        "type": "boolean",
                        "description": "Returns whether the account is a master account (true) or subaccount (false)."
                    },
                    "lastAccessed": {
                        "type": "integer",
                        "description": "Returns the last time the user was accessed in epoch time.",
                        "format": "int32"
                    },
                    "loginType": {
                        "type": "integer",
                        "description": "Returns the login type. 1 for Live, 2 for Paper",
                        "format": "int32"
                    },
                    "PAPER_USER_NAME": {
                        "type": "string",
                        "description": "Returns the paper username for the account."
                    },
                    "features": {
                        "type": "object",
                        "properties": {
                            "envs": {
                                "type": "string",
                                "description": "Returns the connecting environment to distinguish production or paper."
                            },
                            "wlms": {
                                "type": "boolean",
                                "description": "Internal Use Only"
                            },
                            "realtime": {
                                "type": "boolean",
                                "description": "Returns if realtime market data is available"
                            },
                            "bond": {
                                "type": "boolean",
                                "description": "Returns if bonds can be traded."
                            },
                            "optionChains": {
                                "type": "boolean",
                                "description": "Returns if option chains can be retrieved in the account."
                            },
                            "calendar": {
                                "type": "boolean",
                                "description": "Returns if trading calendars are enabled"
                            },
                            "newMf": {
                                "type": "boolean",
                                "description": "Internal Use Only"
                            }
                        },
                        "description": "Returns supported features such as bonds and option trading."
                    },
                    "region": {
                        "type": "string",
                        "description": "Returns the region connected to internally."
                    }
                }
            },
            "stocks": {
                "type": "object",
                "additionalProperties": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Full company name for the given contract."
                            },
                            "chineseName": {
                                "type": "string",
                                "description": "Chinese name for the given company as unicode."
                            },
                            "assetClass": {
                                "type": "string",
                                "description": "Asset class for the given company."
                            },
                            "contracts": {
                                "type": "array",
                                "description": "A series of arrays pertaining to the same company listed by “name”. Typically differentiated based on currency of the primary exchange.\n",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "conid": {
                                            "type": "integer",
                                            "description": "Contract ID for the specific contract.",
                                            "format": "int32"
                                        },
                                        "exchange": {
                                            "type": "string",
                                            "description": "Primary exchange for the given contract."
                                        },
                                        "isUS": {
                                            "type": "boolean",
                                            "description": "States whether the contract is hosted in the United States or not."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Contains a series of objects for each symbol that matches the requested"
                    }
                }
            },
            "subAccounts": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "description": "An array containing all sub-accounts held by the advisor.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "description": "Contains Net liquidation and available equity of the given account Id."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Returns the account ID affiliated with the balance data."
                                }
                            }
                        }
                    }
                }
            },
            "successfulTickleResponse": {
                "type": "object",
                "properties": {
                    "session": {
                        "type": "string",
                        "description": "Returns the session token of the contract."
                    },
                    "ssoExpires": {
                        "type": "integer",
                        "description": "Returns the number of milliseconds until the current sso session expires.",
                        "format": "int32"
                    },
                    "collission": {
                        "type": "boolean",
                        "description": "(Internal Use Only)"
                    },
                    "userId": {
                        "type": "integer",
                        "description": "(Internal Use Only)",
                        "format": "int32"
                    },
                    "hmds": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string",
                                "description": "Relays any internal connection errors."
                            },
                            "authStatus": {
                                "type": "array",
                                "properties": {
                                    "authenticated": {
                                        "type": "boolean",
                                        "description": "Returns if the brokerage session is authenticated."
                                    },
                                    "connected": {
                                        "type": "boolean",
                                        "description": "Returns if the system is connected with HMDS"
                                    }
                                },
                                "description": "Returns authentication details."
                            }
                        },
                        "description": "Returns connection details for the historical market data server."
                    },
                    "iserver": {
                        "type": "object",
                        "properties": {
                            "authStatus": {
                                "$ref": "#/components/schemas/brokerageSessionStatus"
                            }
                        }
                    }
                }
            },
            "summaryMarketValueResponse": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "object",
                        "properties": {
                            "total_cash": {
                                "type": "string",
                                "description": "Lists the total cash held for the given currency."
                            },
                            "settled_cash": {
                                "type": "string",
                                "description": "Cash recognized at the time of settlement minus the purchases at time of trade, commissions, taxes, and fees."
                            },
                            "MTD Interest": {
                                "type": "string",
                                "description": "Total Month-to-date interest."
                            },
                            "stock": {
                                "type": "string",
                                "description": "Total cash value of stocks held."
                            },
                            "options": {
                                "type": "string",
                                "description": "Total cash value of options held."
                            },
                            "futures": {
                                "type": "string",
                                "description": "Total cash value of futures held."
                            },
                            "future_options": {
                                "type": "string",
                                "description": "Total cash value of future options held."
                            },
                            "funds": {
                                "type": "string",
                                "description": "Total cash value of funds held."
                            },
                            "dividends_receivable": {
                                "type": "string",
                                "description": "Total cash value of receivable dividends."
                            },
                            "mutual_funds": {
                                "type": "string",
                                "description": "Total cash value of mutual funds held."
                            },
                            "money_market": {
                                "type": "string",
                                "description": "Total cash value of money market securities held."
                            },
                            "bonds": {
                                "type": "string",
                                "description": "Total cash value of bonds held."
                            },
                            "Govt Bonds": {
                                "type": "string",
                                "description": "Total cash value of goverment bonds held."
                            },
                            "t_bills": {
                                "type": "string",
                                "description": "Total cash value of t-bill bonds held."
                            },
                            "warrants": {
                                "type": "string",
                                "description": "Total cash value of warrants held."
                            },
                            "issuer_option": {
                                "type": "string",
                                "description": "Total cash value of issuer options held."
                            },
                            "commodity": {
                                "type": "string",
                                "description": "Total cash value of commodities held."
                            },
                            "Notional CFD": {
                                "type": "string",
                                "description": "Total cash value of notional CFDs held."
                            },
                            "cfd": {
                                "type": "string",
                                "description": "Total cash value of CFDs held."
                            },
                            "net_liquidation": {
                                "type": "string",
                                "description": "Total cash value of your net liquidty."
                            },
                            "unrealized_pnl": {
                                "type": "string",
                                "description": "Total daily unrealized profit and loss."
                            },
                            "realized_pnl": {
                                "type": "string",
                                "description": "Total daily realized profit and loss."
                            },
                            "Exchange Rate": {
                                "type": "string",
                                "description": "Exchange rate of the labeled currency to the base currency."
                            }
                        },
                        "description": "Returns an object containing market value details of the currency and positions held using that currency."
                    }
                }
            },
            "summaryOfAccountBalancesResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "object",
                        "properties": {
                            "net_liquidation": {
                                "type": "string",
                                "description": "The basis for determining the price of the assets in your account."
                            },
                            "Nt Lqdtn Uncrtnty": {
                                "type": "string",
                                "description": "Displays the uncertainty of the Net Liquidating Value associated with after-hours price changes."
                            },
                            "equity_with_loan": {
                                "type": "string",
                                "description": "* `Cash Accounts` Settled cash\n * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.\n"
                            },
                            "Prvs Dy Eqty Wth Ln Vl": {
                                "type": "string",
                                "description": "The accounts equity balance including loan value."
                            },
                            "sec_gross_pos_val": {
                                "type": "string",
                                "description": "Equals the sum of the absolute value of all positions except cash, index futures and US treasuries."
                            },
                            "cash": {
                                "type": "string",
                                "description": "Total cash balance in the account"
                            },
                            "MTD Interest": {
                                "type": "string",
                                "description": "Total Month-to-date interest."
                            },
                            "Pndng Dbt Crd Chrgs": {
                                "type": "string",
                                "description": "Any pending charges for the IBKR debit account."
                            }
                        },
                        "description": "Contains total balance details for the account."
                    },
                    "commodities": {
                        "type": "object",
                        "properties": {
                            "net_liquidation": {
                                "type": "string",
                                "description": "The basis for determining the price of the assets in your account."
                            },
                            "equity_with_loan": {
                                "type": "string",
                                "description": "* `Cash Accounts` Settled cash\n * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.\n"
                            },
                            "cash": {
                                "type": "string",
                                "description": "Total cash balance in the account"
                            },
                            "MTD Interest": {
                                "type": "string",
                                "description": "Total Month-to-date interest."
                            },
                            "Pndng Dbt Crd Chrgs": {
                                "type": "string",
                                "description": "Any pending charges for the IBKR debit account."
                            }
                        },
                        "description": "Contains Commodity-specific balance details."
                    },
                    "securities": {
                        "type": "object",
                        "properties": {
                            "net_liquidation": {
                                "type": "string",
                                "description": "The basis for determining the price of the assets in your account."
                            },
                            "equity_with_loan": {
                                "type": "string",
                                "description": "* `Cash Accounts` Settled cash\n * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.\n"
                            },
                            "Prvs Dy Eqty Wth Ln Vl": {
                                "type": "string",
                                "description": "The accounts equity balance including loan value."
                            },
                            "sec_gross_pos_val": {
                                "type": "string",
                                "description": "Equals the sum of the absolute value of all positions except cash, index futures and US treasuries."
                            },
                            "cash": {
                                "type": "string",
                                "description": "Total cash balance in the account"
                            },
                            "MTD Interest": {
                                "type": "string",
                                "description": "Total Month-to-date interest."
                            },
                            "Pndng Dbt Crd Chrgs": {
                                "type": "string",
                                "description": "Any pending charges for the IBKR debit account."
                            }
                        },
                        "description": "Contains Security-specific balance details."
                    }
                }
            },
            "summaryOfAccountMarginResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "properties": {
                            "current_initial": {
                                "type": "string",
                                "description": "The minimum amount required to open a new position."
                            },
                            "Prdctd Pst-xpry Mrgn @ Opn": {
                                "type": "string",
                                "description": "Provides a projected “at expiration” margin value based on the soon-to-expire contracts in your portfolio."
                            },
                            "current_maint": {
                                "type": "string",
                                "description": "The amount of equity required to maintain your positions."
                            },
                            "projected_liquidity_inital_margin": {
                                "type": "string",
                                "description": "Provides a projected \"liquid\" initial margin value based on account liquidation value."
                            },
                            "Prjctd Lk Ahd Mntnnc Mrgn": {
                                "type": "string",
                                "description": "If it is 3:00 pm ET, the next calculation you’re looking ahead to is after the close, or the Overnight Initial Margin. If it’s 3:00 am ET, the next calculation will be at the market’s open.\n * `Securities` – Projected maintenance margin requirement as of next period’s margin change, in the base currency of the account. \n * `Commodities` – Maintenance margin requirement as of next period’s margin change in the base currency of the account based on current margin requirements, which are subject to change. This value depends on when you are viewing your margin requirements.\n"
                            },
                            "projected_overnight_initial_margin": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * Securities – Projected overnight initial margin requirement in the base currency of the account. \n  * Commodities – Overnight initial margin requirement in the base currency of the account based on current margin requirements, which are subject to change.\n"
                            },
                            "Prjctd Ovrnght Mntnnc Mrgn": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * `Securities` – Projected overnight maintenance margin requirement in the base currency of the account. \n  * `Commodities` – Overnight maintenance margin requirement in the base currency of the account based on current margin requirements, which are subject to change.\n"
                            }
                        }
                    },
                    "commodities": {
                        "properties": {
                            "current_initial": {
                                "type": "string",
                                "description": "The minimum amount required to open a new position."
                            },
                            "Prdctd Pst-xpry Mrgn @ Opn": {
                                "type": "string",
                                "description": "Provides a projected “at expiration” margin value based on the soon-to-expire contracts in your portfolio."
                            },
                            "current_maint": {
                                "type": "string",
                                "description": "The amount of equity required to maintain your positions."
                            },
                            "projected_liquidity_inital_margin": {
                                "type": "string",
                                "description": "Provides a projected \"liquid\" initial margin value based on account liquidation value."
                            },
                            "Prjctd Lk Ahd Mntnnc Mrgn": {
                                "type": "string",
                                "description": "If it is 3:00 pm ET, the next calculation you’re looking ahead to is after the close, or the Overnight Initial Margin. If it’s 3:00 am ET, the next calculation will be at the market’s open.\n * `Securities` – Projected maintenance margin requirement as of next period’s margin change, in the base currency of the account. \n * `Commodities` – Maintenance margin requirement as of next period’s margin change in the base currency of the account based on current margin requirements, which are subject to change. This value depends on when you are viewing your margin requirements.\n"
                            },
                            "projected_overnight_initial_margin": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * Securities – Projected overnight initial margin requirement in the base currency of the account. \n  * Commodities – Overnight initial margin requirement in the base currency of the account based on current margin requirements, which are subject to change.\n"
                            },
                            "Prjctd Ovrnght Mntnnc Mrgn": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * `Securities` – Projected overnight maintenance margin requirement in the base currency of the account. \n  * `Commodities` – Overnight maintenance margin requirement in the base currency of the account based on current margin requirements, which are subject to change.\n"
                            }
                        }
                    },
                    "securities": {
                        "properties": {
                            "current_initial": {
                                "type": "string",
                                "description": "The minimum amount required to open a new position."
                            },
                            "Prdctd Pst-xpry Mrgn @ Opn": {
                                "type": "string",
                                "description": "Provides a projected “at expiration” margin value based on the soon-to-expire contracts in your portfolio."
                            },
                            "current_maint": {
                                "type": "string",
                                "description": "The amount of equity required to maintain your positions."
                            },
                            "projected_liquidity_inital_margin": {
                                "type": "string",
                                "description": "Provides a projected \"liquid\" initial margin value based on account liquidation value."
                            },
                            "Prjctd Lk Ahd Mntnnc Mrgn": {
                                "type": "string",
                                "description": "If it is 3:00 pm ET, the next calculation you’re looking ahead to is after the close, or the Overnight Initial Margin. If it’s 3:00 am ET, the next calculation will be at the market’s open.\n * `Securities` – Projected maintenance margin requirement as of next period’s margin change, in the base currency of the account. \n * `Commodities` – Maintenance margin requirement as of next period’s margin change in the base currency of the account based on current margin requirements, which are subject to change. This value depends on when you are viewing your margin requirements.\n"
                            },
                            "projected_overnight_initial_margin": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * Securities – Projected overnight initial margin requirement in the base currency of the account. \n  * Commodities – Overnight initial margin requirement in the base currency of the account based on current margin requirements, which are subject to change.\n"
                            },
                            "Prjctd Ovrnght Mntnnc Mrgn": {
                                "type": "string",
                                "description": "Overnight refers to the window of time after the local market trading day is closed. \n  * `Securities` – Projected overnight maintenance margin requirement in the base currency of the account. \n  * `Commodities` – Overnight maintenance margin requirement in the base currency of the account based on current margin requirements, which are subject to change.  \n"
                            }
                        }
                    }
                }
            },
            "tickleResponse": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/successfulTickleResponse"
                    },
                    {
                        "$ref": "#/components/schemas/failedTickleResponse"
                    }
                ]
            },
            "tradesResponse": {
                "type": "array",
                "description": "Array of objects representing executions.",
                "items": {
                    "type": "object",
                    "properties": {
                        "execution_id": {
                            "type": "string",
                            "description": "IB-assigned execution identifier."
                        },
                        "symbol": {
                            "type": "string",
                            "description": "Symbol of the instrument involved in the execution."
                        },
                        "supports_tax_opt": {
                            "type": "string",
                            "description": "Indicates whether the order is supported by IB's Tax Optimization tool.",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "side": {
                            "type": "string",
                            "description": "Side of the execution.",
                            "enum": [
                                "B",
                                "S"
                            ]
                        },
                        "order_description": {
                            "type": "string",
                            "description": "Human-readable description of the outcome of the execution."
                        },
                        "trade_time": {
                            "type": "string",
                            "description": "UTC date and time of the execution in format YYYYMMDD-hh:mm:ss."
                        },
                        "trade_time_r": {
                            "type": "integer",
                            "description": "Unix timestamp of the execution time in milliseconds.",
                            "format": "int32"
                        },
                        "size": {
                            "type": "number",
                            "description": "The size of the execution in units of the instrument."
                        },
                        "price": {
                            "type": "string",
                            "description": "The price at which the execution occurred."
                        },
                        "order_ref": {
                            "type": "string",
                            "description": "The client-provided customer order identifier. Specified via cOID during order submission in the Web API."
                        },
                        "submitter": {
                            "type": "string",
                            "description": "The IB username that originated the order ticket against which the execution occurred."
                        },
                        "exchange": {
                            "type": "string",
                            "description": "The exchange or other venue on which the execution occurred."
                        },
                        "commission": {
                            "type": "string",
                            "description": "Commissions incurred by the execution. May also include"
                        },
                        "net_amount": {
                            "type": "number",
                            "description": "net_amount"
                        },
                        "account": {
                            "type": "string",
                            "description": "The IB account ID of the account that received the execution."
                        },
                        "accountCode": {
                            "type": "string",
                            "description": "The IB account ID of the account that received the execution."
                        },
                        "account_allocation_name": {
                            "type": "string",
                            "description": "The IB account ID of the account that received the execution."
                        },
                        "company_name": {
                            "type": "string",
                            "description": "Name of business associated with instrument, or otherwise description of instrument."
                        },
                        "contract_description_1": {
                            "type": "string",
                            "description": "Human-readable description of the order's instrument."
                        },
                        "sec_type": {
                            "type": "string",
                            "description": "IB asset class identifier.",
                            "enum": [
                                "STK",
                                "OPT",
                                "FUT",
                                "FOP",
                                "CASH",
                                "CRYPTO",
                                "BOND",
                                "WAR",
                                "FUND"
                            ]
                        },
                        "listing_exchange": {
                            "type": "string",
                            "description": "The primary exchange on which the instrument is listed."
                        },
                        "conid": {
                            "type": "string",
                            "description": "Contract ID of the order's instrument."
                        },
                        "conidEx": {
                            "type": "string",
                            "description": "Contract ID and routing destination in format 123456@EXCHANGE."
                        },
                        "clearing_id": {
                            "type": "string",
                            "description": "Identifier of the firm clearing the trade. Value is \"IB\" if account is cleared by Interactive Brokers."
                        },
                        "clearing_name": {
                            "type": "string",
                            "description": "Name of the firm clearing the trade. Value is \"IB\" if account is cleared by Interactive Brokers."
                        },
                        "liquidation_trade": {
                            "type": "string",
                            "description": "Indicates whether the trade is the result of a liquidiation by IB.",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "is_event_trading": {
                            "type": "string",
                            "description": "Indicates whether the order ticket is an Event Trading order.",
                            "enum": [
                                "0",
                                "1"
                            ]
                        }
                    },
                    "description": "Object containing details of a single execution."
                }
            },
            "tradingSchedule": {
                "type": "array",
                "description": "trading's schedules",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "Exchange parameter id"
                        },
                        "tradeVenueId": {
                            "type": "string",
                            "description": "Reference on a trade venue of given exchange parameter"
                        },
                        "exchange": {
                            "type": "string",
                            "description": "short exchange name"
                        },
                        "description": {
                            "type": "string",
                            "description": "exchange description"
                        },
                        "timezone": {
                            "type": "string",
                            "description": "References the time zone corresponding to the listed dates and times."
                        },
                        "schedules": {
                            "type": "array",
                            "description": "Always contains at least one ‘tradingTime’ and zero or more ‘sessionTime’ tags"
                        }
                    }
                }
            },
            "transactionsResponse": {
                "type": "object",
                "properties": {
                    "rc": {
                        "type": "integer",
                        "description": "Client portal use only",
                        "format": "int32"
                    },
                    "nd": {
                        "type": "integer",
                        "description": "Client portal use only",
                        "format": "int32"
                    },
                    "rpnl": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "array",
                                "description": "Returns an array of realized pnl objects."
                            },
                            "items": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "description": "Specifies the date for the transaction."
                                    },
                                    "cur": {
                                        "type": "string",
                                        "description": "Specifies the currency of the realized value."
                                    },
                                    "fxRate": {
                                        "type": "integer",
                                        "description": "Returns the foreign exchnage rate.",
                                        "format": "int32"
                                    },
                                    "side": {
                                        "type": "string",
                                        "description": "Determines if the day was a loss or gain * `L` - LOSS * `G` - GAIN\n",
                                        "enum": [
                                            "L",
                                            "G"
                                        ]
                                    },
                                    "acctid": {
                                        "type": "string",
                                        "description": "Returns the account ID the trade transacted on."
                                    },
                                    "amt": {
                                        "type": "string",
                                        "description": "Returns the amount gained or lost on the day."
                                    },
                                    "conid": {
                                        "type": "string",
                                        "description": "Returns the contract ID of the transaction."
                                    }
                                }
                            },
                            "amt": {
                                "type": "string",
                                "description": "Provides the total amount gained or lost from all days returned"
                            }
                        },
                        "description": "Returns the object containing the realized pnl for the contract on the date."
                    },
                    "currency": {
                        "type": "string",
                        "description": "Returns the currency the account is traded in."
                    },
                    "from": {
                        "type": "integer",
                        "description": "Returns the epoch time for the start of requests.",
                        "format": "int32"
                    },
                    "id": {
                        "type": "string",
                        "description": "Returns the request identifier, getTransactions."
                    },
                    "to": {
                        "type": "integer",
                        "description": "Returns the epoch time for the end of requests.",
                        "format": "int32"
                    },
                    "includesRealTime": {
                        "type": "boolean",
                        "description": "Returns if the trades are up to date or not."
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Lists all supported transaction values.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "description": "Reutrns the human-readable datetime of the transaction."
                                },
                                "cur": {
                                    "type": "string",
                                    "description": "Returns the currency of the traded insturment."
                                },
                                "fxRate": {
                                    "type": "integer",
                                    "description": "Returns the forex conversion rate.",
                                    "format": "int32"
                                },
                                "pr": {
                                    "type": "integer",
                                    "description": "Returns the price per share of the transaction.",
                                    "format": "int32"
                                },
                                "qty": {
                                    "type": "integer",
                                    "description": "Returns the total quantity traded. Will display a negative value for sell orders, and a positive value for buy orders.\n",
                                    "format": "int32"
                                },
                                "acctid": {
                                    "type": "string",
                                    "description": "Returns the account which made the transaction."
                                },
                                "amt": {
                                    "type": "integer",
                                    "description": "Returns the total value of the trade.",
                                    "format": "int32"
                                },
                                "conid": {
                                    "type": "integer",
                                    "description": "Returns the contract identifier.",
                                    "format": "int32"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Returns the order side."
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "Returns the long name for the company."
                                }
                            }
                        }
                    }
                }
            },
            "trsrvSecDefResponse": {
                "type": "object",
                "properties": {
                    "secdef": {
                        "type": "array"
                    }
                },
                "description": "a contract's security definition"
            },
            "typecodes": {
                "description": "Many FYI endpoints reference a “typecode” value. The table below lists the available codes and what they correspond to.\n  * `BA` - Borrow Availability\n  * `CA` - Comparable Algo\n  * `DA` - Dividends Advisory\n  * `EA` - Upcoming Earnings\n  * `MF` - Mutual Fund Advisory\n  * `OE` - Option Expiration\n  * `PR` - Portfolio Builder Rebalance\n  * `SE` - Suspend Order on Economic Event\n  * `SG` - Short Term Gain turning Long Term\n  * `SM` - System Messages\n  * `T2` - Assignment Realizing Long-Term Gains\n  * `TO` - Takeover\n  * `UA` - User Alert\n  * `M8` - M871 Trades\n  * `PS` - Platform Use Suggestions\n  * `DL` - Unexercised Option Loss Prevention Reminder\n  * `PT` - Position Transfer\n  * `CB` - Missing Cost Basis\n  * `MS` - Milestones\n  * `TD` - MiFID || 10% Deprecation Notice\n  * `ST` - Save Taxes\n  * `TI` - Trade Idea\n  * `CT` - Cash Transfer\n",
                "enum": [
                    "BA",
                    "CA",
                    "DA",
                    "EA",
                    "MF",
                    "OE",
                    "PR",
                    "SE",
                    "SG",
                    "SM",
                    "T2",
                    "TO",
                    "UA",
                    "M8",
                    "PS",
                    "DL",
                    "PT",
                    "CB",
                    "MS",
                    "TD",
                    "ST",
                    "TI",
                    "CT"
                ]
            },
            "user": {
                "type": "object",
                "properties": {
                    "roleId": {
                        "type": "string",
                        "description": "The role of the username as it relates to the account"
                    },
                    "hasRightCodeInd": {
                        "type": "boolean",
                        "description": "Internally used"
                    },
                    "entity": {
                        "type": "object",
                        "properties": {
                            "entityName": {
                                "type": "string",
                                "description": "The full entity's name, concatenating the first and last name fields"
                            },
                            "entityType": {
                                "type": "string",
                                "description": "The type of entity assigned to the user",
                                "enum": [
                                    "INDIVIDUAL",
                                    "Joint",
                                    "ORG"
                                ]
                            },
                            "firstName": {
                                "type": "string",
                                "description": "The first name of the user"
                            },
                            "lastName": {
                                "type": "string",
                                "description": "The last name of the user"
                            }
                        },
                        "description": "Provide information about the particular entity"
                    }
                }
            },
            "userAccountsResponse": {
                "type": "object",
                "properties": {
                    "accounts": {
                        "type": "array",
                        "description": "Returns an array of all accessible accountIds.",
                        "items": {
                            "type": "string",
                            "description": "An accessible accountId"
                        }
                    },
                    "acctProps": {
                        "type": "object",
                        "properties": {
                            "U1234567": {
                                "type": "object",
                                "properties": {
                                    "hasChildAccounts": {
                                        "type": "boolean"
                                    },
                                    "supportsCashQty": {
                                        "type": "boolean"
                                    },
                                    "noFXConv": {
                                        "type": "boolean"
                                    },
                                    "isProp": {
                                        "type": "boolean"
                                    },
                                    "supportsFractions": {
                                        "type": "boolean"
                                    },
                                    "allowCustomerTime": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "description": "Returns an json object for each accessible account’s properties."
                    },
                    "aliases": {
                        "type": "object",
                        "properties": {
                            "U1234567": {
                                "type": "string"
                            }
                        }
                    },
                    "allowFeatures": {
                        "type": "object",
                        "properties": {
                            "showGFIS": {
                                "type": "boolean"
                            },
                            "showEUCostReport": {
                                "type": "boolean"
                            },
                            "allowEventContract": {
                                "type": "boolean"
                            },
                            "allowFXConv": {
                                "type": "boolean"
                            },
                            "allowFinancialLens": {
                                "type": "boolean"
                            },
                            "allowMTA": {
                                "type": "boolean"
                            },
                            "allowTypeAhead": {
                                "type": "boolean"
                            },
                            "allowEventTrading": {
                                "type": "boolean"
                            },
                            "snapshotRefreshTimeout": {
                                "type": "integer",
                                "format": "int64",
                                "example": 30
                            },
                            "liteUser": {
                                "type": "boolean"
                            },
                            "showWebNews": {
                                "type": "boolean"
                            },
                            "research": {
                                "type": "boolean"
                            },
                            "debugPnl": {
                                "type": "boolean"
                            },
                            "showTaxOpt": {
                                "type": "boolean"
                            },
                            "showImpactDashboard": {
                                "type": "boolean"
                            },
                            "allowDynAccount": {
                                "type": "boolean"
                            },
                            "allowCrypto": {
                                "type": "boolean"
                            },
                            "allowedAssetTypes": {
                                "type": "string"
                            }
                        }
                    },
                    "chartPeriods": {
                        "type": "object",
                        "properties": {
                            "STK": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "CFD": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "OPT": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "FOP": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "WAR": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "IOPT": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "FUT": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "CASH": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "IND": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "BOND": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "FUND": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "CMDTY": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "PHYSS": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "CRYPTO": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "profiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "selectedAccount": {
                        "type": "string"
                    },
                    "serverInfo": {
                        "type": "object",
                        "properties": {
                            "serverName": {
                                "type": "string"
                            },
                            "serverVersion": {
                                "type": "string"
                            }
                        }
                    },
                    "sessionId": {
                        "type": "string"
                    },
                    "isFt": {
                        "type": "boolean"
                    },
                    "isPaper": {
                        "type": "boolean"
                    }
                }
            },
            "utcDateTime": {
                "type": "string",
                "description": "UTC datetime string in format YYYYMMDD-hh:mm:ss.",
                "example": "20231018-16:00:00"
            },
            "watchlistDeleteSuccess": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "deleted": {
                                "type": "string",
                                "description": "Watchlist ID of the deleted watchlist."
                            }
                        }
                    },
                    "action": {
                        "type": "string",
                        "description": "Internal use. Always has value 'context'.",
                        "enum": [
                            "context"
                        ]
                    },
                    "MID": {
                        "type": "string",
                        "description": "Internal use. Number of times endpoint has been visited during session."
                    }
                },
                "description": "Object detailing the successful deletion of a watchlist."
            },
            "watchlistsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "scanners_only": {
                                "type": "boolean",
                                "description": "Indicates if query results contain only market scanners."
                            },
                            "show_scanners": {
                                "type": "boolean",
                                "description": "Indicates if market scanners are included in query results."
                            },
                            "bulk_delete": {
                                "type": "boolean",
                                "description": "Indicates if username's watchlists can be bulk-deleted."
                            },
                            "user_lists": {
                                "type": "array",
                                "description": "Array of objects detailing the watchlists saved for the username in use in the current Web API session.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "is_open": {
                                            "type": "boolean",
                                            "description": "Internal use. Indicates if the watchlist is currently in use."
                                        },
                                        "read_only": {
                                            "type": "boolean",
                                            "description": "Indicates if the watchlist can be edited."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Display name of the watchlist."
                                        },
                                        "modified": {
                                            "type": "integer",
                                            "description": "Unix timestamp in milliseconds of the last modification of the watchlist.",
                                            "format": "int32"
                                        },
                                        "id": {
                                            "type": "string",
                                            "description": "Watchlist ID of the watchlist."
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "Always has value 'watchlist'.",
                                            "enum": [
                                                "watchlist"
                                            ]
                                        }
                                    },
                                    "description": "Details of a single watchlist."
                                }
                            }
                        },
                        "description": "Contains the watchlist query results."
                    },
                    "action": {
                        "type": "string",
                        "description": "Internal use. Always has value 'content'.",
                        "enum": [
                            "content"
                        ]
                    },
                    "MID": {
                        "type": "string",
                        "description": "Internal use. Number of times endpoint has been visited during session."
                    }
                },
                "description": "Object containing a successful query for watchlists saved for the username in use in the current Web API session."
            }
        },
        "responses": {
            "BadRequest": {
                "description": "bad request",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "$ref": "#/components/schemas/errorResponse"
                        }
                    }
                }
            },
            "IServerAccountBadRequest": {
                "description": "bad request; passed input cannot pass initial validation and detected right away",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "$ref": "#/components/schemas/errorResponse"
                        },
                        "examples": {
                            "invalid-account-id": {
                                "value": {
                                    "error": "Bad Request: accountId is not valid: 11110000",
                                    "statusCode": 400
                                }
                            },
                            "account-is-not-set": {
                                "value": {
                                    "error": "Bad Request: Please query /accounts first",
                                    "statusCode": 400
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.\n",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/errorOnlyResponse"
                        }
                    }
                }
            },
            "NoContent": {
                "description": "no content"
            },
            "ServiceUnavailable": {
                "description": "service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned\n",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "$ref": "#/components/schemas/errorResponse"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "access denied",
                "content": {
                    "text/plain; charset=utf-8": {
                        "schema": {
                            "type": "string",
                            "description": "reason why access denied",
                            "nullable": true
                        }
                    }
                }
            }
        },
        "parameters": {
            "AccountIdRequestParam": {
                "name": "accountId",
                "in": "query",
                "description": "Specifies the account id to retrieve information",
                "required": true,
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "string",
                    "example": "UXXXX"
                }
            },
            "AuthorizationHeaderParam": {
                "name": "authorization",
                "in": "header",
                "description": "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...).",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string",
                    "example": "Bearer eyJ0eXAiOiJKV1..."
                }
            },
            "TaxYearRequestParam": {
                "name": "year",
                "in": "query",
                "description": "Specifies the tax year to retrieve information",
                "required": true,
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2024
                }
            },
            "clientIdPathParam": {
                "name": "client-id",
                "in": "path",
                "description": "The client's clientId",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "string",
                    "example": "abc123"
                }
            },
            "clientInstructionIdPathParam": {
                "name": "clientInstructionId",
                "in": "path",
                "description": "The target instruction id.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": -1988905739
                }
            },
            "instructionIdPathParam": {
                "name": "instructionId",
                "in": "path",
                "description": "The target instruction id.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": -1988905739
                }
            },
            "instructionSetIdPathParam": {
                "name": "instructionSetId",
                "in": "path",
                "description": "The target instruction set id.",
                "required": true,
                "style": "simple",
                "explode": false,
                "schema": {
                    "type": "integer",
                    "format": "int32",
                    "example": -1988905739
                }
            }
        },
        "examples": {
            "DailyHTML": {
                "value": {
                    "accountId": "UXXXX",
                    "startDate": "20230102",
                    "endDate": "20230102",
                    "mimeType": "text/html"
                }
            },
            "DailyHTMLGZip": {
                "value": {
                    "accountId": "UXXXX",
                    "startDate": "20230102",
                    "endDate": "20230102",
                    "mimeType": "text/html",
                    "gzip": true
                }
            },
            "MonthlyPDF": {
                "value": {
                    "accountId": "UXXXX",
                    "startDate": "202301",
                    "endDate": "202301",
                    "mimeType": "application/pdf"
                }
            }
        },
        "requestBodies": {
            "CreateBrowserSessionRequestBody": {
                "description": "Create browser session on behalf of end-user.",
                "content": {
                    "application/jwt": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateBrowserSessionRequest"
                        }
                    }
                },
                "required": true
            },
            "CreateSessionRequestBody": {
                "description": "Create session on behalf of end-user.",
                "content": {
                    "application/jwt": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateSessionRequest"
                        }
                    }
                },
                "required": true
            },
            "SignedJwtEchoRequestBody": {
                "description": "Create a Signed JWT echo request.",
                "content": {
                    "application/jwt": {
                        "schema": {
                            "$ref": "#/components/schemas/SignedJwtEchoRequest"
                        }
                    }
                },
                "required": true
            }
        },
        "extensions": {}
    },
    "x-tagGroups": [
        {
            "name": "Trading",
            "tags": [
                "Trading Accounts",
                "Trading Alerts",
                "Trading Contracts",
                "Trading FA Allocation Management",
                "Trading FYIs and Notifications",
                "Trading Market Data",
                "Trading OAuth 1.0a",
                "Trading Orders",
                "Trading Portfolio",
                "Trading Portfolio Analyst",
                "Trading Scanner",
                "Trading Session",
                "Trading Watchlists",
                "Trading Websocket"
            ]
        },
        {
            "name": "Authorization",
            "tags": [
                "Authorization Token",
                "Authorization SSO Sessions"
            ]
        },
        {
            "name": "Account Management",
            "tags": [
                "Account Management Accounts",
                "Account Management Banking",
                "Account Management Reports",
                "Account Management Utilities"
            ]
        },
        {
            "name": "Utilities",
            "tags": [
                "Utilities Echo"
            ]
        }
    ]
}